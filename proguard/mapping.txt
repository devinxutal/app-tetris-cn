a -> a:
    java.util.Map a -> a
    java.util.Map b -> b
    void a(d,a$a,android.net.Uri,android.webkit.WebView) -> a
    boolean a(android.net.Uri) -> a
    boolean b(android.net.Uri) -> b
    boolean c(android.net.Uri) -> c
    void a(android.webkit.WebView) -> a
    void b(android.webkit.WebView) -> b
a$1 -> b:
    int[] a -> a
a$a -> c:
    a$a a -> a
    a$a b -> b
    a$a[] c -> c
    a$a[] values() -> values
    a$a valueOf(java.lang.String) -> valueOf
b -> d:
    c a -> a
    d b -> b
    java.lang.String c -> c
    void a(java.net.HttpURLConnection) -> a
    void b(java.net.HttpURLConnection) -> b
    void c(java.net.HttpURLConnection) -> c
    void d(java.net.HttpURLConnection) -> d
    java.lang.Void a(java.lang.String[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
c -> e:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.Object c -> c
    long d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    b g -> g
    d h -> h
    android.webkit.WebView i -> i
    java.lang.String j -> j
    com.google.ads.AdRequest$ErrorCode k -> k
    boolean l -> l
    boolean m -> m
    void a(long) -> a
    com.google.ads.AdRequest$ErrorCode a(com.google.ads.AdRequest[]) -> a
    long b() -> b
    void onCancelled() -> onCancelled
    void a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String) -> a
    void a(com.google.ads.AdRequest$ErrorCode) -> a
    void a() -> a
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
c$a -> f:
    c a -> a
cn.perfectgames.amaze.record.AbstractRecordComparator -> a.a.a.a.a:
cn.perfectgames.amaze.record.DefaultRecordComparator -> a.a.a.a.b:
    int compare(cn.perfectgames.amaze.record.Record,cn.perfectgames.amaze.record.Record) -> a
cn.perfectgames.amaze.record.LocalRecordManager -> a.a.a.a.c:
    android.content.Context context -> a
    int gameMode -> b
    cn.perfectgames.amaze.record.RecordComparator recordComparator -> c
    java.util.Map recordsMap -> d
    int first -> e
    int rangeLength -> f
    cn.perfectgames.amaze.record.Record submittedRecord -> g
    void submitRecord(cn.perfectgames.amaze.record.Record) -> a
    void setRangeLength$13462e() -> a
    boolean hasNextRange() -> b
    boolean hasPreviousRange() -> c
    java.util.List loadNextPage() -> d
    java.util.List loadPreviousPage() -> e
    java.util.List loadPageAtRank(int) -> a
    java.util.LinkedList getAllRecordsForCurrentMode() -> f
    void loadRecords(int) -> b
    java.io.File getScoreFile(int) -> c
cn.perfectgames.amaze.record.Record -> a.a.a.a.d:
    int rank -> a
    java.lang.String player -> b
    int mode -> c
    int level -> d
    double result -> e
    double minorResult1 -> f
    double minorResult2 -> g
    double minorResult3 -> h
    int getLevel() -> a
    void setLevel(int) -> a
    int getRank() -> b
    void setRank(int) -> b
    java.lang.String getPlayer() -> c
    void setPlayer(java.lang.String) -> a
    int getMode() -> d
    void setMode$13462e() -> e
    double getResult() -> f
    void setResult(double) -> a
    java.lang.String serialize() -> g
    boolean deserialize(java.lang.String) -> b
    java.lang.Object clone() -> clone
cn.perfectgames.amaze.record.RecordComparator -> a.a.a.a.e:
    int compare(cn.perfectgames.amaze.record.Record,cn.perfectgames.amaze.record.Record) -> a
com.a.a.a.a -> com.a.a.a.a:
    android.os.Bundle a(android.os.Bundle) -> a
com.a.a.a.a$a -> com.a.a.a.b:
    com.a.a.a.a a(android.os.IBinder) -> a
    boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.a.a.a.a$a$a -> com.a.a.a.c:
    android.os.IBinder a -> a
    android.os.IBinder asBinder() -> asBinder
    android.os.Bundle a(android.os.Bundle) -> a
com.devinxutal.tetris.activities.AboutActivity -> com.devinxutal.tetris.activities.AboutActivity:
    void onCreate(android.os.Bundle) -> onCreate
    void preferenceChanged() -> a
com.devinxutal.tetris.activities.BaseActivity -> com.devinxutal.tetris.activities.BaseActivity:
    java.lang.String infoDialogMessage -> a
    java.lang.String progressDialogMessage -> b
    void onCreate(android.os.Bundle) -> onCreate
    void onPause() -> onPause
    void onResume() -> onResume
    void setProgressDialogMessage(java.lang.String) -> a
    void showToast(java.lang.String) -> b
    android.app.Dialog createErrorDialog(java.lang.String) -> c
    android.app.Dialog onCreateDialog(int) -> onCreateDialog
    void onPrepareDialog(int,android.app.Dialog) -> onPrepareDialog
    boolean isRequestCancellation$698b7e35() -> b
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void preferenceChanged() -> a
com.devinxutal.tetris.activities.LeaderBoardActivity -> com.devinxutal.tetris.activities.LeaderBoardActivity:
    android.os.Handler adHandler -> b
    com.devinxutal.tetris.util.AdDaemon adDaemon -> c
    cn.perfectgames.amaze.record.LocalRecordManager localRecordManager -> d
    com.devinxutal.tetris.activities.LeaderBoardActivity$CurrentOperationType currentOperation -> e
    com.scoreloop.client.android.core.controller.ScoresController scoresController -> f
    com.scoreloop.client.android.core.controller.UserController userController -> g
    com.devinxutal.tetris.ui.LeaderBoardView leaderBoard -> h
    com.devinxutal.tetris.activities.LeaderBoardActivity$SL searchList -> i
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    boolean alreadyLoading() -> c
    void loadTopRange() -> d
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void onResume() -> onResume
    void onClick(android.view.View) -> onClick
    void buttonClickced(int) -> a
    void updateButtonText() -> e
    void updateButtonStatus() -> f
    java.util.List convertFromAmazeRecords(java.util.List) -> b
    void preferenceChanged() -> a
    void access$0(com.devinxutal.tetris.activities.LeaderBoardActivity,com.devinxutal.tetris.activities.LeaderBoardActivity$CurrentOperationType) -> a
    com.devinxutal.tetris.activities.LeaderBoardActivity$CurrentOperationType access$1(com.devinxutal.tetris.activities.LeaderBoardActivity) -> a
    void access$2(com.devinxutal.tetris.activities.LeaderBoardActivity,java.lang.String) -> a
    com.devinxutal.tetris.ui.LeaderBoardView access$3(com.devinxutal.tetris.activities.LeaderBoardActivity) -> b
    void access$4(com.devinxutal.tetris.activities.LeaderBoardActivity) -> c
    com.scoreloop.client.android.core.controller.ScoresController access$5(com.devinxutal.tetris.activities.LeaderBoardActivity) -> d
    java.util.List access$6$3ba09699(java.util.List) -> a
    com.scoreloop.client.android.core.controller.UserController access$7(com.devinxutal.tetris.activities.LeaderBoardActivity) -> e
    com.devinxutal.tetris.activities.LeaderBoardActivity$SL access$8(com.devinxutal.tetris.activities.LeaderBoardActivity) -> f
    void access$9(com.devinxutal.tetris.activities.LeaderBoardActivity,com.devinxutal.tetris.activities.LeaderBoardActivity$SL) -> a
    void access$10(com.devinxutal.tetris.activities.LeaderBoardActivity) -> g
    void access$11(com.devinxutal.tetris.activities.LeaderBoardActivity) -> h
com.devinxutal.tetris.activities.LeaderBoardActivity$1 -> com.devinxutal.tetris.activities.a:
    com.devinxutal.tetris.activities.LeaderBoardActivity this$0 -> a
    android.widget.EditText val$email -> b
    android.widget.EditText val$name -> c
    void onClick(android.content.DialogInterface,int) -> onClick
com.devinxutal.tetris.activities.LeaderBoardActivity$2 -> com.devinxutal.tetris.activities.b:
    com.devinxutal.tetris.activities.LeaderBoardActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.devinxutal.tetris.activities.LeaderBoardActivity$3 -> com.devinxutal.tetris.activities.c:
    com.devinxutal.tetris.activities.LeaderBoardActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.devinxutal.tetris.activities.LeaderBoardActivity$CurrentOperationType -> com.devinxutal.tetris.activities.d:
    com.devinxutal.tetris.activities.LeaderBoardActivity$CurrentOperationType NONE -> a
    com.devinxutal.tetris.activities.LeaderBoardActivity$CurrentOperationType OTHER -> b
    com.devinxutal.tetris.activities.LeaderBoardActivity$CurrentOperationType ME -> c
    com.devinxutal.tetris.activities.LeaderBoardActivity$CurrentOperationType GET_USER_INFO -> d
    com.devinxutal.tetris.activities.LeaderBoardActivity$CurrentOperationType UPDATE_USER_INFO -> e
    com.devinxutal.tetris.activities.LeaderBoardActivity$CurrentOperationType[] ENUM$VALUES -> f
    com.devinxutal.tetris.activities.LeaderBoardActivity$CurrentOperationType[] values() -> values
    com.devinxutal.tetris.activities.LeaderBoardActivity$CurrentOperationType valueOf(java.lang.String) -> valueOf
com.devinxutal.tetris.activities.LeaderBoardActivity$SL -> com.devinxutal.tetris.activities.e:
    com.devinxutal.tetris.activities.LeaderBoardActivity$SL Local -> a
    com.devinxutal.tetris.activities.LeaderBoardActivity$SL Global -> b
    com.devinxutal.tetris.activities.LeaderBoardActivity$SL Buddies -> c
    com.devinxutal.tetris.activities.LeaderBoardActivity$SL[] ENUM$VALUES -> d
    com.devinxutal.tetris.activities.LeaderBoardActivity$SL[] values() -> values
    com.devinxutal.tetris.activities.LeaderBoardActivity$SL valueOf(java.lang.String) -> valueOf
com.devinxutal.tetris.activities.LeaderBoardActivity$ScoresControllerObserver -> com.devinxutal.tetris.activities.f:
    com.devinxutal.tetris.activities.LeaderBoardActivity this$0 -> a
    void requestControllerDidFail(com.scoreloop.client.android.core.controller.RequestController,java.lang.Exception) -> requestControllerDidFail
    void requestControllerDidReceiveResponse(com.scoreloop.client.android.core.controller.RequestController) -> requestControllerDidReceiveResponse
com.devinxutal.tetris.activities.LeaderBoardActivity$UserUpdateObserver -> com.devinxutal.tetris.activities.g:
    com.devinxutal.tetris.activities.LeaderBoardActivity this$0 -> a
    void requestControllerDidFail(com.scoreloop.client.android.core.controller.RequestController,java.lang.Exception) -> requestControllerDidFail
    void requestControllerDidReceiveResponse(com.scoreloop.client.android.core.controller.RequestController) -> requestControllerDidReceiveResponse
    void requestControllerDidReceiveGeneralError(java.lang.Exception) -> a
com.devinxutal.tetris.activities.MainActivity -> com.devinxutal.tetris.activities.MainActivity:
    byte[] SALT -> b
    android.graphics.Typeface buttonFont -> c
    android.os.Handler adHandler -> d
    com.devinxutal.tetris.util.AdDaemon adDaemon -> e
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void onPause() -> onPause
    void onResume() -> onResume
    void onClick(android.view.View) -> onClick
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void preferenceChanged() -> a
    void customizeButton(android.widget.Button) -> a
com.devinxutal.tetris.activities.MainActivity$1 -> com.devinxutal.tetris.activities.h:
    com.devinxutal.tetris.activities.MainActivity this$0 -> a
    void termsOfServiceControllerDidFinish(com.scoreloop.client.android.core.controller.TermsOfServiceController,java.lang.Boolean) -> termsOfServiceControllerDidFinish
com.devinxutal.tetris.activities.MainActivity$2 -> com.devinxutal.tetris.activities.i:
    com.devinxutal.tetris.activities.MainActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.devinxutal.tetris.activities.MainActivity$5 -> com.devinxutal.tetris.activities.j:
    com.devinxutal.tetris.activities.MainActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.devinxutal.tetris.activities.PlaygroundActivity -> com.devinxutal.tetris.activities.PlaygroundActivity:
    com.devinxutal.tetris.control.GameController gameController -> b
    com.devinxutal.tetris.ui.ControlView controlView -> c
    android.view.ViewGroup successScreen -> d
    android.view.ViewGroup pausedScreen -> e
    android.widget.Toast toast -> f
    android.widget.Button successScreenBackButton -> g
    android.widget.Button successScreenSubmitButton -> h
    android.widget.Button successScreenReplayButton -> i
    android.widget.Button pauseScreenOptionButton -> j
    android.widget.Button pauseScreenQuitButton -> k
    android.widget.Button pauseScreenResumeButton -> l
    com.devinxutal.tetris.activities.PlaygroundActivity$State state -> m
    long elapsedTime -> n
    boolean collapsed -> o
    android.hardware.SensorManager sensorManager -> p
    boolean sensorRunning -> q
    boolean useJoyStick -> r
    boolean useAccelerometer -> s
    com.devinxutal.tetris.activities.PlaygroundActivity$AccelerometerListener accelerometerListener -> t
    com.devinxutal.tetris.activities.PlaygroundActivity$MyJoyStickListener joyStickListener -> u
    android.graphics.Typeface typeface -> v
    android.os.Handler adHandler -> w
    com.devinxutal.tetris.util.AdDaemon adDaemonPause -> x
    com.devinxutal.tetris.util.AdDaemon adDaemonSuccess -> y
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void setScreenOrientation() -> i
    void switchState(com.devinxutal.tetris.activities.PlaygroundActivity$State,boolean) -> a
    void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    void onPause() -> onPause
    void onResume() -> onResume
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void showSuccessScreen() -> j
    void hideSuccessScreen() -> k
    void showPauseScreen() -> l
    void hidePauseScreen() -> m
    void play() -> n
    void resume() -> c
    void replay() -> d
    boolean tryLoadGame() -> o
    void deleteSavedGame() -> e
    void loadGame() -> f
    void saveGame() -> g
    void preferenceChanged() -> a
    void submitRecord() -> h
    void customizeView(android.widget.TextView) -> a
    com.devinxutal.tetris.control.GameController access$0(com.devinxutal.tetris.activities.PlaygroundActivity) -> a
    void access$1(com.devinxutal.tetris.activities.PlaygroundActivity) -> b
    void access$2(com.devinxutal.tetris.activities.PlaygroundActivity,com.devinxutal.tetris.activities.PlaygroundActivity$State) -> a
    void access$3(com.devinxutal.tetris.activities.PlaygroundActivity) -> c
    com.devinxutal.tetris.activities.PlaygroundActivity$State access$4(com.devinxutal.tetris.activities.PlaygroundActivity) -> d
    android.widget.Button access$8(com.devinxutal.tetris.activities.PlaygroundActivity) -> e
    boolean access$9(com.devinxutal.tetris.activities.PlaygroundActivity) -> f
    void access$11(com.devinxutal.tetris.activities.PlaygroundActivity,java.lang.String,boolean) -> a
com.devinxutal.tetris.activities.PlaygroundActivity$1 -> com.devinxutal.tetris.activities.k:
    com.devinxutal.tetris.activities.PlaygroundActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.devinxutal.tetris.activities.PlaygroundActivity$2 -> com.devinxutal.tetris.activities.l:
    com.devinxutal.tetris.activities.PlaygroundActivity this$0 -> a
    android.widget.EditText val$playerName -> b
    android.widget.CheckBox val$submitToGlobal -> c
    void onClick(android.content.DialogInterface,int) -> onClick
com.devinxutal.tetris.activities.PlaygroundActivity$3 -> com.devinxutal.tetris.activities.m:
    com.devinxutal.tetris.activities.PlaygroundActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.devinxutal.tetris.activities.PlaygroundActivity$AccelerometerListener -> com.devinxutal.tetris.activities.n:
    com.devinxutal.tetris.activities.PlaygroundActivity this$0 -> a
    void onAccuracyChanged(android.hardware.Sensor,int) -> onAccuracyChanged
    void onSensorChanged(android.hardware.SensorEvent) -> onSensorChanged
com.devinxutal.tetris.activities.PlaygroundActivity$ButtonsOnClick -> com.devinxutal.tetris.activities.o:
    com.devinxutal.tetris.activities.PlaygroundActivity this$0 -> a
    void onClick(android.view.View) -> onClick
com.devinxutal.tetris.activities.PlaygroundActivity$ControlButtonClicked -> com.devinxutal.tetris.activities.p:
    com.devinxutal.tetris.activities.PlaygroundActivity this$0 -> a
    void buttonClickced(int) -> a
    void buttonPressed(int) -> b
    void buttonReleased(int) -> c
com.devinxutal.tetris.activities.PlaygroundActivity$GameFinished -> com.devinxutal.tetris.activities.q:
    com.devinxutal.tetris.activities.PlaygroundActivity this$0 -> a
    void gameFinished() -> a
com.devinxutal.tetris.activities.PlaygroundActivity$GameFinished$2 -> com.devinxutal.tetris.activities.r:
    com.devinxutal.tetris.activities.PlaygroundActivity$GameFinished this$1 -> a
    void run() -> run
com.devinxutal.tetris.activities.PlaygroundActivity$MyJoyStickListener -> com.devinxutal.tetris.activities.s:
    com.devinxutal.tetris.activities.PlaygroundActivity this$0 -> a
com.devinxutal.tetris.activities.PlaygroundActivity$ScoreSubmitObserver -> com.devinxutal.tetris.activities.t:
    com.devinxutal.tetris.activities.PlaygroundActivity this$0 -> a
    void requestControllerDidFail(com.scoreloop.client.android.core.controller.RequestController,java.lang.Exception) -> requestControllerDidFail
    void requestControllerDidReceiveResponse(com.scoreloop.client.android.core.controller.RequestController) -> requestControllerDidReceiveResponse
com.devinxutal.tetris.activities.PlaygroundActivity$State -> com.devinxutal.tetris.activities.u:
    com.devinxutal.tetris.activities.PlaygroundActivity$State INIT -> a
    com.devinxutal.tetris.activities.PlaygroundActivity$State PLAY -> b
    com.devinxutal.tetris.activities.PlaygroundActivity$State PAUSED -> c
    com.devinxutal.tetris.activities.PlaygroundActivity$State ENDING -> d
    com.devinxutal.tetris.activities.PlaygroundActivity$State END -> e
    com.devinxutal.tetris.activities.PlaygroundActivity$State[] ENUM$VALUES -> f
    com.devinxutal.tetris.activities.PlaygroundActivity$State[] values() -> values
    com.devinxutal.tetris.activities.PlaygroundActivity$State valueOf(java.lang.String) -> valueOf
com.devinxutal.tetris.activities.Preferences -> com.devinxutal.tetris.activities.Preferences:
    void onCreate(android.os.Bundle) -> onCreate
com.devinxutal.tetris.activities.SplashActivity -> com.devinxutal.tetris.activities.SplashActivity:
    android.view.View logo -> b
    android.os.Handler handler -> c
    boolean initCompleted -> d
    boolean animationCompleted -> e
    java.lang.Runnable checker -> f
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void preferenceChanged() -> a
    boolean access$0(com.devinxutal.tetris.activities.SplashActivity) -> a
    boolean access$1(com.devinxutal.tetris.activities.SplashActivity) -> b
    android.os.Handler access$2(com.devinxutal.tetris.activities.SplashActivity) -> c
    java.lang.Runnable access$3(com.devinxutal.tetris.activities.SplashActivity) -> d
    void access$4$6bdf759d(com.devinxutal.tetris.activities.SplashActivity) -> e
com.devinxutal.tetris.activities.SplashActivity$1 -> com.devinxutal.tetris.activities.v:
    com.devinxutal.tetris.activities.SplashActivity this$0 -> a
    void run() -> run
com.devinxutal.tetris.activities.SplashActivity$2 -> com.devinxutal.tetris.activities.w:
    com.devinxutal.tetris.activities.SplashActivity this$0 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.devinxutal.tetris.cfg.Configuration -> com.devinxutal.tetris.a.a:
    com.devinxutal.tetris.cfg.Configuration config -> a
    android.content.SharedPreferences preference -> b
    com.devinxutal.tetris.cfg.Configuration config() -> a
    void setSharedPreferences(android.content.SharedPreferences) -> a
    int getCenterButtonAction() -> b
    java.lang.String getBlockStyle() -> c
    boolean isBackgroundMusicOn() -> d
    void setBackgroundMusicOn(boolean) -> a
    boolean isSoundEffectsOn() -> e
    void setSoundEffectsOn(boolean) -> b
    boolean isBlockShadowOn() -> f
    boolean isSwapRotateHold() -> g
    boolean isSwapQuickDirect() -> h
    int getStartLevel() -> i
    java.util.Locale getLanguage() -> j
    java.lang.String getScreenOrientation() -> k
    boolean isDragMode() -> l
com.devinxutal.tetris.cfg.Constants -> com.devinxutal.tetris.a.b:
    int VERSION -> a
com.devinxutal.tetris.control.ButtonInfo -> com.devinxutal.tetris.b.a:
    int x -> a
    int y -> b
    int radius -> c
    int buttonID -> d
    android.graphics.Bitmap buttonBG -> e
    float bgSize -> f
    android.graphics.Bitmap buttonIcon -> g
    float iconSize -> h
    boolean pressed -> i
com.devinxutal.tetris.control.Command -> com.devinxutal.tetris.b.b:
    com.devinxutal.tetris.control.Command TURN -> a
    com.devinxutal.tetris.control.Command LEFT -> b
    com.devinxutal.tetris.control.Command RIGHT -> c
    com.devinxutal.tetris.control.Command DOWN -> d
    com.devinxutal.tetris.control.Command DIRECT_DOWN -> e
    com.devinxutal.tetris.control.Command HOLD -> f
    com.devinxutal.tetris.control.Command TURN_DOWN -> g
    com.devinxutal.tetris.control.Command TURN_UP -> h
    com.devinxutal.tetris.control.Command LEFT_DOWN -> i
    com.devinxutal.tetris.control.Command LEFT_UP -> j
    com.devinxutal.tetris.control.Command RIGHT_DOWN -> k
    com.devinxutal.tetris.control.Command RIGHT_UP -> l
    com.devinxutal.tetris.control.Command DOWN_DOWN -> m
    com.devinxutal.tetris.control.Command DOWN_UP -> n
    com.devinxutal.tetris.control.Command[] ENUM$VALUES -> o
    com.devinxutal.tetris.control.Command[] values() -> values
    com.devinxutal.tetris.control.Command valueOf(java.lang.String) -> valueOf
com.devinxutal.tetris.control.GameController -> com.devinxutal.tetris.b.c:
    com.devinxutal.tetris.sound.SoundManager soundManager -> a
    com.devinxutal.tetris.ui.PlaygroundView playgroundView -> b
    com.devinxutal.tetris.ui.ControlView controlView -> c
    com.devinxutal.tetris.model.Playground playground -> d
    java.util.List listeners -> e
    android.os.Handler handler -> f
    boolean playing -> g
    com.devinxutal.tetris.control.GameController$StepRunnable stepRunnable -> h
    com.devinxutal.tetris.control.GameController$ControlRunnable controlRunnable -> i
    com.devinxutal.tetris.control.Command pendingCommand -> j
    int[] $SWITCH_TABLE$com$devinxutal$tetris$control$Command -> k
    void start() -> a
    void pause() -> b
    void reset() -> c
    void finishAnimation() -> d
    void processCommand(com.devinxutal.tetris.control.Command) -> a
    int getStepDelay() -> i
    com.devinxutal.tetris.ui.PlaygroundView getPlaygroundView() -> e
    boolean addGameListener(com.devinxutal.tetris.control.GameController$GameListener) -> a
    void notifyGameFinished() -> f
    com.devinxutal.tetris.model.Playground getPlayground() -> g
    void configurationChanged(com.devinxutal.tetris.cfg.Configuration) -> a
    void postControlDelay(int) -> a
    void postStepDelay(int) -> b
    boolean letPlaygroundProcessCommand(com.devinxutal.tetris.control.Command) -> b
    com.devinxutal.tetris.ui.ControlView getControlView() -> h
    com.devinxutal.tetris.model.Playground access$0(com.devinxutal.tetris.control.GameController) -> a
    com.devinxutal.tetris.ui.PlaygroundView access$1(com.devinxutal.tetris.control.GameController) -> b
    com.devinxutal.tetris.sound.SoundManager access$2(com.devinxutal.tetris.control.GameController) -> c
    void access$3$62c8496d(com.devinxutal.tetris.control.GameController) -> d
    boolean access$4(com.devinxutal.tetris.control.GameController) -> e
    void access$5(com.devinxutal.tetris.control.GameController,int) -> a
    int access$6(com.devinxutal.tetris.control.GameController) -> f
    com.devinxutal.tetris.control.Command access$7(com.devinxutal.tetris.control.GameController) -> g
    boolean access$8(com.devinxutal.tetris.control.GameController,com.devinxutal.tetris.control.Command) -> a
    void access$9$62c8099c(com.devinxutal.tetris.control.GameController) -> h
    int[] $SWITCH_TABLE$com$devinxutal$tetris$control$Command() -> j
com.devinxutal.tetris.control.GameController$ControlRunnable -> com.devinxutal.tetris.b.d:
    long idToProcess -> b
    long idProcessed -> c
    com.devinxutal.tetris.control.GameController this$0 -> a
    void increaseIDToProcess() -> a
    void run() -> run
com.devinxutal.tetris.control.GameController$GameListener -> com.devinxutal.tetris.b.e:
    void gameFinished() -> a
com.devinxutal.tetris.control.GameController$StepRunnable -> com.devinxutal.tetris.b.f:
    long idToProcess -> b
    long idProcessed -> c
    com.devinxutal.tetris.control.GameController this$0 -> a
    void increaseIDToProcess() -> a
    void run() -> run
com.devinxutal.tetris.model.Block -> com.devinxutal.tetris.model.a:
    boolean[][][] matrix -> b
    int current -> c
    int numStatus -> d
    com.devinxutal.tetris.model.Block$BlockType blockType -> e
    boolean recalculated -> a
    int fc -> f
    int fr -> g
    int rc -> h
    int cc -> i
    int getCurrent() -> a
    void turn() -> b
    void recalc() -> j
    int firstValidColumn() -> c
    int firstValidRow() -> d
    int columnCount() -> e
    int rowCount() -> f
    boolean[][] getMatrix() -> g
    boolean[][] getTurnedMatrix() -> h
    com.devinxutal.tetris.model.Block$BlockType getBlockType() -> i
com.devinxutal.tetris.model.Block$BlockType -> com.devinxutal.tetris.model.b:
    com.devinxutal.tetris.model.Block$BlockType I -> a
    com.devinxutal.tetris.model.Block$BlockType J -> b
    com.devinxutal.tetris.model.Block$BlockType L -> c
    com.devinxutal.tetris.model.Block$BlockType O -> d
    com.devinxutal.tetris.model.Block$BlockType S -> e
    com.devinxutal.tetris.model.Block$BlockType T -> f
    com.devinxutal.tetris.model.Block$BlockType Z -> g
    boolean[][][][] matrix_array -> h
    com.devinxutal.tetris.model.Block$BlockType[] ENUM$VALUES -> i
    boolean[][][] getMatrix(com.devinxutal.tetris.model.Block$BlockType) -> a
    com.devinxutal.tetris.model.Block$BlockType random() -> a
    com.devinxutal.tetris.model.Block$BlockType[] values() -> values
    com.devinxutal.tetris.model.Block$BlockType valueOf(java.lang.String) -> valueOf
com.devinxutal.tetris.model.Playground -> com.devinxutal.tetris.model.c:
    int width -> a
    int height -> b
    int blockSize -> c
    boolean inAnimation -> d
    boolean[] eliminating -> e
    int eliminatingCurrentStep -> f
    int eliminatingTotalSteps -> g
    int eliminationLines -> h
    boolean finished -> i
    com.devinxutal.tetris.model.Block activeBlock -> j
    int blockOffsetX -> k
    int blockOffsetY -> l
    int projectedY -> m
    int originalOffsetY -> n
    int rowsFallDown -> o
    int[][] playground -> p
    java.util.Set floatingBlocks -> q
    boolean floatingBlocksJustSettled -> r
    java.util.LinkedList blockQueue -> s
    int blockQueueLen -> t
    boolean combo -> u
    com.devinxutal.tetris.model.Block hold -> v
    boolean holdUsed -> w
    com.devinxutal.tetris.model.ScoreAndLevel scoreLevel -> x
    boolean option_block_shadow_on -> y
    com.devinxutal.tetris.model.Playground$DrawingMetrics dm -> z
    boolean isFinishingElimination -> A
    int[] $SWITCH_TABLE$com$devinxutal$tetris$control$Command -> B
    int getWidth() -> a
    int getHeight() -> b
    int getBlockSize() -> c
    float getSpeedScale() -> d
    void reset() -> e
    boolean isFinished() -> f
    com.devinxutal.tetris.model.ScoreAndLevel getScoreAndLevel() -> g
    void moveOn() -> h
    boolean processCommand(com.devinxutal.tetris.control.Command) -> a
    boolean isInAnimation() -> i
    void determinSize(int,int) -> a
    void initDrawingMetrics(android.content.Context) -> a
    void drawPendingBlocks(android.graphics.Canvas,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect) -> a
    void drawHoldBlock(android.graphics.Canvas,android.graphics.Rect) -> a
    void drawBlock(android.graphics.Canvas,com.devinxutal.tetris.model.Block,android.graphics.Rect) -> a
    com.devinxutal.tetris.model.SavablePlayground getSavablePlayground() -> j
    void restoreSavablePlayground(com.devinxutal.tetris.model.SavablePlayground) -> a
    void draw(android.graphics.Canvas,int,int) -> a
    boolean moveBlockDown() -> l
    void allocateBlock() -> m
    void allocateBlock(com.devinxutal.tetris.model.Block) -> a
    boolean checkElimination() -> n
    boolean isFinishingElimination() -> k
    java.util.Set checkFloatingBlock() -> o
    void calculateProjectedY() -> p
    void configurationChanged(com.devinxutal.tetris.cfg.Configuration) -> a
    int access$0(com.devinxutal.tetris.model.Playground) -> a
    int[] $SWITCH_TABLE$com$devinxutal$tetris$control$Command() -> q
com.devinxutal.tetris.model.Playground$DrawingMetrics -> com.devinxutal.tetris.model.d:
    int[] COLORS -> a
    android.graphics.Bitmap[] original_blocks -> b
    android.graphics.Bitmap[] sized_blocks -> c
    android.graphics.Paint paint -> e
    java.lang.String blockStyle -> f
    android.content.Context context -> g
    com.devinxutal.tetris.model.Playground this$0 -> d
    void init(android.content.Context) -> a
    void onSizeChanged(boolean) -> a
    void configurationChanged(com.devinxutal.tetris.cfg.Configuration) -> a
    android.graphics.Paint access$0(com.devinxutal.tetris.model.Playground$DrawingMetrics) -> a
com.devinxutal.tetris.model.SavablePlayground -> com.devinxutal.tetris.model.SavablePlayground:
    int[][] playground -> a
    com.devinxutal.tetris.model.SavablePlayground$SavableBlock activeBlock -> b
    int offsetX -> c
    int offsetY -> d
    java.util.List blockQueue -> e
    com.devinxutal.tetris.model.SavablePlayground$SavableBlock holdBlock -> f
    boolean holdUsed -> g
    com.devinxutal.tetris.model.ScoreAndLevel scoreLevel -> h
    boolean finished -> i
    com.devinxutal.tetris.model.SavablePlayground$SavableBlock create(com.devinxutal.tetris.model.Block) -> a
com.devinxutal.tetris.model.SavablePlayground$SavableBlock -> com.devinxutal.tetris.model.e:
    com.devinxutal.tetris.model.Block$BlockType blockType -> a
    int current -> b
    com.devinxutal.tetris.model.SavablePlayground this$0 -> c
com.devinxutal.tetris.model.ScoreAndLevel -> com.devinxutal.tetris.model.ScoreAndLevel:
    int level -> a
    int score -> b
    int totalLines -> c
    int currentLines -> d
    void reset() -> a
    int addScore(int) -> c
    int getScore() -> b
    int getLevel() -> c
    int getGoalRemained() -> d
    void eliminateLines(int,boolean) -> a
    void rowsFallDown(int) -> a
    java.lang.String getScroreString(int) -> b
    float getMaxLevel() -> e
com.devinxutal.tetris.record.JScore -> com.devinxutal.tetris.record.a:
    java.lang.String player -> a
    int rank -> b
    int level -> c
    int score -> d
    boolean highlight -> e
    java.lang.String getPlayer() -> a
    void setPlayer(java.lang.String) -> a
    int getRank() -> b
    void setRank(int) -> a
    void setLevel(int) -> b
    int getScore() -> c
    void setScore(int) -> c
    boolean isHighlight() -> d
    void setHighlight$1385ff() -> e
    com.devinxutal.tetris.record.JScore fromScoreloopScore(com.scoreloop.client.android.core.model.Score) -> a
com.devinxutal.tetris.record.SavableLocalScore -> com.devinxutal.tetris.record.SavableLocalScore:
    java.lang.String player -> a
    int score -> b
    java.lang.String getPlayer() -> a
    int getScore() -> b
    int compareTo(java.lang.Object) -> compareTo
com.devinxutal.tetris.record.SavableLocalScores -> com.devinxutal.tetris.record.SavableLocalScores:
    java.util.LinkedList robotScores -> a
    java.util.List scores -> b
    void trim() -> a
    java.util.List getLocalRankForList$28cc3cee() -> b
    void addScore(java.lang.String,int) -> a
com.devinxutal.tetris.scoreloop.ScoreloopManager -> com.devinxutal.tetris.c.a:
    com.scoreloop.client.android.core.model.Client client -> a
    void init(android.content.Context) -> a
com.devinxutal.tetris.sound.SoundManager -> com.devinxutal.tetris.d.a:
    android.media.SoundPool soundpool -> c
    android.app.Activity activity -> d
    android.media.MediaPlayer mediaPlayer -> e
    android.media.AudioManager audioManager -> f
    int btnMusicID -> g
    int turnMusicID -> h
    int moveMusicID -> i
    int downMusicID -> j
    int eliminationMusicID -> k
    float streamVolume -> l
    boolean initialized -> a
    com.devinxutal.tetris.sound.SoundManager soundManager -> b
    float BACKGROUND_SOUND_VOLUME -> m
    com.devinxutal.tetris.sound.SoundManager get(android.app.Activity) -> a
    void init(android.app.Activity) -> b
    void release() -> a
    void playBackgroundMusic() -> b
    void stopBackgroundMusic() -> c
    void pauseBackgroundMusic() -> d
    void playButtonClickEffect() -> e
    void playMoveEffect() -> f
    void playTurnEffect() -> g
    void playDownEffect() -> h
    void playEliminationEffect() -> i
com.devinxutal.tetris.ui.ControlView -> com.devinxutal.tetris.e.a:
    com.devinxutal.tetris.control.GameController controller -> b
    java.util.List listeners -> c
    float SLIDE_THRESHOLD -> a
    java.util.List buttons -> d
    java.util.List controlButtons -> e
    android.widget.ImageButton soundButton -> f
    android.widget.ImageButton musicButton -> g
    com.devinxutal.tetris.cfg.Configuration config -> h
    boolean dragMode -> i
    float slotGap -> j
    float dragDeltaX -> k
    boolean inDrag -> l
    float oldX -> m
    float oldY -> n
    float oldXforDrag -> o
    float oldYforDrag -> p
    float dragDeltaY -> q
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void setButtons(java.util.List) -> a
    void setGameController(com.devinxutal.tetris.control.GameController) -> a
    void init() -> a
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    void onLayout(boolean,int,int,int,int) -> onLayout
    android.widget.ImageButton makeButton(int,int) -> a
    void onClick(android.view.View) -> onClick
    void resetControlButtons() -> b
    boolean addGameControlListener(com.devinxutal.tetris.ui.ControlView$GameControlListener) -> a
    void notifyButtonClicked(int) -> a
    void notifyButtonReleased(int) -> b
    void configurationChanged(com.devinxutal.tetris.cfg.Configuration) -> a
com.devinxutal.tetris.ui.ControlView$GameControlListener -> com.devinxutal.tetris.e.b:
    void buttonClickced(int) -> a
    void buttonPressed(int) -> b
    void buttonReleased(int) -> c
com.devinxutal.tetris.ui.LeaderBoardView -> com.devinxutal.tetris.e.c:
    java.util.List buttons -> a
    com.devinxutal.tetris.cfg.Configuration config -> b
    com.devinxutal.tetris.ui.LeaderBoardView$DrawingMetrics dm -> c
    java.util.List scores -> d
    int itemNum -> e
    java.util.List listeners -> f
    void setScores(java.util.List) -> a
    void clearScores() -> a
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    com.devinxutal.tetris.ui.LeaderBoardView$ButtonInfo getButtonInfo(int) -> a
    void setButtonText(int,java.lang.String) -> a
    void setButtonEnabled(int,boolean) -> a
    boolean addButtonListener(com.devinxutal.tetris.ui.LeaderBoardView$ButtonListener) -> a
    void notifyButtonClicked(int) -> b
    void notifyButtonPressed$13462e() -> b
    void notifyButtonReleased$13462e() -> c
    com.devinxutal.tetris.ui.LeaderBoardView$DrawingMetrics access$0(com.devinxutal.tetris.ui.LeaderBoardView) -> a
    java.util.List access$1(com.devinxutal.tetris.ui.LeaderBoardView) -> b
    int access$2(com.devinxutal.tetris.ui.LeaderBoardView) -> c
    java.util.List access$3(com.devinxutal.tetris.ui.LeaderBoardView) -> d
com.devinxutal.tetris.ui.LeaderBoardView$ButtonInfo -> com.devinxutal.tetris.e.d:
    int id -> a
    java.lang.String text -> b
    android.graphics.Rect bound -> c
    android.graphics.drawable.Drawable drawable -> d
    boolean pressed -> e
    boolean enabled -> f
    com.devinxutal.tetris.ui.LeaderBoardView this$0 -> g
    float getRound() -> a
com.devinxutal.tetris.ui.LeaderBoardView$ButtonListener -> com.devinxutal.tetris.e.e:
    void buttonClickced(int) -> a
com.devinxutal.tetris.ui.LeaderBoardView$DrawingMetrics -> com.devinxutal.tetris.e.f:
    android.graphics.Paint paint -> a
    com.devinxutal.tetris.util.TextPainter painter -> b
    android.graphics.Rect selectionArea -> d
    android.graphics.Rect scoreArea -> e
    android.graphics.Rect buttonArea -> f
    float round -> g
    com.devinxutal.tetris.util.BitmapUtil util -> h
    int color_layer_mask -> i
    int color_scoreboard -> j
    int color_scoreboard_light -> k
    int color_scoreboard_highlight -> l
    int color_shaddow -> m
    int color_btn_normal -> n
    int color_btn_focused -> o
    int color_btn_disabled -> p
    com.devinxutal.tetris.ui.LeaderBoardView this$0 -> c
    void onDraw(android.graphics.Canvas) -> a
    void drawScores(android.graphics.Canvas) -> b
    void onSizeChanged(int,int) -> a
    void adjustButtons() -> b
    void createButtons() -> a
    com.devinxutal.tetris.ui.LeaderBoardView$ButtonInfo createSelectionButton$1cee374a(int,java.lang.String,android.graphics.Rect) -> a
    com.devinxutal.tetris.ui.LeaderBoardView$ButtonInfo createButton(int,java.lang.String,android.graphics.Rect,android.graphics.drawable.Drawable) -> a
com.devinxutal.tetris.ui.Pair -> com.devinxutal.tetris.e.g:
    int x -> a
    int y -> b
com.devinxutal.tetris.ui.PlaygroundView -> com.devinxutal.tetris.e.h:
    java.lang.String TAG -> a
    com.devinxutal.tetris.control.GameController gameController -> b
    com.devinxutal.tetris.ui.PlaygroundView$DrawingMetrics dm -> c
    com.devinxutal.tetris.model.Playground playground -> d
    boolean finishedAlreadyNotified -> e
    boolean finishingAlreadyNotified -> f
    boolean notifyFinished -> g
    com.devinxutal.tetris.ui.ControlView controlView -> h
    void setGameController(com.devinxutal.tetris.control.GameController) -> a
    com.devinxutal.tetris.model.Playground getPlayground() -> a
    void setPlayground(com.devinxutal.tetris.model.Playground) -> a
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    void reset() -> b
    void onDraw(android.graphics.Canvas) -> onDraw
    void setControlView(com.devinxutal.tetris.ui.ControlView) -> a
    void configurationChanged$8fc215e() -> c
    com.devinxutal.tetris.ui.PlaygroundView$DrawingMetrics access$0(com.devinxutal.tetris.ui.PlaygroundView) -> a
    com.devinxutal.tetris.model.Playground access$1(com.devinxutal.tetris.ui.PlaygroundView) -> b
    com.devinxutal.tetris.ui.ControlView access$2(com.devinxutal.tetris.ui.PlaygroundView) -> c
com.devinxutal.tetris.ui.PlaygroundView$DrawingMetrics -> com.devinxutal.tetris.e.i:
    int[] STAR_COLORS -> a
    android.graphics.Paint paint -> c
    com.devinxutal.tetris.util.BitmapUtil bitmapUtil -> d
    android.graphics.Bitmap bgBitmap -> e
    android.graphics.Canvas canvas -> f
    android.graphics.Bitmap gridBitmap -> g
    android.graphics.Rect playgroundRect -> h
    android.graphics.Rect next1BlockRect -> i
    android.graphics.Rect next2BlockRect -> j
    android.graphics.Rect next3BlockRect -> k
    android.graphics.Rect holdBlockRect -> l
    com.devinxutal.tetris.control.ButtonInfo holdButtonInfo -> m
    android.graphics.RectF scoreRect -> n
    android.graphics.RectF levelRect -> o
    android.graphics.RectF goalRect -> p
    android.graphics.Typeface font -> q
    android.graphics.Typeface scoreFont -> r
    android.graphics.Typeface labelFont -> s
    android.graphics.Typeface statFont -> t
    float lineHeight -> u
    float scoreLineHeight -> v
    float labelLineHeight -> w
    float statLineHeight -> x
    float scoreSize -> y
    int scoreDigits -> z
    float scoreGap -> A
    float labelSize -> B
    float labelGap -> C
    float statSize -> D
    int statDigits -> E
    float textStrokeScale -> F
    com.devinxutal.tetris.ui.PlaygroundView this$0 -> b
    void onSizeChanged(int,int) -> a
    void resetPaint() -> a
    void regenerateBackground() -> b
    void determinAndDrawControlButtons(android.graphics.Canvas) -> a
    float determineScoreSize(float,float) -> a
    float determineLabelSize(float,float) -> b
    float determineStatSize(float,float) -> c
    android.graphics.Paint access$0(com.devinxutal.tetris.ui.PlaygroundView$DrawingMetrics) -> a
    android.graphics.Bitmap access$1(com.devinxutal.tetris.ui.PlaygroundView$DrawingMetrics) -> b
    android.graphics.Rect access$2(com.devinxutal.tetris.ui.PlaygroundView$DrawingMetrics) -> c
    android.graphics.Rect access$3(com.devinxutal.tetris.ui.PlaygroundView$DrawingMetrics) -> d
    android.graphics.Rect access$4(com.devinxutal.tetris.ui.PlaygroundView$DrawingMetrics) -> e
    android.graphics.Rect access$5(com.devinxutal.tetris.ui.PlaygroundView$DrawingMetrics) -> f
    android.graphics.Rect access$6(com.devinxutal.tetris.ui.PlaygroundView$DrawingMetrics) -> g
    float access$7(com.devinxutal.tetris.ui.PlaygroundView$DrawingMetrics) -> h
    android.graphics.Typeface access$8(com.devinxutal.tetris.ui.PlaygroundView$DrawingMetrics) -> i
    float access$9(com.devinxutal.tetris.ui.PlaygroundView$DrawingMetrics) -> j
    int access$10(com.devinxutal.tetris.ui.PlaygroundView$DrawingMetrics) -> k
    android.graphics.RectF access$11(com.devinxutal.tetris.ui.PlaygroundView$DrawingMetrics) -> l
    float access$12(com.devinxutal.tetris.ui.PlaygroundView$DrawingMetrics) -> m
    float access$13(com.devinxutal.tetris.ui.PlaygroundView$DrawingMetrics) -> n
    android.graphics.Typeface access$14(com.devinxutal.tetris.ui.PlaygroundView$DrawingMetrics) -> o
    android.graphics.RectF access$15(com.devinxutal.tetris.ui.PlaygroundView$DrawingMetrics) -> p
    float access$16(com.devinxutal.tetris.ui.PlaygroundView$DrawingMetrics) -> q
    android.graphics.RectF access$17(com.devinxutal.tetris.ui.PlaygroundView$DrawingMetrics) -> r
    float access$18(com.devinxutal.tetris.ui.PlaygroundView$DrawingMetrics) -> s
    android.graphics.Typeface access$19(com.devinxutal.tetris.ui.PlaygroundView$DrawingMetrics) -> t
    void access$20(com.devinxutal.tetris.ui.PlaygroundView$DrawingMetrics) -> u
com.devinxutal.tetris.util.AdDaemon -> com.devinxutal.tetris.f.a:
    android.app.Activity activity -> a
    android.view.View adView -> b
    android.os.Handler handler -> c
    java.lang.String name -> d
    boolean run -> e
    long animationSerial -> f
    long requestSerial -> g
    boolean requestSucceed -> h
    boolean nofill -> i
    boolean adClicked -> j
    long requestInterval -> k
    long requestCount -> l
    java.lang.Runnable partialAnimationRunnable -> m
    void run() -> a
    void stop() -> b
    void postAnimation() -> c
    void postRequest(long) -> a
    android.view.View access$0(com.devinxutal.tetris.util.AdDaemon) -> a
    java.lang.String access$1(com.devinxutal.tetris.util.AdDaemon) -> b
    android.app.Activity access$2(com.devinxutal.tetris.util.AdDaemon) -> c
    boolean access$3(com.devinxutal.tetris.util.AdDaemon) -> d
    long access$4(com.devinxutal.tetris.util.AdDaemon) -> e
    boolean access$5(com.devinxutal.tetris.util.AdDaemon) -> f
    boolean access$6(com.devinxutal.tetris.util.AdDaemon) -> g
    void access$7(com.devinxutal.tetris.util.AdDaemon,boolean) -> a
    void access$8(com.devinxutal.tetris.util.AdDaemon,long) -> a
    void access$9(com.devinxutal.tetris.util.AdDaemon) -> h
    boolean access$10(com.devinxutal.tetris.util.AdDaemon) -> i
    void access$11(com.devinxutal.tetris.util.AdDaemon,boolean) -> b
    long access$12(com.devinxutal.tetris.util.AdDaemon) -> j
    java.lang.Runnable access$13(com.devinxutal.tetris.util.AdDaemon) -> k
    void access$14(com.devinxutal.tetris.util.AdDaemon) -> l
    void access$15$53949221(com.devinxutal.tetris.util.AdDaemon) -> m
com.devinxutal.tetris.util.AdDaemon$1 -> com.devinxutal.tetris.f.b:
    com.devinxutal.tetris.util.AdDaemon this$0 -> a
    void run() -> run
    com.devinxutal.tetris.util.AdDaemon access$0(com.devinxutal.tetris.util.AdDaemon$1) -> a
com.devinxutal.tetris.util.AdDaemon$1$1 -> com.devinxutal.tetris.f.c:
    com.devinxutal.tetris.util.AdDaemon$1 this$1 -> a
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
com.devinxutal.tetris.util.AdDaemon$2 -> com.devinxutal.tetris.f.d:
    com.devinxutal.tetris.util.AdDaemon this$0 -> a
    void onClick(android.view.View) -> onClick
com.devinxutal.tetris.util.AdDaemon$3 -> com.devinxutal.tetris.f.e:
    com.devinxutal.tetris.util.AdDaemon this$0 -> a
    void onDismissScreen$51b51722() -> a
    void onFailedToReceiveAd$7b642d25(com.google.ads.AdRequest$ErrorCode) -> a
    void onLeaveApplication$51b51722() -> b
    void onPresentScreen$51b51722() -> c
    void onReceiveAd$51b51722() -> d
com.devinxutal.tetris.util.AdDaemon$AnimationRunnable -> com.devinxutal.tetris.f.f:
    long serialID -> b
    com.devinxutal.tetris.util.AdDaemon this$0 -> a
    void run() -> run
com.devinxutal.tetris.util.AdDaemon$RequestRunnable -> com.devinxutal.tetris.f.g:
    long serialID -> b
    com.devinxutal.tetris.util.AdDaemon this$0 -> a
    void run() -> run
com.devinxutal.tetris.util.AdUtil -> com.devinxutal.tetris.f.h:
    void determineAd(android.app.Activity,int) -> a
com.devinxutal.tetris.util.BitmapUtil -> com.devinxutal.tetris.f.i:
    android.content.Context context -> a
    android.graphics.Bitmap background -> b
    android.graphics.Bitmap aimButton1 -> c
    android.graphics.Bitmap aimButton2 -> d
    android.graphics.Bitmap arrowDown -> e
    android.graphics.Bitmap arrowDirectDown -> f
    android.graphics.Bitmap arrowRotate -> g
    android.graphics.Bitmap arrowHold -> h
    android.graphics.Bitmap arrowLeft -> i
    android.graphics.Bitmap arrowRight -> j
    android.graphics.Paint paint -> k
    android.graphics.drawable.Drawable hInfoBar -> l
    android.graphics.drawable.Drawable vInfoBar -> m
    android.graphics.Bitmap screen -> n
    com.devinxutal.tetris.util.BitmapUtil util -> o
    com.devinxutal.tetris.util.BitmapUtil get(android.content.Context) -> a
    android.graphics.Bitmap getScreenBitmap(android.content.Context) -> b
    android.graphics.Bitmap getAimButtonBitmap1() -> a
    android.graphics.Bitmap getAimButtonBitmap2() -> b
    android.graphics.drawable.Drawable getVerticalInfoBar() -> c
    android.graphics.drawable.Drawable getHorizontalInfoBar() -> d
    void drawBackgroundBitmap(android.graphics.Canvas,int,int,android.graphics.Paint) -> a
    android.graphics.Bitmap getArrowBitmap(int) -> a
    float dipToPixel(float) -> a
com.devinxutal.tetris.util.MathUtil -> com.devinxutal.tetris.f.j:
    double distance(double,double,double,double) -> a
com.devinxutal.tetris.util.PreferenceUtil -> com.devinxutal.tetris.f.k:
    java.lang.String getShowUpgradeNoticeStr(android.app.Activity) -> a
    void resetLocale(android.app.Activity,java.util.Locale) -> a
com.devinxutal.tetris.util.RandomUtil -> com.devinxutal.tetris.f.l:
    java.util.Random r -> a
com.devinxutal.tetris.util.ScoreUtil -> com.devinxutal.tetris.f.m:
    com.devinxutal.tetris.record.SavableLocalScores loadLocalScores() -> a
    void saveCubeState(java.lang.String,int) -> a
com.devinxutal.tetris.util.TextPainter -> com.devinxutal.tetris.f.n:
    android.graphics.Paint textPaint -> a
    android.graphics.Paint strokePaint -> b
    int[] $SWITCH_TABLE$com$devinxutal$tetris$util$TextPainter$Align -> c
    android.graphics.Paint getStrokePaint() -> a
    void setStrokeWidth(float) -> a
    void setStrokeColor(int) -> a
    void setTextColor$13462e() -> b
    void setTextSize(float) -> b
    void setTypeface(android.graphics.Typeface) -> a
    void drawFittedText(android.graphics.Canvas,java.lang.String,android.graphics.RectF,float) -> a
    void drawMonoScore(android.graphics.Canvas,java.lang.String,float,float,float) -> a
    void drawText(android.graphics.Canvas,java.lang.String,float,float,float) -> b
    void drawText(android.graphics.Canvas,java.lang.String,android.graphics.RectF,com.devinxutal.tetris.util.TextPainter$Align) -> a
    void drawCharacter(android.graphics.Canvas,java.lang.String,float,float) -> a
    float measureTextWidth(java.lang.String,float) -> a
    int[] $SWITCH_TABLE$com$devinxutal$tetris$util$TextPainter$Align() -> c
com.devinxutal.tetris.util.TextPainter$Align -> com.devinxutal.tetris.f.o:
    com.devinxutal.tetris.util.TextPainter$Align Left -> a
    com.devinxutal.tetris.util.TextPainter$Align Right -> b
    com.devinxutal.tetris.util.TextPainter$Align Center -> c
    com.devinxutal.tetris.util.TextPainter$Align[] ENUM$VALUES -> d
    com.devinxutal.tetris.util.TextPainter$Align[] values() -> values
    com.devinxutal.tetris.util.TextPainter$Align valueOf(java.lang.String) -> valueOf
com.devinxutal.tetriscn.GoTetrisApplication -> com.devinxutal.tetriscn.GoTetrisApplication:
    cn.perfectgames.amaze.record.LocalRecordManager localRecordManager -> a
    com.devinxutal.tetris.util.BitmapUtil bitmapUtil -> b
    cn.perfectgames.amaze.record.LocalRecordManager getLocalRecordManager() -> a
    com.devinxutal.tetris.util.BitmapUtil getBitmapUtil() -> b
    void setBitmapUtil(com.devinxutal.tetris.util.BitmapUtil) -> a
    void onCreate() -> onCreate
com.facebook.android.a -> com.facebook.android.a:
    long serialVersionUID -> serialVersionUID
com.facebook.android.b -> com.facebook.android.b:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    long d -> d
    java.lang.String e -> e
    com.facebook.android.b$a f -> f
    void a(android.app.Activity,java.lang.String[],com.facebook.android.b$a) -> a
    boolean a() -> a
    java.lang.String b() -> b
    long c() -> c
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    com.facebook.android.b$a a(com.facebook.android.b) -> a
com.facebook.android.b$1 -> com.facebook.android.b$1:
    com.facebook.android.b$a a -> a
    void onCancel(android.content.DialogInterface) -> onCancel
com.facebook.android.b$a -> com.facebook.android.b$a:
    void a(android.os.Bundle) -> a
    void a(com.facebook.android.d) -> a
    void a(com.facebook.android.a) -> a
    void a() -> a
com.facebook.android.c -> com.facebook.android.c:
    com.facebook.android.b a -> a
    void a(android.os.Bundle) -> a
    void a(com.facebook.android.a) -> a
    void a(com.facebook.android.d) -> a
    void a() -> a
    java.lang.String b(android.os.Bundle) -> b
    android.os.Bundle b(java.lang.String) -> b
    android.os.Bundle a(java.lang.String) -> a
com.facebook.android.d -> com.facebook.android.d:
    long serialVersionUID -> serialVersionUID
com.facebook.android.e -> com.facebook.android.e:
    float[] a -> a
    float[] b -> b
    android.widget.FrameLayout$LayoutParams c -> c
    java.lang.String d -> d
    com.facebook.android.b$a e -> e
    android.app.ProgressDialog f -> f
    android.webkit.WebView g -> g
    android.widget.LinearLayout h -> h
    android.widget.TextView i -> i
    void onCreate(android.os.Bundle) -> onCreate
    com.facebook.android.b$a a(com.facebook.android.e) -> a
    android.app.ProgressDialog b(com.facebook.android.e) -> b
    android.webkit.WebView c(com.facebook.android.e) -> c
    android.widget.TextView d(com.facebook.android.e) -> d
com.facebook.android.e$a -> com.facebook.android.e$a:
    com.facebook.android.e a -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
com.feedback.UMFeedbackService -> com.feedback.a:
    boolean c -> a
    boolean getHasCheckedReply() -> a
com.feedback.a.a -> com.feedback.a.a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.util.Date e -> d
    com.feedback.a.c f -> e
    com.feedback.a.b g -> f
    java.lang.String a() -> a
    int compareTo(java.lang.Object) -> compareTo
com.feedback.a.b -> com.feedback.a.b:
    com.feedback.a.b a -> a
    com.feedback.a.b b -> b
    com.feedback.a.b c -> c
    com.feedback.a.b[] d -> d
    com.feedback.a.b[] values() -> values
    com.feedback.a.b valueOf(java.lang.String) -> valueOf
com.feedback.a.c -> com.feedback.a.c:
    com.feedback.a.c a -> a
    com.feedback.a.c b -> b
    com.feedback.a.c c -> c
    com.feedback.a.c[] d -> d
    com.feedback.a.c[] values() -> values
    com.feedback.a.c valueOf(java.lang.String) -> valueOf
com.feedback.a.d -> com.feedback.a.d:
    java.lang.String a -> a
    com.feedback.a.e b -> b
    java.lang.String c -> c
    com.feedback.a.a d -> d
    com.feedback.a.a e -> e
    java.util.List f -> f
    com.feedback.a.a a(int) -> a
    void b(int) -> b
    int compareTo(java.lang.Object) -> compareTo
com.feedback.a.e -> com.feedback.a.e:
    com.feedback.a.e a -> a
    com.feedback.a.e b -> b
    com.feedback.a.e c -> c
    com.feedback.a.e[] d -> d
    com.feedback.a.e[] values() -> values
    com.feedback.a.e valueOf(java.lang.String) -> valueOf
com.feedback.b.a -> com.feedback.b.a:
    void a(android.content.Context,com.feedback.a.d) -> a
    void b(android.content.Context) -> a
    void b(android.content.Context,com.feedback.a.d) -> b
com.feedback.b.b -> com.feedback.b.b:
    java.lang.String a(org.json.JSONObject,java.lang.String) -> a
    org.json.JSONObject a(android.content.Context,java.lang.String,int,int) -> a
    org.json.JSONObject a(android.content.Context,java.lang.String,java.lang.String) -> a
    boolean b(org.json.JSONObject) -> a
    boolean c(org.json.JSONObject) -> b
    boolean d(org.json.JSONObject) -> c
    boolean e(org.json.JSONObject) -> d
    boolean f(org.json.JSONObject) -> e
    boolean a(org.json.JSONObject,java.lang.String,java.lang.String) -> a
com.feedback.b.c -> com.feedback.b.c:
    boolean a(android.content.Context,org.json.JSONObject) -> a
    boolean b(android.content.Context,org.json.JSONObject) -> b
    java.lang.String a(android.content.Context,org.json.JSONArray) -> a
    java.lang.String d(android.content.Context,java.lang.String) -> d
    java.util.List a(android.content.Context) -> a
    void a(android.content.Context,java.lang.String) -> a
    void c(android.content.Context,org.json.JSONObject) -> c
    void d(android.content.Context,org.json.JSONObject) -> d
    boolean e(android.content.Context,org.json.JSONObject) -> e
    void a(android.content.SharedPreferences,java.lang.String,java.lang.String) -> a
    void a(android.content.Context,java.lang.String,java.lang.String) -> a
    void a(android.content.Context,com.feedback.a.d,int) -> a
    com.feedback.a.d b(android.content.Context,java.lang.String) -> b
    void c(android.content.Context,java.lang.String) -> c
com.feedback.b.d -> com.feedback.b.d:
    boolean a(java.lang.String) -> a
    java.lang.String a(org.json.JSONObject,java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String) -> a
com.feedback.c.a -> com.feedback.c.a:
    java.lang.String a -> a
    org.json.JSONObject b -> b
    android.content.Context c -> c
    void run() -> run
com.feedback.c.b -> com.feedback.c.b:
    java.lang.String a -> a
    android.content.Context b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    int f -> f
    android.os.Handler g -> g
    void run() -> run
com.feedback.c.c -> com.feedback.c.c:
    java.lang.String a -> a
    org.json.JSONObject b -> b
    android.content.Context c -> c
    java.lang.Boolean a() -> a
    java.lang.Object call() -> call
com.feedback.ui.FeedbackConversation -> com.feedback.ui.FeedbackConversation:
    android.content.Context a -> a
    com.feedback.a.d e -> f
    com.feedback.ui.c f -> g
    android.widget.TextView g -> h
    android.widget.EditText h -> i
    android.widget.Button i -> j
    com.feedback.ui.b j -> k
    boolean b -> b
    java.lang.String c -> c
    boolean d -> d
    java.util.concurrent.ExecutorService executorService -> e
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onStop() -> onStop
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void setUserContext(android.content.Context) -> a
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    com.feedback.a.d a(com.feedback.ui.FeedbackConversation) -> a
    void a(com.feedback.ui.FeedbackConversation,com.feedback.a.d) -> a
    com.feedback.ui.c b(com.feedback.ui.FeedbackConversation) -> b
    android.widget.EditText c(com.feedback.ui.FeedbackConversation) -> c
    android.widget.Button d(com.feedback.ui.FeedbackConversation) -> d
com.feedback.ui.FeedbackConversations -> com.feedback.ui.FeedbackConversations:
    com.feedback.ui.f a -> a
    android.widget.ImageButton b -> b
    int[] h -> c
    void onCreate(android.os.Bundle) -> onCreate
    void onStart() -> onStart
    void onStop() -> onStop
    void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    void onRestart() -> onRestart
    boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    void b() -> a
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    int[] a() -> b
com.feedback.ui.SendFeedback -> com.feedback.ui.SendFeedback:
    android.widget.Spinner b -> b
    android.widget.Spinner c -> c
    android.widget.EditText d -> d
    android.widget.TextView e -> e
    android.widget.TextView f -> f
    android.widget.ImageButton g -> g
    org.json.JSONObject h -> h
    boolean a -> a
    void onCreate(android.os.Bundle) -> onCreate
    android.widget.EditText a(com.feedback.ui.SendFeedback) -> a
    android.widget.Spinner b(com.feedback.ui.SendFeedback) -> b
    android.widget.Spinner c(com.feedback.ui.SendFeedback) -> c
    void a(com.feedback.ui.SendFeedback,org.json.JSONObject) -> a
    org.json.JSONObject d(com.feedback.ui.SendFeedback) -> d
com.feedback.ui.a -> com.feedback.ui.a:
    com.feedback.ui.FeedbackConversation a -> a
    void onClick(android.view.View) -> onClick
com.feedback.ui.b -> com.feedback.ui.b:
    com.feedback.ui.FeedbackConversation a -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.feedback.ui.c -> com.feedback.ui.c:
    android.content.Context a -> a
    android.view.LayoutInflater b -> b
    java.lang.String d -> c
    com.feedback.a.d e -> d
    int[] f -> e
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void a(com.feedback.a.d) -> a
    int[] a() -> a
com.feedback.ui.d -> com.feedback.ui.d:
    android.widget.LinearLayout a -> a
    android.widget.RelativeLayout b -> b
    android.widget.TextView c -> c
    android.widget.TextView d -> d
    android.view.View e -> e
    android.view.View f -> f
    com.feedback.ui.c g -> g
com.feedback.ui.e -> com.feedback.ui.e:
    com.feedback.ui.FeedbackConversations a -> a
    void onClick(android.view.View) -> onClick
com.feedback.ui.f -> com.feedback.ui.f:
    com.feedback.ui.g a -> a
    com.feedback.ui.FeedbackConversations b -> b
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.feedback.ui.g -> com.feedback.ui.g:
    android.view.LayoutInflater a -> a
    android.content.Context b -> b
    java.util.List c -> c
    java.lang.String f -> d
    java.lang.String g -> e
    int getCount() -> getCount
    java.lang.Object getItem(int) -> getItem
    long getItemId(int) -> getItemId
    com.feedback.a.d b(int) -> a
    android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    void a(java.util.List) -> a
com.feedback.ui.h -> com.feedback.ui.h:
    android.widget.ImageView a -> a
    android.widget.TextView b -> b
    android.widget.TextView c -> c
    android.widget.TextView d -> d
    com.feedback.ui.g e -> e
com.feedback.ui.i -> com.feedback.ui.i:
    com.feedback.ui.SendFeedback a -> a
    void onClick(android.view.View) -> onClick
com.feedback.ui.j -> com.feedback.ui.j:
    com.feedback.ui.SendFeedback a -> a
    void onClick(android.view.View) -> onClick
com.google.ads.Ad -> com.google.ads.a:
com.google.ads.AdActivity -> com.google.ads.AdActivity:
    java.lang.Object a -> a
    com.google.ads.AdActivity b -> b
    d c -> c
    com.google.ads.AdActivity d -> d
    g e -> e
    long f -> f
    android.widget.RelativeLayout g -> g
    boolean h -> h
    android.widget.VideoView i -> i
    void a(java.lang.String) -> a
    android.widget.VideoView getVideoView() -> a
    void launchAdActivity(d,e) -> a
    void onClick(android.view.View) -> onClick
    void onCreate(android.os.Bundle) -> onCreate
    void a(g,boolean,int) -> a
    void showVideo(android.widget.VideoView) -> a
    void onCompletion(android.media.MediaPlayer) -> onCompletion
    void onDestroy() -> onDestroy
    void onPrepared(android.media.MediaPlayer) -> onPrepared
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
com.google.ads.AdListener -> com.google.ads.b:
    void onReceiveAd$51b51722() -> d
    void onFailedToReceiveAd$7b642d25(com.google.ads.AdRequest$ErrorCode) -> a
    void onPresentScreen$51b51722() -> c
    void onDismissScreen$51b51722() -> a
    void onLeaveApplication$51b51722() -> b
com.google.ads.AdRequest -> com.google.ads.c:
    com.google.ads.AdRequest$Gender a -> a
    java.lang.String b -> b
    java.util.Set c -> c
    java.util.Map d -> d
    android.location.Location e -> e
    boolean f -> f
    void setTesting$1385ff() -> a
    java.util.Map getRequestMap() -> b
com.google.ads.AdRequest$ErrorCode -> com.google.ads.d:
    com.google.ads.AdRequest$ErrorCode INVALID_REQUEST -> a
    com.google.ads.AdRequest$ErrorCode NO_FILL -> b
    com.google.ads.AdRequest$ErrorCode NETWORK_ERROR -> c
    com.google.ads.AdRequest$ErrorCode INTERNAL_ERROR -> d
    java.lang.String a -> e
    com.google.ads.AdRequest$ErrorCode[] b -> f
    com.google.ads.AdRequest$ErrorCode[] values() -> values
    com.google.ads.AdRequest$ErrorCode valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
com.google.ads.AdRequest$Gender -> com.google.ads.e:
    com.google.ads.AdRequest$Gender MALE -> a
    com.google.ads.AdRequest$Gender FEMALE -> b
    java.lang.String a -> c
    com.google.ads.AdRequest$Gender[] b -> d
    com.google.ads.AdRequest$Gender[] values() -> values
    com.google.ads.AdRequest$Gender valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
com.google.ads.AdSize -> com.google.ads.f:
    com.google.ads.AdSize BANNER -> a
    com.google.ads.AdSize IAB_MRECT -> b
    com.google.ads.AdSize IAB_BANNER -> c
    com.google.ads.AdSize IAB_LEADERBOARD -> d
    int a -> e
    int b -> f
    java.lang.String c -> g
    int getWidth() -> a
    int getHeight() -> b
    java.lang.String toString() -> toString
com.google.ads.AdView -> com.google.ads.g:
    d a -> a
    void loadAd(com.google.ads.AdRequest) -> a
    void setAdListener(com.google.ads.AdListener) -> a
com.google.ads.InstallReceiver -> com.google.ads.InstallReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    java.lang.String a(java.lang.String,java.lang.String,java.lang.String) -> a
    void a(android.content.Context,android.content.Intent) -> a
com.google.ads.InterstitialAd -> com.google.ads.h:
com.google.gson.ExclusionStrategy -> com.google.a.a:
    boolean shouldSkipField(com.google.gson.FieldAttributes) -> a
    boolean shouldSkipClass(java.lang.Class) -> a
com.google.gson.FieldAttributes -> com.google.a.b:
    com.google.gson.b a -> a
    java.lang.Class b -> b
    java.lang.reflect.Field c -> c
    java.lang.Class d -> d
    boolean e -> e
    int f -> f
    java.lang.String g -> g
    java.lang.reflect.Type h -> h
    java.util.Collection i -> i
    int c() -> f
    java.lang.String getName() -> a
    java.lang.reflect.Type getDeclaredType() -> b
    java.lang.Class getDeclaredClass() -> c
    java.lang.annotation.Annotation getAnnotation(java.lang.Class) -> a
    java.util.Collection getAnnotations() -> d
    boolean hasModifier(int) -> a
    java.lang.Object a(java.lang.Object) -> a
    boolean a() -> e
com.google.gson.Gson -> com.google.a.c:
    com.google.gson.a a -> a
    com.google.gson.ay b -> b
    com.google.gson.ak c -> c
    com.google.gson.w d -> d
    com.google.gson.k e -> e
    com.google.gson.ExclusionStrategy f -> f
    com.google.gson.ExclusionStrategy g -> g
    com.google.gson.ExclusionStrategy h -> h
    com.google.gson.k i -> i
    com.google.gson.ai j -> j
    com.google.gson.aq k -> k
    com.google.gson.aq l -> l
    com.google.gson.w m -> m
    boolean n -> n
    boolean o -> o
    java.lang.String toJson(java.lang.Object) -> a
    java.lang.String toString() -> toString
com.google.gson.JsonArray -> com.google.a.d:
    java.util.List a -> a
    void add(com.google.gson.JsonElement) -> a
    java.util.Iterator iterator() -> iterator
    void a(java.lang.Appendable,com.google.gson.h) -> a
com.google.gson.JsonDeserializer -> com.google.a.e:
com.google.gson.JsonElement -> com.google.a.f:
    com.google.gson.h a -> a
    boolean isJsonArray() -> a
    boolean isJsonObject() -> b
    boolean isJsonNull() -> c
    com.google.gson.JsonObject getAsJsonObject() -> d
    com.google.gson.JsonArray getAsJsonArray() -> e
    com.google.gson.JsonPrimitive getAsJsonPrimitive() -> f
    com.google.gson.JsonNull getAsJsonNull() -> g
    java.lang.String toString() -> toString
    void a(java.lang.Appendable,com.google.gson.h) -> a
com.google.gson.JsonNull -> com.google.a.g:
    com.google.gson.JsonNull a -> a
    void a(java.lang.Appendable,com.google.gson.h) -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    com.google.gson.JsonNull b() -> h
com.google.gson.JsonObject -> com.google.a.h:
    java.util.Map a -> a
    void add(java.lang.String,com.google.gson.JsonElement) -> a
    void addProperty(java.lang.String,java.lang.Number) -> a
    java.util.Set entrySet() -> h
    void a(java.lang.Appendable,com.google.gson.h) -> a
com.google.gson.JsonPrimitive -> com.google.a.i:
    java.lang.Class[] a -> a
    java.math.BigInteger b -> b
    java.math.BigInteger c -> c
    java.lang.Object d -> d
    void a(java.lang.Object) -> a
    void a(java.lang.Appendable,com.google.gson.h) -> a
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean a(com.google.gson.JsonPrimitive) -> a
    boolean b(com.google.gson.JsonPrimitive) -> b
com.google.gson.JsonSerializationContext -> com.google.a.j:
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type) -> a
com.google.gson.JsonSerializer -> com.google.a.k:
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
com.google.gson.LongSerializationPolicy -> com.google.a.l:
    com.google.gson.LongSerializationPolicy DEFAULT -> a
    com.google.gson.LongSerializationPolicy STRING -> b
    com.google.gson.LongSerializationPolicy$b a -> c
    com.google.gson.LongSerializationPolicy[] b -> d
    com.google.gson.LongSerializationPolicy[] values() -> values
    com.google.gson.LongSerializationPolicy valueOf(java.lang.String) -> valueOf
    com.google.gson.JsonElement serialize(java.lang.Long) -> a
com.google.gson.LongSerializationPolicy$a -> com.google.a.m:
    com.google.gson.JsonElement a(java.lang.Long) -> a
com.google.gson.LongSerializationPolicy$b -> com.google.a.n:
    com.google.gson.JsonElement a(java.lang.Long) -> a
com.google.gson.LongSerializationPolicy$c -> com.google.a.o:
    com.google.gson.JsonElement a(java.lang.Long) -> a
com.google.gson.ObjectNavigator -> com.google.a.p:
    com.google.gson.ExclusionStrategy a -> a
    com.google.gson.ao b -> b
    void a(com.google.gson.ObjectNavigator$Visitor) -> a
com.google.gson.ObjectNavigator$Visitor -> com.google.a.q:
    void start(com.google.gson.ao) -> a
    void end(com.google.gson.ao) -> b
    void startVisitingObject$5d527811() -> a
    void visitArray(java.lang.Object,java.lang.reflect.Type) -> a
    void visitObjectField(com.google.gson.FieldAttributes,java.lang.reflect.Type,java.lang.Object) -> a
    void visitArrayField(com.google.gson.FieldAttributes,java.lang.reflect.Type,java.lang.Object) -> b
    boolean visitUsingCustomHandler(com.google.gson.ao) -> c
    boolean visitFieldUsingCustomHandler(com.google.gson.FieldAttributes,java.lang.reflect.Type,java.lang.Object) -> c
    void visitPrimitive(java.lang.Object) -> a
com.google.gson.a -> com.google.a.r:
    boolean shouldSkipField(com.google.gson.FieldAttributes) -> a
    boolean shouldSkipClass(java.lang.Class) -> a
    boolean a(java.lang.Class) -> b
com.google.gson.ac -> com.google.a.s:
    com.google.gson.an a -> a
    com.google.gson.aq b -> b
    boolean c -> c
    com.google.gson.aj d -> d
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type) -> a
    com.google.gson.JsonElement a(java.lang.Object,java.lang.reflect.Type) -> b
com.google.gson.ad -> com.google.a.t:
    com.google.gson.an a -> a
    com.google.gson.aq b -> b
    boolean c -> c
    com.google.gson.JsonSerializationContext d -> d
    com.google.gson.aj e -> e
    com.google.gson.JsonElement f -> f
    void start(com.google.gson.ao) -> a
    void end(com.google.gson.ao) -> b
    void startVisitingObject$5d527811() -> a
    void visitArray(java.lang.Object,java.lang.reflect.Type) -> a
    void visitArrayField(com.google.gson.FieldAttributes,java.lang.reflect.Type,java.lang.Object) -> b
    void visitObjectField(com.google.gson.FieldAttributes,java.lang.reflect.Type,java.lang.Object) -> a
    void visitPrimitive(java.lang.Object) -> a
    void a(com.google.gson.FieldAttributes,com.google.gson.ao) -> a
    void a(com.google.gson.FieldAttributes,com.google.gson.JsonElement) -> a
    com.google.gson.JsonElement a(com.google.gson.ao) -> d
    boolean visitUsingCustomHandler(com.google.gson.ao) -> c
    com.google.gson.JsonElement b(com.google.gson.ao) -> e
    boolean visitFieldUsingCustomHandler(com.google.gson.FieldAttributes,java.lang.reflect.Type,java.lang.Object) -> c
    void a(com.google.gson.JsonElement) -> a
    boolean a(com.google.gson.FieldAttributes,java.lang.Object) -> a
    java.lang.Object b(com.google.gson.FieldAttributes,java.lang.Object) -> b
    com.google.gson.JsonElement a() -> b
com.google.gson.ae -> com.google.a.u:
    com.google.gson.u a -> a
    boolean b -> b
    void a(com.google.gson.JsonElement) -> a
com.google.gson.ah -> com.google.a.v:
    int a -> a
    void a(java.lang.Object,java.lang.Object) -> a
    void clear() -> clear
    java.lang.Object a(java.lang.Object) -> a
    int size() -> size
    boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
com.google.gson.ai -> com.google.a.w:
    java.util.logging.Logger a -> a
    com.google.gson.aq b -> b
    java.lang.String toString() -> toString
com.google.gson.aj -> com.google.a.x:
    java.util.Stack a -> a
    com.google.gson.ao a(com.google.gson.ao) -> a
    com.google.gson.ao a() -> a
    boolean b(com.google.gson.ao) -> b
com.google.gson.ak -> com.google.a.y:
    java.util.Collection a -> a
    boolean shouldSkipField(com.google.gson.FieldAttributes) -> a
    boolean shouldSkipClass(java.lang.Class) -> a
com.google.gson.al -> com.google.a.z:
    boolean shouldSkipField(com.google.gson.FieldAttributes) -> a
    boolean shouldSkipClass(java.lang.Class) -> a
com.google.gson.an -> com.google.a.aa:
    com.google.gson.ExclusionStrategy a -> a
    com.google.gson.k b -> b
    com.google.gson.ObjectNavigator a(com.google.gson.ao) -> a
    com.google.gson.k a() -> a
com.google.gson.annotations.SerializedName -> com.google.a.a.a:
    java.lang.String value() -> a
com.google.gson.ao -> com.google.a.ab:
    java.lang.Object b -> b
    java.lang.reflect.Type a -> a
    boolean c -> c
    java.lang.Object a() -> a
    void a(java.lang.Object) -> a
    com.google.gson.ap a(com.google.gson.aq) -> a
    com.google.gson.ao b() -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
com.google.gson.ap -> com.google.a.ac:
    java.lang.Object a -> a
    java.lang.Object b -> b
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    boolean a(java.lang.Object,java.lang.Object) -> a
    java.lang.String toString() -> toString
com.google.gson.aq -> com.google.a.ad:
    java.util.logging.Logger a -> a
    java.util.Map b -> b
    java.util.List c -> c
    boolean d -> d
    void a(java.lang.Class,java.lang.Object) -> a
    void a(com.google.gson.ap) -> a
    int a(java.lang.Class) -> a
    void a(java.lang.reflect.Type,java.lang.Object) -> a
    void a(com.google.gson.aq) -> a
    void b(java.lang.reflect.Type,java.lang.Object) -> b
    void a() -> a
    java.lang.Object a(java.lang.reflect.Type) -> a
    boolean b(java.lang.reflect.Type) -> b
    int b(java.lang.Class) -> b
    java.lang.String toString() -> toString
com.google.gson.ar -> com.google.a.ae:
    java.lang.reflect.Type a -> a
    java.lang.reflect.Type[] b -> b
    java.lang.reflect.Type c -> c
    java.lang.reflect.Type getRawType() -> getRawType
    java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    java.lang.reflect.Type getOwnerType() -> getOwnerType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.gson.at -> com.google.a.af:
    void a(java.lang.Object) -> a
    void a(boolean) -> a
com.google.gson.au -> com.google.a.ag:
    java.util.Map a -> a
    java.util.Map b -> b
    void a(java.util.Map,java.util.Map,java.lang.Class,java.lang.Class) -> a
    java.lang.Class c(java.lang.Class) -> a
com.google.gson.av -> com.google.a.ah:
    java.lang.String a(com.google.gson.FieldAttributes) -> a
    java.lang.String a$252cc7e1(java.lang.String) -> a
com.google.gson.aw -> com.google.a.ai:
    com.google.gson.v a -> a
    com.google.gson.k b -> b
    java.lang.String a(com.google.gson.FieldAttributes) -> a
com.google.gson.ay -> com.google.a.aj:
    boolean a -> a
    boolean shouldSkipClass(java.lang.Class) -> a
    boolean shouldSkipField(com.google.gson.FieldAttributes) -> a
com.google.gson.b -> com.google.a.ak:
    void a(java.lang.Object,java.lang.Object) -> a
    java.lang.Object a(java.lang.Object) -> a
com.google.gson.bb -> com.google.a.al:
    java.lang.reflect.Type a -> a
    java.lang.Class b -> b
    java.lang.reflect.Type a() -> a
    java.lang.Class b() -> b
    boolean c() -> c
com.google.gson.bc -> com.google.a.am:
    java.lang.Class c -> c
    java.lang.reflect.Type d -> d
    java.lang.reflect.Type e() -> d
com.google.gson.bd -> com.google.a.an:
    java.lang.reflect.ParameterizedType a -> a
    java.lang.reflect.Type a() -> a
com.google.gson.be -> com.google.a.ao:
    com.google.gson.bb a(java.lang.reflect.Field,java.lang.reflect.Type) -> a
    java.lang.reflect.Type a(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.Class) -> a
com.google.gson.bf -> com.google.a.ap:
    java.lang.reflect.Type a -> a
    java.lang.reflect.Type b -> b
    java.lang.reflect.Type b() -> a
com.google.gson.bg -> com.google.a.aq:
    boolean a(java.lang.reflect.Type) -> a
    java.lang.Class b(java.lang.reflect.Type) -> b
    java.lang.Class a(java.lang.Class) -> a
com.google.gson.d -> com.google.a.ar:
    java.lang.Object a -> a
    java.lang.IllegalStateException a(com.google.gson.FieldAttributes) -> a
com.google.gson.f -> com.google.a.as:
    com.google.gson.f$g a -> a
    com.google.gson.f$h b -> b
    com.google.gson.f$i c -> c
    com.google.gson.f$j d -> d
    com.google.gson.f$m e -> e
    com.google.gson.f$ac f -> f
    com.google.gson.f$ab g -> g
    com.google.gson.f$ad h -> h
    com.google.gson.f$s i -> i
    com.google.gson.f$f j -> j
    com.google.gson.f$v k -> k
    com.google.gson.f$a l -> l
    com.google.gson.f$b m -> m
    com.google.gson.f$c n -> n
    com.google.gson.f$d o -> o
    com.google.gson.f$e p -> p
    com.google.gson.f$k q -> q
    com.google.gson.f$n r -> r
    com.google.gson.f$r s -> s
    com.google.gson.f$t t -> t
    com.google.gson.f$w u -> u
    com.google.gson.f$y v -> v
    com.google.gson.f$z w -> w
    com.google.gson.f$x x -> x
    com.google.gson.f$aa y -> y
    com.google.gson.f$q z -> z
    com.google.gson.f$p A -> A
    com.google.gson.aq B -> B
    com.google.gson.aq C -> C
    com.google.gson.aq D -> D
    com.google.gson.JsonDeserializer a(com.google.gson.JsonDeserializer) -> a
    com.google.gson.aq a() -> a
    com.google.gson.aq b() -> b
    com.google.gson.aq c() -> c
com.google.gson.f$a -> com.google.a.at:
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
com.google.gson.f$aa -> com.google.a.au:
    java.lang.String toString() -> toString
com.google.gson.f$ab -> com.google.a.av:
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
com.google.gson.f$ac -> com.google.a.aw:
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
com.google.gson.f$ad -> com.google.a.ax:
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
com.google.gson.f$b -> com.google.a.ay:
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
com.google.gson.f$c -> com.google.a.az:
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
com.google.gson.f$d -> com.google.a.ba:
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
com.google.gson.f$e -> com.google.a.bb:
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
com.google.gson.f$f -> com.google.a.bc:
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
com.google.gson.f$g -> com.google.a.bd:
    java.text.DateFormat a -> a
    com.google.gson.JsonElement a(java.util.Date) -> a
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
com.google.gson.f$h -> com.google.a.be:
    java.text.DateFormat a -> a
    com.google.gson.JsonElement a(java.sql.Date) -> a
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
com.google.gson.f$i -> com.google.a.bf:
    java.text.DateFormat a -> a
    com.google.gson.JsonElement a(java.sql.Time) -> a
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
com.google.gson.f$j -> com.google.a.bg:
com.google.gson.f$k -> com.google.a.bh:
    java.lang.String toString() -> toString
com.google.gson.f$l -> com.google.a.bi:
    boolean a -> a
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
com.google.gson.f$m -> com.google.a.bj:
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
com.google.gson.f$n -> com.google.a.bk:
    java.lang.String toString() -> toString
com.google.gson.f$o -> com.google.a.bl:
    boolean a -> a
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
com.google.gson.f$p -> com.google.a.bm:
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
com.google.gson.f$q -> com.google.a.bn:
    java.lang.String toString() -> toString
com.google.gson.f$r -> com.google.a.bo:
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
com.google.gson.f$s -> com.google.a.bp:
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
com.google.gson.f$t -> com.google.a.bq:
    java.lang.String toString() -> toString
com.google.gson.f$u -> com.google.a.br:
    com.google.gson.LongSerializationPolicy a -> a
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
com.google.gson.f$v -> com.google.a.bs:
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
com.google.gson.f$w -> com.google.a.bt:
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
com.google.gson.f$x -> com.google.a.bu:
com.google.gson.f$y -> com.google.a.bv:
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
com.google.gson.f$z -> com.google.a.bw:
    java.lang.String toString() -> toString
    com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type,com.google.gson.JsonSerializationContext) -> a
com.google.gson.g -> com.google.a.bx:
    java.util.Collection a -> a
    boolean shouldSkipField(com.google.gson.FieldAttributes) -> a
    boolean shouldSkipClass(java.lang.Class) -> a
com.google.gson.h -> com.google.a.by:
    char[] a -> a
    java.util.Set b -> b
    java.util.Set c -> c
    boolean d -> d
    java.lang.String a(java.lang.CharSequence) -> a
    void a(java.lang.CharSequence,java.lang.StringBuffer) -> a
    void a(int,java.lang.Appendable) -> a
com.google.gson.k -> com.google.a.bz:
    java.lang.String a(com.google.gson.FieldAttributes) -> a
com.google.gson.m -> com.google.a.ca:
    java.lang.reflect.Type a -> a
    java.lang.reflect.Type getGenericComponentType() -> getGenericComponentType
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.google.gson.o -> com.google.a.cb:
    java.lang.String a$252cc7e1(java.lang.String) -> a
com.google.gson.q -> com.google.a.cc:
    boolean a -> a
    void a(com.google.gson.JsonElement,java.lang.Appendable,boolean) -> a
com.google.gson.q$a -> com.google.a.cd:
    java.lang.Appendable a -> a
    com.google.gson.h b -> b
    boolean c -> c
    void a(com.google.gson.JsonPrimitive) -> a
    void a() -> a
    void b() -> b
    void a(com.google.gson.JsonPrimitive,boolean) -> a
    void a(boolean) -> a
    void b(boolean) -> b
    void c(boolean) -> c
    void c() -> c
    void d() -> d
    void a(java.lang.String,com.google.gson.JsonPrimitive,boolean) -> a
    void a(java.lang.String,boolean) -> a
    void b(java.lang.String,boolean) -> b
    void c(java.lang.String,boolean) -> c
    void e() -> e
com.google.gson.t -> com.google.a.ce:
    com.google.gson.JsonDeserializer a -> a
    java.lang.String toString() -> toString
com.google.gson.u -> com.google.a.cf:
    void a(com.google.gson.JsonPrimitive) -> a
    void a() -> a
    void b() -> b
    void a(com.google.gson.JsonPrimitive,boolean) -> a
    void a(boolean) -> a
    void b(boolean) -> b
    void c(boolean) -> c
    void c() -> c
    void d() -> d
    void a(java.lang.String,com.google.gson.JsonPrimitive,boolean) -> a
    void a(java.lang.String,boolean) -> a
    void b(java.lang.String,boolean) -> b
    void c(java.lang.String,boolean) -> c
    void e() -> e
com.google.gson.v -> com.google.a.cg:
    java.util.regex.Pattern a -> a
    java.lang.String a(java.lang.String) -> a
com.google.gson.w -> com.google.a.ch:
    void a(com.google.gson.JsonElement,java.lang.Appendable,boolean) -> a
com.heyzap.sdk.HeyzapAnalytics -> com.heyzap.sdk.HeyzapAnalytics:
    boolean loaded -> a
    java.lang.String deviceId -> b
    java.lang.String packageName -> c
    java.lang.String trackHash -> d
    java.util.concurrent.ExecutorService requestThread -> e
com.heyzap.sdk.HeyzapButton -> com.heyzap.sdk.HeyzapButton:
com.heyzap.sdk.HeyzapLib -> com.heyzap.sdk.HeyzapLib:
com.heyzap.sdk.R -> com.heyzap.sdk.R:
com.heyzap.sdk.R$drawable -> com.heyzap.sdk.R$drawable:
com.mobclick.android.MobclickAgent -> com.b.a.a:
    com.mobclick.android.MobclickAgent a -> f
    int b -> g
    android.content.Context c -> h
    android.os.Handler d -> i
    com.mobclick.android.UmengUpdateListener i -> j
    com.mobclick.android.UmengOnlineConfigureListener j -> k
    java.lang.String GPU_VENDER -> a
    java.lang.String GPU_RENDERER -> b
    boolean mUpdateOnlyWifi -> c
    boolean mUseLocationService -> d
    org.json.JSONObject k -> l
    boolean updateAutoPopup -> e
    void onPause(android.content.Context) -> a
    void onResume(android.content.Context) -> b
    java.lang.String b(android.content.Context) -> d
    void a$62dc3a79(android.content.Context,java.lang.String) -> a
    void c(android.content.Context) -> e
    void a$182ca992(android.content.Context,java.lang.String,java.lang.String,int) -> a
    void b$5ffc00fd(android.content.Context) -> f
    android.app.AlertDialog b(android.content.Context,org.json.JSONObject) -> d
    java.lang.String a$bc2fcf7(android.content.Context,org.json.JSONObject,java.lang.String,boolean) -> a
    boolean a(java.lang.String,android.content.Context) -> a
    java.lang.String a(java.io.InputStream) -> a
    org.json.JSONObject f(android.content.Context) -> g
    void g(android.content.Context) -> h
    android.content.SharedPreferences h(android.content.Context) -> i
    android.content.SharedPreferences i(android.content.Context) -> j
    android.content.SharedPreferences j(android.content.Context) -> k
    java.lang.String l(android.content.Context) -> l
    android.content.SharedPreferences a(android.content.Context) -> c
    java.lang.String c() -> b
    java.io.File e(android.content.Context,org.json.JSONObject) -> e
    android.content.SharedPreferences m(android.content.Context) -> m
    com.mobclick.android.MobclickAgent a() -> a
    void a$4bdae0f6(android.content.Context,org.json.JSONObject) -> a
    void b$4bdae0f6(android.content.Context,org.json.JSONObject) -> b
    void c$4bdae0f6(android.content.Context,org.json.JSONObject) -> c
    void a(com.mobclick.android.MobclickAgent,android.content.Context) -> a
    void a$7e5fd124(com.mobclick.android.MobclickAgent,android.content.Context,java.lang.String) -> a
    void a$3c668592(com.mobclick.android.MobclickAgent,android.content.Context) -> b
    void a$2c2631e3(com.mobclick.android.MobclickAgent,android.content.Context,java.lang.String,java.lang.String,int) -> a
    void a(android.content.Context,java.io.File) -> a
com.mobclick.android.UmengConstants -> com.b.a.b:
    boolean enableCacheInUpdate -> a
    boolean testMode -> b
    boolean LOCATION_OPEN -> c
    boolean ACTIVITY_DURATION_OPEN -> d
    boolean canResume -> e
    boolean canCollectionUserInfo -> f
    java.lang.String channel -> g
    java.lang.String LAST_SEND_TIME -> h
    java.lang.Object saveOnlineConfigMutex -> i
    java.lang.String[] APPLOG_URL_LIST -> j
    java.lang.String[] UPDATE_URL_LIST -> k
    boolean COMPRESS_DATA -> l
com.mobclick.android.UmengOnlineConfigureListener -> com.b.a.c:
com.mobclick.android.UmengUpdateListener -> com.b.a.d:
com.mobclick.android.UpdateStatus -> com.b.a.e:
    int Yes -> a
    int No -> b
    int NoneWifi -> c
    int Timeout -> d
com.mobclick.android.a -> com.b.a.f:
    android.content.Context a -> a
    int b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    android.app.Notification g -> g
    android.app.NotificationManager h -> h
    int i -> i
    boolean j -> j
    boolean k -> k
    int l -> l
    android.os.Handler m -> m
    int a(java.lang.String,java.lang.String) -> a
    void c() -> a
    void d() -> b
    boolean f() -> c
    java.lang.String a(java.lang.String,java.lang.String,int) -> a
    java.lang.String a(com.mobclick.android.a) -> a
    java.lang.String b(com.mobclick.android.a) -> b
    android.content.Context c(com.mobclick.android.a) -> c
    void a$54465278(com.mobclick.android.a) -> d
    int d(com.mobclick.android.a) -> e
    boolean e(com.mobclick.android.a) -> f
    void b(com.mobclick.android.a,boolean) -> a
com.mobclick.android.b -> com.b.a.g:
    com.mobclick.android.a a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.mobclick.android.c -> com.b.a.h:
    com.mobclick.android.a a -> a
    void run() -> run
com.mobclick.android.d -> com.b.a.i:
    int a -> a
    int b -> b
    int c -> c
com.mobclick.android.e -> com.b.a.j:
    android.location.LocationManager a -> a
    android.content.Context b -> b
    android.location.Location a() -> a
com.mobclick.android.f -> com.b.a.k:
    android.content.Context a -> a
    java.io.File b -> b
    void onClick(android.content.DialogInterface,int) -> onClick
com.mobclick.android.g -> com.b.a.l:
    void onClick(android.content.DialogInterface,int) -> onClick
com.mobclick.android.h -> com.b.a.m:
    android.content.Context a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    void onClick(android.content.DialogInterface,int) -> onClick
com.mobclick.android.i -> com.b.a.n:
    void onClick(android.content.DialogInterface,int) -> onClick
com.mobclick.android.j -> com.b.a.o:
    java.lang.Object a -> a
    android.content.Context b -> b
    int c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    int h -> h
    void run() -> run
com.mobclick.android.k -> com.b.a.p:
    java.lang.Object a -> a
    com.mobclick.android.MobclickAgent b -> b
    android.content.Context c -> c
    org.json.JSONObject d -> d
    void run() -> run
com.mobclick.android.l -> com.b.a.q:
    java.lang.String a -> a
    int b -> b
    boolean a(android.content.Context,java.lang.String) -> a
    java.lang.String b(android.content.Context) -> a
    java.lang.String a(java.lang.String) -> c
    java.lang.String c(android.content.Context) -> b
    java.lang.String i(android.content.Context) -> g
    java.lang.String a() -> b
    byte[] c(java.lang.String) -> a
    java.lang.String a(java.util.Date) -> a
    java.lang.String b() -> a
    java.util.Date d(java.lang.String) -> b
    org.json.JSONObject e(android.content.Context) -> c
    java.lang.String[] f(android.content.Context) -> d
    java.lang.String g(android.content.Context) -> e
    boolean h(android.content.Context) -> f
    int a(android.content.Context,java.lang.String,java.lang.String) -> a
    org.json.JSONObject k(android.content.Context) -> h
com.scoreloop.client.android.core.BuildConfig -> com.scoreloop.client.android.core.BuildConfig:
com.scoreloop.client.android.core.PublishedFor__1_0_0 -> com.scoreloop.client.android.core.PublishedFor__1_0_0:
com.scoreloop.client.android.core.PublishedFor__1_1_0 -> com.scoreloop.client.android.core.PublishedFor__1_1_0:
com.scoreloop.client.android.core.PublishedFor__2_0_0 -> com.scoreloop.client.android.core.PublishedFor__2_0_0:
com.scoreloop.client.android.core.PublishedFor__2_1_0 -> com.scoreloop.client.android.core.PublishedFor__2_1_0:
com.scoreloop.client.android.core.PublishedFor__2_2_0 -> com.scoreloop.client.android.core.PublishedFor__2_2_0:
com.scoreloop.client.android.core.PublishedFor__2_3_0 -> com.scoreloop.client.android.core.PublishedFor__2_3_0:
com.scoreloop.client.android.core.PublishedFor__2_4_0 -> com.scoreloop.client.android.core.PublishedFor__2_4_0:
com.scoreloop.client.android.core.PublishedFor__3_0_0 -> com.scoreloop.client.android.core.PublishedFor__3_0_0:
com.scoreloop.client.android.core.PublishedFor__3_0_2 -> com.scoreloop.client.android.core.PublishedFor__3_0_2:
com.scoreloop.client.android.core.UsedByScoreloopApp -> com.scoreloop.client.android.core.UsedByScoreloopApp:
com.scoreloop.client.android.core.UsedByTests -> com.scoreloop.client.android.core.UsedByTests:
com.scoreloop.client.android.core.UsedInternally -> com.scoreloop.client.android.core.UsedInternally:
com.scoreloop.client.android.core.addon.AndroidImage -> com.scoreloop.client.android.core.addon.AndroidImage:
    android.content.ContentResolver a -> a
    android.graphics.BitmapFactory$Options b -> b
    android.net.Uri c -> c
    float a(android.net.Uri,android.content.ContentResolver) -> a
    byte[] toPngByteArray(int,int,com.scoreloop.client.android.core.model.Image$ResizeMode) -> toPngByteArray
com.scoreloop.client.android.core.addon.RSSFeed -> com.scoreloop.client.android.core.addon.RSSFeed:
    java.util.Set a -> a
    com.scoreloop.client.android.core.addon.RSSFeed$Policy STANDARD_POLICY -> STANDARD_POLICY
    com.scoreloop.client.android.core.addon.RSSFeed$Policy STICKY_POLICY -> STICKY_POLICY
    com.scoreloop.client.android.core.addon.RSSFeed$Policy UNREAD_POLICY -> UNREAD_POLICY
    com.scoreloop.client.android.core.addon.RSSFeed$Policy ON_START_POLICY -> ON_START_POLICY
    com.scoreloop.client.android.core.addon.RSSItem b -> b
    java.util.concurrent.ExecutorService c -> c
    java.util.List d -> d
    com.scoreloop.client.android.core.util.MainThreadHandler e -> e
    org.apache.http.client.methods.HttpUriRequest f -> f
    boolean g -> g
    com.scoreloop.client.android.core.addon.RSSItem h -> h
    com.scoreloop.client.android.core.addon.RSSFeedObserver i -> i
    com.scoreloop.client.android.core.model.Session j -> j
    java.util.Set k -> k
    com.scoreloop.client.android.core.addon.RSSFeed$State l -> l
    void cancelRequestNextItem() -> cancelRequestNextItem
    com.scoreloop.client.android.core.addon.RSSItem getDefaultItem() -> getDefaultItem
    java.lang.String a() -> a
    com.scoreloop.client.android.core.addon.RSSItem getLastItem() -> getLastItem
    com.scoreloop.client.android.core.addon.RSSFeed$State getState() -> getState
    java.lang.String a(org.w3c.dom.Node) -> a
    boolean hasSessionReadFlag(com.scoreloop.client.android.core.addon.RSSItem) -> hasSessionReadFlag
    boolean isUnread(com.scoreloop.client.android.core.addon.RSSItem) -> isUnread
    java.util.List a(java.io.InputStream) -> a
    java.util.Date a(java.lang.String) -> a
    void reloadOnNextRequest() -> reloadOnNextRequest
    void requestNextItem(com.scoreloop.client.android.core.addon.RSSFeed$Policy) -> requestNextItem
    boolean requestAllItems(com.scoreloop.client.android.core.model.Continuation,boolean,com.scoreloop.client.android.core.addon.RSSFeed$Policy) -> requestAllItems
    void setDefaultItem(com.scoreloop.client.android.core.addon.RSSItem) -> setDefaultItem
    void a(com.scoreloop.client.android.core.model.Continuation) -> a
    void a(com.scoreloop.client.android.core.addon.RSSFeed,com.scoreloop.client.android.core.addon.RSSItem) -> a
    com.scoreloop.client.android.core.addon.RSSItem b(com.scoreloop.client.android.core.addon.RSSFeed,com.scoreloop.client.android.core.addon.RSSItem) -> b
    com.scoreloop.client.android.core.addon.RSSFeed$State a(com.scoreloop.client.android.core.addon.RSSFeed,com.scoreloop.client.android.core.addon.RSSFeed$State) -> a
    com.scoreloop.client.android.core.addon.RSSFeedObserver a(com.scoreloop.client.android.core.addon.RSSFeed) -> a
    java.util.List a(com.scoreloop.client.android.core.addon.RSSFeed,java.util.List) -> a
    com.scoreloop.client.android.core.model.Session b(com.scoreloop.client.android.core.addon.RSSFeed) -> b
    boolean c(com.scoreloop.client.android.core.addon.RSSFeed) -> c
    void a(com.scoreloop.client.android.core.addon.RSSFeed,com.scoreloop.client.android.core.model.Continuation) -> a
    org.apache.http.client.methods.HttpUriRequest a(com.scoreloop.client.android.core.addon.RSSFeed,org.apache.http.client.methods.HttpUriRequest) -> a
    java.lang.String d(com.scoreloop.client.android.core.addon.RSSFeed) -> d
    org.apache.http.client.methods.HttpUriRequest e(com.scoreloop.client.android.core.addon.RSSFeed) -> e
    java.util.List a(com.scoreloop.client.android.core.addon.RSSFeed,java.io.InputStream) -> a
    void a(com.scoreloop.client.android.core.addon.RSSFeed,java.util.List,com.scoreloop.client.android.core.model.Continuation) -> a
    com.scoreloop.client.android.core.util.MainThreadHandler f(com.scoreloop.client.android.core.addon.RSSFeed) -> f
com.scoreloop.client.android.core.addon.RSSFeed$1 -> com.scoreloop.client.android.core.addon.RSSFeed$1:
    com.scoreloop.client.android.core.addon.RSSFeed$Policy a -> a
    com.scoreloop.client.android.core.addon.RSSFeed b -> b
    void withValue(java.lang.Object,java.lang.Exception) -> withValue
com.scoreloop.client.android.core.addon.RSSFeed$2 -> com.scoreloop.client.android.core.addon.RSSFeed$2:
    com.scoreloop.client.android.core.addon.RSSFeed$Policy a -> a
    boolean b -> b
    com.scoreloop.client.android.core.model.Continuation c -> c
    com.scoreloop.client.android.core.addon.RSSFeed d -> d
    void withValue(java.lang.Object,java.lang.Exception) -> withValue
com.scoreloop.client.android.core.addon.RSSFeed$3 -> com.scoreloop.client.android.core.addon.RSSFeed$3:
    java.util.List a -> a
    com.scoreloop.client.android.core.model.Continuation b -> b
    com.scoreloop.client.android.core.addon.RSSFeed c -> c
    void run() -> run
com.scoreloop.client.android.core.addon.RSSFeed$4 -> com.scoreloop.client.android.core.addon.RSSFeed$4:
    com.scoreloop.client.android.core.model.Continuation a -> a
    com.scoreloop.client.android.core.addon.RSSFeed b -> b
    void withValue(java.lang.Object,java.lang.Exception) -> withValue
com.scoreloop.client.android.core.addon.RSSFeed$5 -> com.scoreloop.client.android.core.addon.RSSFeed$5:
    com.scoreloop.client.android.core.model.Continuation a -> a
    com.scoreloop.client.android.core.addon.RSSFeed b -> b
    void run() -> run
com.scoreloop.client.android.core.addon.RSSFeed$5$1 -> com.scoreloop.client.android.core.addon.RSSFeed$5$1:
    com.scoreloop.client.android.core.addon.RSSFeed$5 a -> a
    java.lang.Object handleResponse(org.apache.http.HttpResponse) -> handleResponse
com.scoreloop.client.android.core.addon.RSSFeed$5$2 -> com.scoreloop.client.android.core.addon.RSSFeed$5$2:
    java.lang.Exception a -> a
    com.scoreloop.client.android.core.addon.RSSFeed$5 b -> b
    void run() -> run
com.scoreloop.client.android.core.addon.RSSFeed$ChainedPolicy -> com.scoreloop.client.android.core.addon.RSSFeed$ChainedPolicy:
    com.scoreloop.client.android.core.addon.RSSFeed$Policy[] a -> a
    void collectItems(com.scoreloop.client.android.core.addon.RSSFeed,java.util.List,java.util.List) -> collectItems
com.scoreloop.client.android.core.addon.RSSFeed$Policy -> com.scoreloop.client.android.core.addon.RSSFeed$Policy:
    void collectItems(com.scoreloop.client.android.core.addon.RSSFeed,java.util.List,java.util.List) -> collectItems
com.scoreloop.client.android.core.addon.RSSFeed$RequestNextItemCanceledException -> com.scoreloop.client.android.core.addon.RSSFeed$RequestNextItemCanceledException:
    long serialVersionUID -> serialVersionUID
com.scoreloop.client.android.core.addon.RSSFeed$State -> com.scoreloop.client.android.core.addon.RSSFeed$State:
    com.scoreloop.client.android.core.addon.RSSFeed$State IDLE -> IDLE
    com.scoreloop.client.android.core.addon.RSSFeed$State PENDING -> PENDING
    com.scoreloop.client.android.core.addon.RSSFeed$State[] a -> a
    com.scoreloop.client.android.core.addon.RSSFeed$State[] values() -> values
    com.scoreloop.client.android.core.addon.RSSFeed$State valueOf(java.lang.String) -> valueOf
com.scoreloop.client.android.core.addon.RSSFeed$a -> com.scoreloop.client.android.core.addon.RSSFeed$a:
    void collectItems(com.scoreloop.client.android.core.addon.RSSFeed,java.util.List,java.util.List) -> collectItems
com.scoreloop.client.android.core.addon.RSSFeed$b -> com.scoreloop.client.android.core.addon.RSSFeed$b:
    void collectItems(com.scoreloop.client.android.core.addon.RSSFeed,java.util.List,java.util.List) -> collectItems
com.scoreloop.client.android.core.addon.RSSFeed$c -> com.scoreloop.client.android.core.addon.RSSFeed$c:
    void collectItems(com.scoreloop.client.android.core.addon.RSSFeed,java.util.List,java.util.List) -> collectItems
com.scoreloop.client.android.core.addon.RSSFeedObserver -> com.scoreloop.client.android.core.addon.RSSFeedObserver:
    void feedDidFailToReceiveNextItem(com.scoreloop.client.android.core.addon.RSSFeed,java.lang.Exception) -> feedDidFailToReceiveNextItem
    void feedDidReceiveNextItem(com.scoreloop.client.android.core.addon.RSSFeed,com.scoreloop.client.android.core.addon.RSSItem) -> feedDidReceiveNextItem
    void feedDidRequestNextItem(com.scoreloop.client.android.core.addon.RSSFeed) -> feedDidRequestNextItem
com.scoreloop.client.android.core.addon.RSSItem -> com.scoreloop.client.android.core.addon.RSSItem:
    android.content.Context a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    boolean e -> e
    java.lang.String f -> f
    java.lang.Boolean g -> g
    java.util.Date h -> h
    java.lang.String i -> i
    void resetPersistentReadFlags(android.content.Context,java.util.List) -> resetPersistentReadFlags
    boolean equals(java.lang.Object) -> equals
    java.lang.String getDescription() -> getDescription
    java.lang.String getIdentifier() -> getIdentifier
    java.lang.String getImageUrlString() -> getImageUrlString
    java.lang.String getLinkUrlString() -> getLinkUrlString
    java.util.Date getPubDate() -> getPubDate
    java.lang.String getTitle() -> getTitle
    int hashCode() -> hashCode
    boolean hasPersistentReadFlag() -> hasPersistentReadFlag
    boolean isSticky() -> isSticky
    boolean a() -> a
    void a(java.lang.String) -> a
    void setHasPersistentReadFlag(boolean) -> setHasPersistentReadFlag
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void a(java.util.Date) -> a
    void a(boolean) -> a
    void e(java.lang.String) -> e
com.scoreloop.client.android.core.controller.AchievementController -> com.scoreloop.client.android.core.controller.AchievementController:
    com.scoreloop.client.android.core.model.Achievement b -> b
    com.scoreloop.client.android.core.model.Achievement getAchievement() -> getAchievement
    boolean a(com.scoreloop.client.android.core.server.Request,com.scoreloop.client.android.core.server.Response) -> a
    void setAchievement(com.scoreloop.client.android.core.model.Achievement) -> setAchievement
    void submitAchievement() -> submitAchievement
com.scoreloop.client.android.core.controller.AchievementController$a -> com.scoreloop.client.android.core.controller.AchievementController$a:
    com.scoreloop.client.android.core.model.Achievement a -> a
    com.scoreloop.client.android.core.model.Game b -> b
    com.scoreloop.client.android.core.model.User c -> c
    java.lang.String a() -> a
    org.json.JSONObject b() -> b
    com.scoreloop.client.android.core.server.RequestMethod c() -> c
com.scoreloop.client.android.core.controller.AchievementsController -> com.scoreloop.client.android.core.controller.AchievementsController:
    java.util.List b -> b
    com.scoreloop.client.android.core.model.AchievementsStore c -> c
    com.scoreloop.client.android.core.model.AwardList d -> d
    boolean e -> e
    com.scoreloop.client.android.core.model.User f -> f
    com.scoreloop.client.android.core.model.AwardList getLocalAwardList(android.content.Context,java.lang.String,java.lang.String) -> getLocalAwardList
    void a(java.util.List,java.util.List) -> a
    void b() -> b
    int countAchievedAwards() -> countAchievedAwards
    com.scoreloop.client.android.core.model.Achievement getAchievementForAwardIdentifier(java.lang.String) -> getAchievementForAwardIdentifier
    com.scoreloop.client.android.core.model.Achievement a(java.lang.String,java.lang.String) -> a
    java.util.List getAchievements() -> getAchievements
    com.scoreloop.client.android.core.model.AchievementsStore a() -> a
    com.scoreloop.client.android.core.model.AwardList getAwardList() -> getAwardList
    boolean getForceInitialSync() -> getForceInitialSync
    com.scoreloop.client.android.core.model.User getUser() -> getUser
    void checkHadInitialSync(com.scoreloop.client.android.core.model.Continuation) -> checkHadInitialSync
    void loadAchievements() -> loadAchievements
    void a(java.util.List) -> a
    boolean a(com.scoreloop.client.android.core.server.Request,com.scoreloop.client.android.core.server.Response) -> a
    void b(java.util.List) -> b
    void setForceInitialSync(boolean) -> setForceInitialSync
    void setUser(com.scoreloop.client.android.core.model.User) -> setUser
    boolean a(com.scoreloop.client.android.core.controller.AchievementsController) -> a
    void b(com.scoreloop.client.android.core.controller.AchievementsController) -> b
    void c(com.scoreloop.client.android.core.controller.AchievementsController) -> c
    void d(com.scoreloop.client.android.core.controller.AchievementsController) -> d
com.scoreloop.client.android.core.controller.AchievementsController$1 -> com.scoreloop.client.android.core.controller.AchievementsController$1:
    java.lang.Exception a -> a
    com.scoreloop.client.android.core.model.Continuation b -> b
    com.scoreloop.client.android.core.controller.AchievementsController c -> c
    java.lang.Boolean c() -> c
    void a(java.lang.Object) -> a
    java.lang.Object a(java.lang.Object[]) -> a
com.scoreloop.client.android.core.controller.AchievementsController$2 -> com.scoreloop.client.android.core.controller.AchievementsController$2:
    com.scoreloop.client.android.core.controller.AchievementsController a -> a
    void withValue(java.lang.Object,java.lang.Exception) -> withValue
com.scoreloop.client.android.core.controller.AchievementsController$2$1 -> com.scoreloop.client.android.core.controller.AchievementsController$2$1:
    com.scoreloop.client.android.core.controller.AchievementsController$2 a -> a
    void a(java.lang.Object) -> a
    java.lang.Object a(java.lang.Object[]) -> a
com.scoreloop.client.android.core.controller.AchievementsController$3 -> com.scoreloop.client.android.core.controller.AchievementsController$3:
    com.scoreloop.client.android.core.controller.AchievementsController a -> a
    java.lang.Object a(java.lang.Object[]) -> a
com.scoreloop.client.android.core.controller.AchievementsController$4 -> com.scoreloop.client.android.core.controller.AchievementsController$4:
    com.scoreloop.client.android.core.controller.AchievementsController a -> a
    java.lang.Object a(java.lang.Object[]) -> a
com.scoreloop.client.android.core.controller.AchievementsController$a -> com.scoreloop.client.android.core.controller.AchievementsController$a:
    com.scoreloop.client.android.core.model.AwardList a -> a
    com.scoreloop.client.android.core.model.Game b -> b
    com.scoreloop.client.android.core.model.User c -> c
    java.lang.String a() -> a
    org.json.JSONObject b() -> b
    com.scoreloop.client.android.core.server.RequestMethod c() -> c
com.scoreloop.client.android.core.controller.ActivitiesController -> com.scoreloop.client.android.core.controller.ActivitiesController:
    java.util.List b -> b
    java.util.List getActivities() -> getActivities
    void loadActivitiesForUser(com.scoreloop.client.android.core.model.User) -> loadActivitiesForUser
    boolean a(com.scoreloop.client.android.core.server.Request,com.scoreloop.client.android.core.server.Response) -> a
com.scoreloop.client.android.core.controller.ActivitiesController$a -> com.scoreloop.client.android.core.controller.ActivitiesController$a:
    com.scoreloop.client.android.core.model.User a -> a
    java.lang.String a() -> a
    com.scoreloop.client.android.core.server.RequestMethod c() -> c
com.scoreloop.client.android.core.controller.ChallengeController -> com.scoreloop.client.android.core.controller.ChallengeController:
    com.scoreloop.client.android.core.model.Challenge b -> b
    com.scoreloop.client.android.core.controller.ChallengeController$c c -> c
    void acceptChallenge() -> acceptChallenge
    void createChallenge(com.scoreloop.client.android.core.model.Money,com.scoreloop.client.android.core.model.User) -> createChallenge
    void a(com.scoreloop.client.android.core.model.Score,com.scoreloop.client.android.core.model.User) -> a
    com.scoreloop.client.android.core.model.Challenge getChallenge() -> getChallenge
    boolean a(com.scoreloop.client.android.core.server.Request,com.scoreloop.client.android.core.server.Response) -> a
    void rejectChallenge() -> rejectChallenge
    void a(int,com.scoreloop.client.android.core.controller.RequestControllerObserver) -> a
    void setChallenge(com.scoreloop.client.android.core.model.Challenge) -> setChallenge
    void submitChallenge() -> submitChallenge
    void submitChallengeScore(com.scoreloop.client.android.core.model.Score) -> submitChallengeScore
com.scoreloop.client.android.core.controller.ChallengeController$a -> com.scoreloop.client.android.core.controller.ChallengeController$a:
    com.scoreloop.client.android.core.model.Challenge a -> a
    com.scoreloop.client.android.core.model.Game b -> b
    java.lang.String a() -> a
    org.json.JSONObject b() -> b
    com.scoreloop.client.android.core.server.RequestMethod c() -> c
com.scoreloop.client.android.core.controller.ChallengeController$b -> com.scoreloop.client.android.core.controller.ChallengeController$b:
    java.lang.String a() -> a
    com.scoreloop.client.android.core.server.RequestMethod c() -> c
com.scoreloop.client.android.core.controller.ChallengeController$c -> com.scoreloop.client.android.core.controller.ChallengeController$c:
    com.scoreloop.client.android.core.controller.ChallengeController a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.scoreloop.client.android.core.controller.ChallengesController -> com.scoreloop.client.android.core.controller.ChallengesController:
    java.util.List b -> b
    com.scoreloop.client.android.core.model.User c -> c
    java.util.List getChallenges() -> getChallenges
    void loadChallengeHistory() -> loadChallengeHistory
    void loadOpenChallenges() -> loadOpenChallenges
    void a(java.lang.String) -> a
    boolean a(com.scoreloop.client.android.core.server.Request,com.scoreloop.client.android.core.server.Response) -> a
    com.scoreloop.client.android.core.model.User getUser() -> getUser
    void setUser(com.scoreloop.client.android.core.model.User) -> setUser
com.scoreloop.client.android.core.controller.ChallengesController$a -> com.scoreloop.client.android.core.controller.ChallengesController$a:
    com.scoreloop.client.android.core.model.Game a -> a
    java.lang.String b -> b
    com.scoreloop.client.android.core.model.User c -> c
    java.lang.String a() -> a
    org.json.JSONObject b() -> b
    com.scoreloop.client.android.core.server.RequestMethod c() -> c
com.scoreloop.client.android.core.controller.GameController -> com.scoreloop.client.android.core.controller.GameController:
    com.scoreloop.client.android.core.model.Game b -> b
    com.scoreloop.client.android.core.model.Game getGame() -> getGame
    void loadGame() -> loadGame
    boolean a(com.scoreloop.client.android.core.server.Request,com.scoreloop.client.android.core.server.Response) -> a
    void setGame(com.scoreloop.client.android.core.model.Entity) -> setGame
com.scoreloop.client.android.core.controller.GameController$a -> com.scoreloop.client.android.core.controller.GameController$a:
    com.scoreloop.client.android.core.model.Entity a -> a
    java.lang.String a() -> a
    org.json.JSONObject b() -> b
    com.scoreloop.client.android.core.server.RequestMethod c() -> c
com.scoreloop.client.android.core.controller.GameItemController -> com.scoreloop.client.android.core.controller.GameItemController:
    java.lang.String b -> b
    com.scoreloop.client.android.core.model.GameItem c -> c
    java.lang.String getCurrency() -> getCurrency
    com.scoreloop.client.android.core.model.GameItem getGameItem() -> getGameItem
    void loadGameItem() -> loadGameItem
    void loadGameItemDownloadUrl() -> loadGameItemDownloadUrl
    boolean a(com.scoreloop.client.android.core.server.Request,com.scoreloop.client.android.core.server.Response) -> a
    void setCurrency(java.lang.String) -> setCurrency
    void setGameItem(com.scoreloop.client.android.core.model.Entity) -> setGameItem
    void submitOwnership() -> submitOwnership
com.scoreloop.client.android.core.controller.GameItemController$a -> com.scoreloop.client.android.core.controller.GameItemController$a:
    com.scoreloop.client.android.core.model.User a -> a
    org.json.JSONObject b() -> b
com.scoreloop.client.android.core.controller.GameItemController$b -> com.scoreloop.client.android.core.controller.GameItemController$b:
    com.scoreloop.client.android.core.model.User a -> a
    java.lang.String b -> b
    com.scoreloop.client.android.core.model.Device c -> c
    org.json.JSONObject b() -> b
com.scoreloop.client.android.core.controller.GameItemController$c -> com.scoreloop.client.android.core.controller.GameItemController$c:
    com.scoreloop.client.android.core.model.User a -> a
    org.json.JSONObject b() -> b
com.scoreloop.client.android.core.controller.GameItemsController -> com.scoreloop.client.android.core.controller.GameItemsController:
    java.lang.String b -> b
    java.util.List c -> c
    java.lang.String d -> d
    java.util.List e -> e
    com.scoreloop.client.android.core.controller.GameItemsController$TagsMode f -> f
    java.lang.String getCurrency() -> getCurrency
    java.util.List getGameItems() -> getGameItems
    java.lang.String getGameVersion() -> getGameVersion
    java.util.List getTags() -> getTags
    com.scoreloop.client.android.core.controller.GameItemsController$TagsMode getTagsMode() -> getTagsMode
    void loadCoinPacks() -> loadCoinPacks
    void loadGameItems() -> loadGameItems
    boolean a(com.scoreloop.client.android.core.server.Request,com.scoreloop.client.android.core.server.Response) -> a
    void setCurrency(java.lang.String) -> setCurrency
    void setGameVersion(java.lang.String) -> setGameVersion
    void setTags(java.util.List) -> setTags
    void setTagsMode(com.scoreloop.client.android.core.controller.GameItemsController$TagsMode) -> setTagsMode
com.scoreloop.client.android.core.controller.GameItemsController$TagsMode -> com.scoreloop.client.android.core.controller.GameItemsController$TagsMode:
    com.scoreloop.client.android.core.controller.GameItemsController$TagsMode REQUIRES_ALL_TAGS -> REQUIRES_ALL_TAGS
    com.scoreloop.client.android.core.controller.GameItemsController$TagsMode REQUIRES_ONE_OR_MORE_TAGS -> REQUIRES_ONE_OR_MORE_TAGS
    com.scoreloop.client.android.core.controller.d a -> a
    com.scoreloop.client.android.core.controller.GameItemsController$TagsMode[] b -> b
    com.scoreloop.client.android.core.controller.GameItemsController$TagsMode[] values() -> values
    com.scoreloop.client.android.core.controller.GameItemsController$TagsMode valueOf(java.lang.String) -> valueOf
com.scoreloop.client.android.core.controller.GameItemsController$a -> com.scoreloop.client.android.core.controller.GameItemsController$a:
    java.lang.String a -> a
    com.scoreloop.client.android.core.model.Device b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.util.List e -> e
    com.scoreloop.client.android.core.controller.d f -> f
    com.scoreloop.client.android.core.model.User g -> g
    org.json.JSONObject b() -> b
com.scoreloop.client.android.core.controller.GamesController -> com.scoreloop.client.android.core.controller.GamesController:
    com.scoreloop.client.android.core.controller.a b -> b
    boolean c -> c
    java.lang.String d -> d
    com.scoreloop.client.android.core.model.User e -> e
    java.util.List getGames() -> getGames
    boolean getLoadsDevicesPlatformOnly() -> getLoadsDevicesPlatformOnly
    int getRangeLength() -> getRangeLength
    boolean hasNextRange() -> hasNextRange
    boolean hasPreviousRange() -> hasPreviousRange
    void a(int) -> a
    void loadNextRange() -> loadNextRange
    void loadPreviousRange() -> loadPreviousRange
    void loadRangeForBuddies() -> loadRangeForBuddies
    void loadRangeForFeatured() -> loadRangeForFeatured
    void loadRangeForPopular() -> loadRangeForPopular
    void loadRangeForNew() -> loadRangeForNew
    void a(java.lang.String,com.scoreloop.client.android.core.model.User) -> a
    void loadRangeForUser(com.scoreloop.client.android.core.model.User) -> loadRangeForUser
    void loadFirstRange() -> loadFirstRange
    boolean a(com.scoreloop.client.android.core.server.Request,com.scoreloop.client.android.core.server.Response) -> a
    void b() -> b
    void setLoadsDevicesPlatformOnly(boolean) -> setLoadsDevicesPlatformOnly
    void setRangeLength(int) -> setRangeLength
com.scoreloop.client.android.core.controller.GamesController$a -> com.scoreloop.client.android.core.controller.GamesController$a:
    com.scoreloop.client.android.core.model.Device a -> a
    int b -> b
    int c -> c
    java.lang.String d -> d
    com.scoreloop.client.android.core.model.User e -> e
    java.lang.String a() -> a
    org.json.JSONObject b() -> b
    com.scoreloop.client.android.core.server.RequestMethod c() -> c
com.scoreloop.client.android.core.controller.LocalGameItemStore -> com.scoreloop.client.android.core.controller.LocalGameItemStore:
com.scoreloop.client.android.core.controller.LocalScoreStore -> com.scoreloop.client.android.core.controller.LocalScoreStore:
    com.scoreloop.client.android.core.util.Cryptifier a -> a
    com.scoreloop.client.android.core.controller.LocalScoreStore$a b -> b
    com.scoreloop.client.android.core.model.User c -> c
    android.database.sqlite.SQLiteDatabase d -> d
    android.content.Context e -> e
    int a(java.lang.Integer,int,com.scoreloop.client.android.core.model.ScoreOrdering) -> a
    void a(com.scoreloop.client.android.core.model.Score) -> a
    void a() -> a
    android.content.ContentValues c(com.scoreloop.client.android.core.model.Score) -> c
    java.util.List a(java.lang.Integer,com.scoreloop.client.android.core.model.ScoreOrdering,int,int) -> a
    java.util.List a(java.lang.Integer,android.database.sqlite.SQLiteDatabase,com.scoreloop.client.android.core.model.ScoreOrdering,int,int) -> a
    void b() -> b
    void a(java.lang.Integer) -> a
    void b(com.scoreloop.client.android.core.model.Score) -> b
    java.util.List a(com.scoreloop.client.android.core.controller.LocalScoreStore,android.database.sqlite.SQLiteDatabase,com.scoreloop.client.android.core.model.ScoreOrdering) -> a
    void a(com.scoreloop.client.android.core.controller.LocalScoreStore,com.scoreloop.client.android.core.model.Score,android.database.sqlite.SQLiteDatabase) -> a
com.scoreloop.client.android.core.controller.LocalScoreStore$a -> com.scoreloop.client.android.core.controller.LocalScoreStore$a:
    com.scoreloop.client.android.core.controller.LocalScoreStore a -> a
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.scoreloop.client.android.core.controller.MessageController -> com.scoreloop.client.android.core.controller.MessageController:
    java.lang.Object INVITATION_TARGET -> INVITATION_TARGET
    java.lang.Object RECEIVER_EMAIL -> RECEIVER_EMAIL
    java.lang.Object RECEIVER_SYSTEM -> RECEIVER_SYSTEM
    java.lang.Object RECEIVER_USER -> RECEIVER_USER
    int TYPE_ABUSE_REPORT -> TYPE_ABUSE_REPORT
    int TYPE_RECOMMENDATION -> TYPE_RECOMMENDATION
    int TYPE_TARGET_INFERRED -> TYPE_TARGET_INFERRED
    com.scoreloop.client.android.core.model.Message b -> b
    void addReceiverWithUsers(java.lang.Object,java.lang.Object[]) -> addReceiverWithUsers
    int getMessageType() -> getMessageType
    java.lang.Object getTarget() -> getTarget
    java.lang.String getText() -> getText
    boolean isSubmitAllowed() -> isSubmitAllowed
    boolean a(com.scoreloop.client.android.core.server.Request,com.scoreloop.client.android.core.server.Response) -> a
    void setMessageType(int) -> setMessageType
    void setTarget(java.lang.Object) -> setTarget
    void setText(java.lang.String) -> setText
    void submitMessage() -> submitMessage
com.scoreloop.client.android.core.controller.MessageController$a -> com.scoreloop.client.android.core.controller.MessageController$a:
    java.lang.String a() -> a
    java.lang.String[] a(java.lang.Object[]) -> a
    boolean a(com.scoreloop.client.android.core.model.Session) -> a
com.scoreloop.client.android.core.controller.MessageController$b -> com.scoreloop.client.android.core.controller.MessageController$b:
    java.lang.String a() -> a
    java.lang.String getIdentifier() -> getIdentifier
    boolean b() -> b
com.scoreloop.client.android.core.controller.MessageController$c -> com.scoreloop.client.android.core.controller.MessageController$c:
    com.scoreloop.client.android.core.model.Message a -> a
    com.scoreloop.client.android.core.model.Game b -> b
    com.scoreloop.client.android.core.model.User c -> c
    java.lang.String a() -> a
    org.json.JSONObject b() -> b
    com.scoreloop.client.android.core.server.RequestMethod c() -> c
com.scoreloop.client.android.core.controller.MessageController$d -> com.scoreloop.client.android.core.controller.MessageController$d:
    java.lang.String[] a -> a
    java.lang.String a() -> a
    java.lang.String[] a(java.lang.Object[]) -> a
    boolean a(com.scoreloop.client.android.core.model.Session) -> a
com.scoreloop.client.android.core.controller.MessageController$e -> com.scoreloop.client.android.core.controller.MessageController$e:
    java.lang.String a() -> a
    java.lang.String[] a(java.lang.Object[]) -> a
    boolean a(com.scoreloop.client.android.core.model.Session) -> a
com.scoreloop.client.android.core.controller.NetworkException -> com.scoreloop.client.android.core.controller.NetworkException:
    long serialVersionUID -> serialVersionUID
com.scoreloop.client.android.core.controller.NullTermsOfServiceManager -> com.scoreloop.client.android.core.controller.NullTermsOfServiceManager:
    com.scoreloop.client.android.core.model.TermsOfServiceStore a -> a
    boolean a() -> a
    void a(com.scoreloop.client.android.core.model.Continuation) -> a
    com.scoreloop.client.android.core.model.TermsOfServiceStore b() -> b
com.scoreloop.client.android.core.controller.NullTermsOfServiceManager$a -> com.scoreloop.client.android.core.controller.NullTermsOfServiceManager$a:
    void a(com.scoreloop.client.android.core.model.TermsOfService) -> a
com.scoreloop.client.android.core.controller.PaymentController -> com.scoreloop.client.android.core.controller.PaymentController:
    com.scoreloop.client.android.core.model.Payment b -> b
    void b() -> b
    com.scoreloop.client.android.core.model.Payment getPayment() -> getPayment
    void loadPayment() -> loadPayment
    void a(com.scoreloop.client.android.core.model.Payment$Credential) -> a
    void b(com.scoreloop.client.android.core.model.Payment$Credential) -> b
    boolean a(com.scoreloop.client.android.core.server.Request,com.scoreloop.client.android.core.server.Response) -> a
    void setPayment(com.scoreloop.client.android.core.model.Entity) -> setPayment
com.scoreloop.client.android.core.controller.PaymentController$a -> com.scoreloop.client.android.core.controller.PaymentController$a:
    java.lang.String a() -> a
    org.json.JSONObject b() -> b
    com.scoreloop.client.android.core.server.RequestMethod c() -> c
com.scoreloop.client.android.core.controller.PaymentController$b -> com.scoreloop.client.android.core.controller.PaymentController$b:
    java.lang.String a() -> a
    com.scoreloop.client.android.core.server.RequestMethod c() -> c
com.scoreloop.client.android.core.controller.PaymentController$c -> com.scoreloop.client.android.core.controller.PaymentController$c:
    java.lang.String d -> d
    java.lang.String a() -> a
com.scoreloop.client.android.core.controller.PaymentController$d -> com.scoreloop.client.android.core.controller.PaymentController$d:
    com.scoreloop.client.android.core.model.Game a -> a
    com.scoreloop.client.android.core.model.Payment b -> b
    com.scoreloop.client.android.core.model.User c -> c
com.scoreloop.client.android.core.controller.PaymentController$e -> com.scoreloop.client.android.core.controller.PaymentController$e:
    java.lang.String d -> d
    java.lang.String a() -> a
com.scoreloop.client.android.core.controller.PaymentController$f -> com.scoreloop.client.android.core.controller.PaymentController$f:
    com.scoreloop.client.android.core.model.Payment$Credential d -> d
    org.json.JSONObject b() -> b
    com.scoreloop.client.android.core.server.RequestMethod c() -> c
com.scoreloop.client.android.core.controller.PaymentMethodsController -> com.scoreloop.client.android.core.controller.PaymentMethodsController:
    java.lang.String b -> b
    com.scoreloop.client.android.core.model.Entity c -> c
    java.util.List d -> d
    java.lang.String getCurrency() -> getCurrency
    com.scoreloop.client.android.core.model.Entity getGameItem() -> getGameItem
    java.util.List getPaymentMethods() -> getPaymentMethods
    void loadPaymentMethods() -> loadPaymentMethods
    boolean a(com.scoreloop.client.android.core.server.Request,com.scoreloop.client.android.core.server.Response) -> a
    void setCurrency(java.lang.String) -> setCurrency
    void setGameItem(com.scoreloop.client.android.core.model.Entity) -> setGameItem
com.scoreloop.client.android.core.controller.PaymentMethodsController$a -> com.scoreloop.client.android.core.controller.PaymentMethodsController$a:
    java.lang.String a -> a
    com.scoreloop.client.android.core.model.Device b -> b
    org.json.JSONObject b() -> b
com.scoreloop.client.android.core.controller.PaymentProviderController -> com.scoreloop.client.android.core.controller.PaymentProviderController:
    android.app.Activity a -> a
    com.scoreloop.client.android.core.model.GameItem b -> b
    com.scoreloop.client.android.core.controller.PaymentProviderControllerObserver c -> c
    com.scoreloop.client.android.core.model.Price d -> d
    com.scoreloop.client.android.core.model.PaymentProvider e -> e
    com.scoreloop.client.android.core.model.Session f -> f
    com.scoreloop.client.android.core.controller.PaymentProviderController getPaymentProviderController(com.scoreloop.client.android.core.controller.PaymentProviderControllerObserver,com.scoreloop.client.android.core.model.PaymentProvider) -> getPaymentProviderController
    com.scoreloop.client.android.core.controller.PaymentProviderController getPaymentProviderController(com.scoreloop.client.android.core.controller.PaymentProviderControllerObserver,com.scoreloop.client.android.core.model.PaymentProvider,com.scoreloop.client.android.core.model.Session) -> getPaymentProviderController
    void checkout(android.app.Activity,com.scoreloop.client.android.core.model.GameItem,com.scoreloop.client.android.core.model.Price) -> checkout
    void a() -> a
    android.app.Activity b() -> b
    com.scoreloop.client.android.core.model.GameItem getGameItem() -> getGameItem
    com.scoreloop.client.android.core.controller.PaymentProviderControllerObserver c() -> c
    com.scoreloop.client.android.core.model.Payment getPayment() -> getPayment
    com.scoreloop.client.android.core.model.PaymentProvider getPaymentProvider() -> getPaymentProvider
    com.scoreloop.client.android.core.model.Price getPrice() -> getPrice
    com.scoreloop.client.android.core.model.Session d() -> d
    void prepare() -> prepare
com.scoreloop.client.android.core.controller.PaymentProviderControllerObserver -> com.scoreloop.client.android.core.controller.PaymentProviderControllerObserver:
    void paymentControllerDidCancel(com.scoreloop.client.android.core.controller.PaymentProviderController) -> paymentControllerDidCancel
    void paymentControllerDidFail(com.scoreloop.client.android.core.controller.PaymentProviderController,java.lang.Exception) -> paymentControllerDidFail
    void paymentControllerDidSucceed(com.scoreloop.client.android.core.controller.PaymentProviderController) -> paymentControllerDidSucceed
    void paymentControllerDidFinishWithPendingPayment(com.scoreloop.client.android.core.controller.PaymentProviderController) -> paymentControllerDidFinishWithPendingPayment
com.scoreloop.client.android.core.controller.PendingPaymentProcessor -> com.scoreloop.client.android.core.controller.PendingPaymentProcessor:
    boolean a -> a
    java.util.List b -> b
    java.util.List c -> c
    java.util.List d -> d
    com.scoreloop.client.android.core.controller.PendingPaymentProcessor$c e -> e
    com.scoreloop.client.android.core.controller.PendingPaymentProcessor getInstance(com.scoreloop.client.android.core.model.Session) -> getInstance
    void addObserver(com.scoreloop.client.android.core.controller.PendingPaymentProcessor$Observer) -> addObserver
    void a(com.scoreloop.client.android.core.model.Payment,com.scoreloop.client.android.core.model.PaymentProvider) -> a
    void a(java.lang.String,com.scoreloop.client.android.core.model.Session) -> a
    void destroy() -> destroy
    void a(com.scoreloop.client.android.core.model.Payment) -> a
    void a() -> a
    void finalize() -> finalize
    com.scoreloop.client.android.core.controller.PendingPaymentProcessor$Module a(com.scoreloop.client.android.core.model.PaymentProvider) -> a
    boolean hasPendingPayment(java.lang.String) -> hasPendingPayment
    boolean hasPendingPaymentForGameItem(java.lang.String) -> hasPendingPaymentForGameItem
    boolean isStarted() -> isStarted
    void b(com.scoreloop.client.android.core.model.Payment) -> b
    void removeObserver(com.scoreloop.client.android.core.controller.PendingPaymentProcessor$Observer) -> removeObserver
    void start(com.scoreloop.client.android.core.model.Session) -> start
    void stop() -> stop
    void a(com.scoreloop.client.android.core.controller.PendingPaymentProcessor,com.scoreloop.client.android.core.model.Payment) -> a
    java.util.List a(com.scoreloop.client.android.core.controller.PendingPaymentProcessor) -> a
    void a(com.scoreloop.client.android.core.controller.PendingPaymentProcessor,java.lang.String,com.scoreloop.client.android.core.model.Session) -> a
    void b(com.scoreloop.client.android.core.controller.PendingPaymentProcessor) -> b
com.scoreloop.client.android.core.controller.PendingPaymentProcessor$1 -> com.scoreloop.client.android.core.controller.PendingPaymentProcessor$1:
    com.scoreloop.client.android.core.controller.PendingPaymentProcessor a -> a
    void requestControllerDidReceiveResponse(com.scoreloop.client.android.core.controller.RequestController) -> requestControllerDidReceiveResponse
    void requestControllerDidFail(com.scoreloop.client.android.core.controller.RequestController,java.lang.Exception) -> requestControllerDidFail
com.scoreloop.client.android.core.controller.PendingPaymentProcessor$2 -> com.scoreloop.client.android.core.controller.PendingPaymentProcessor$2:
    com.scoreloop.client.android.core.model.Session a -> a
    com.scoreloop.client.android.core.controller.PendingPaymentProcessor b -> b
    void withValue(java.lang.Object,java.lang.Exception) -> withValue
com.scoreloop.client.android.core.controller.PendingPaymentProcessor$Module -> com.scoreloop.client.android.core.controller.PendingPaymentProcessor$Module:
    void a(com.scoreloop.client.android.core.model.Payment) -> a
    void a(com.scoreloop.client.android.core.model.Session) -> a
    void a() -> a
com.scoreloop.client.android.core.controller.PendingPaymentProcessor$Observer -> com.scoreloop.client.android.core.controller.PendingPaymentProcessor$Observer:
    void pendingPaymentProcessorDidProcessPayment(com.scoreloop.client.android.core.controller.PendingPaymentProcessor,com.scoreloop.client.android.core.model.Payment) -> pendingPaymentProcessorDidProcessPayment
com.scoreloop.client.android.core.controller.PendingPaymentProcessor$a -> com.scoreloop.client.android.core.controller.PendingPaymentProcessor$a:
    boolean a -> a
    com.scoreloop.client.android.core.model.Payment b -> b
    com.scoreloop.client.android.core.model.PaymentProvider c -> c
    org.json.JSONObject b_() -> b_
    void a(org.json.JSONObject) -> a
com.scoreloop.client.android.core.controller.PendingPaymentProcessor$b -> com.scoreloop.client.android.core.controller.PendingPaymentProcessor$b:
    com.scoreloop.client.android.core.util.JSONSerializable b() -> b
com.scoreloop.client.android.core.controller.PendingPaymentProcessor$c -> com.scoreloop.client.android.core.controller.PendingPaymentProcessor$c:
    java.lang.String a() -> a
    java.lang.String b() -> b
    com.scoreloop.client.android.core.util.JSONSerializable c() -> c
com.scoreloop.client.android.core.controller.RankingController -> com.scoreloop.client.android.core.controller.RankingController:
    com.scoreloop.client.android.core.model.Ranking b -> b
    com.scoreloop.client.android.core.model.SearchList c -> c
    com.scoreloop.client.android.core.model.Ranking getRanking() -> getRanking
    com.scoreloop.client.android.core.model.SearchList getSearchList() -> getSearchList
    void loadRankingForScore(com.scoreloop.client.android.core.model.Score) -> loadRankingForScore
    void loadRankingForScoreResult(java.lang.Double,java.util.Map) -> loadRankingForScoreResult
    void loadRankingForUserInGameMode(com.scoreloop.client.android.core.model.User,java.lang.Integer) -> loadRankingForUserInGameMode
    boolean a(com.scoreloop.client.android.core.server.Request,com.scoreloop.client.android.core.server.Response) -> a
    void setSearchList(com.scoreloop.client.android.core.model.SearchList) -> setSearchList
com.scoreloop.client.android.core.controller.RankingController$a -> com.scoreloop.client.android.core.controller.RankingController$a:
    com.scoreloop.client.android.core.model.Game a -> a
    java.lang.Integer b -> b
    com.scoreloop.client.android.core.model.Score c -> c
    com.scoreloop.client.android.core.model.SearchList d -> d
    com.scoreloop.client.android.core.model.User e -> e
    java.lang.String a() -> a
    org.json.JSONObject b() -> b
    com.scoreloop.client.android.core.server.RequestMethod c() -> c
com.scoreloop.client.android.core.controller.RequestCancelledException -> com.scoreloop.client.android.core.controller.RequestCancelledException:
com.scoreloop.client.android.core.controller.RequestController -> com.scoreloop.client.android.core.controller.RequestController:
    boolean b -> b
    com.scoreloop.client.android.core.controller.RequestController$b c -> c
    java.lang.Exception d -> d
    com.scoreloop.client.android.core.controller.RequestControllerObserver a -> a
    com.scoreloop.client.android.core.server.Request e -> e
    com.scoreloop.client.android.core.model.Session f -> f
    com.scoreloop.client.android.core.controller.f g -> g
    com.scoreloop.client.android.core.controller.TermsOfServiceManager h -> h
    boolean i -> i
    java.lang.Integer a(org.json.JSONObject) -> a
    void c(com.scoreloop.client.android.core.server.Request) -> c
    void a(java.lang.Exception) -> a
    java.lang.Exception getError() -> getError
    com.scoreloop.client.android.core.model.Game getGame() -> getGame
    com.scoreloop.client.android.core.controller.RequestControllerObserver d() -> d
    com.scoreloop.client.android.core.controller.RequestController$b e() -> e
    com.scoreloop.client.android.core.model.Session f() -> f
    com.scoreloop.client.android.core.model.User g() -> g
    void b(java.lang.Exception) -> b
    void h() -> h
    boolean isCachedResponseUsed() -> isCachedResponseUsed
    boolean i() -> i
    boolean a(com.scoreloop.client.android.core.server.Request,com.scoreloop.client.android.core.server.Response) -> a
    void c(java.lang.Exception) -> c
    void a_() -> a_
    void a(com.scoreloop.client.android.core.server.Request) -> a
    void b(com.scoreloop.client.android.core.server.Request) -> b
    void setCachedResponseUsed(boolean) -> setCachedResponseUsed
    void j() -> j
    void d(com.scoreloop.client.android.core.server.Request) -> d
    void a(com.scoreloop.client.android.core.controller.RequestController) -> a
    void a(com.scoreloop.client.android.core.controller.RequestController,java.lang.Exception) -> a
    com.scoreloop.client.android.core.server.Request b(com.scoreloop.client.android.core.controller.RequestController) -> b
    com.scoreloop.client.android.core.controller.f c(com.scoreloop.client.android.core.controller.RequestController) -> c
    void a(com.scoreloop.client.android.core.controller.RequestController,com.scoreloop.client.android.core.server.Request) -> a
    void b(com.scoreloop.client.android.core.controller.RequestController,com.scoreloop.client.android.core.server.Request) -> b
com.scoreloop.client.android.core.controller.RequestController$1 -> com.scoreloop.client.android.core.controller.RequestController$1:
    com.scoreloop.client.android.core.server.Request a -> a
    com.scoreloop.client.android.core.controller.RequestController b -> b
    void withValue(java.lang.Object,java.lang.Exception) -> withValue
com.scoreloop.client.android.core.controller.RequestController$1$1 -> com.scoreloop.client.android.core.controller.RequestController$1$1:
    java.lang.Exception a -> a
    com.scoreloop.client.android.core.controller.RequestController$1 b -> b
    void run() -> run
com.scoreloop.client.android.core.controller.RequestController$2 -> com.scoreloop.client.android.core.controller.RequestController$2:
    int[] a -> a
com.scoreloop.client.android.core.controller.RequestController$a -> com.scoreloop.client.android.core.controller.RequestController$a:
    java.lang.Exception a -> a
    boolean b -> b
    com.scoreloop.client.android.core.controller.RequestControllerObserver c -> c
    com.scoreloop.client.android.core.controller.RequestController d -> d
    void handleMessage(android.os.Message) -> handleMessage
com.scoreloop.client.android.core.controller.RequestController$b -> com.scoreloop.client.android.core.controller.RequestController$b:
    com.scoreloop.client.android.core.controller.RequestController a -> a
    void a(com.scoreloop.client.android.core.server.Request) -> a
com.scoreloop.client.android.core.controller.RequestController$c -> com.scoreloop.client.android.core.controller.RequestController$c:
    com.scoreloop.client.android.core.controller.RequestController a -> a
    void requestControllerDidFail(com.scoreloop.client.android.core.controller.RequestController,java.lang.Exception) -> requestControllerDidFail
    void requestControllerDidReceiveResponse(com.scoreloop.client.android.core.controller.RequestController) -> requestControllerDidReceiveResponse
com.scoreloop.client.android.core.controller.RequestControllerException -> com.scoreloop.client.android.core.controller.RequestControllerException:
    int CODE_BUDDY_ADD_REQUEST_ALREADY_ADDED -> CODE_BUDDY_ADD_REQUEST_ALREADY_ADDED
    int CODE_BUDDY_REMOVE_REQUEST_ALREADY_REMOVED -> CODE_BUDDY_REMOVE_REQUEST_ALREADY_REMOVED
    int CODE_SOCIAL_PROVIDER_DISCONNECTED -> CODE_SOCIAL_PROVIDER_DISCONNECTED
    int CODE_UNDEFINED -> CODE_UNDEFINED
    int DETAIL_USER_UPDATE_REQUEST_EMAIL_TAKEN -> DETAIL_USER_UPDATE_REQUEST_EMAIL_TAKEN
    int DETAIL_USER_UPDATE_REQUEST_IMAGE_TOO_LARGE -> DETAIL_USER_UPDATE_REQUEST_IMAGE_TOO_LARGE
    int DETAIL_USER_UPDATE_REQUEST_INVALID_EMAIL -> DETAIL_USER_UPDATE_REQUEST_INVALID_EMAIL
    int DETAIL_USER_UPDATE_REQUEST_INVALID_USERNAME -> DETAIL_USER_UPDATE_REQUEST_INVALID_USERNAME
    int DETAIL_USER_UPDATE_REQUEST_UNSUPPORTED_MIME_TYPE -> DETAIL_USER_UPDATE_REQUEST_UNSUPPORTED_MIME_TYPE
    int DETAIL_USER_UPDATE_REQUEST_USERNAME_TAKEN -> DETAIL_USER_UPDATE_REQUEST_USERNAME_TAKEN
    int DETAIL_USER_UPDATE_REQUEST_USERNAME_TOO_SHORT -> DETAIL_USER_UPDATE_REQUEST_USERNAME_TOO_SHORT
    int CHALLENGE_INSUFFICIENT_BALANCE -> CHALLENGE_INSUFFICIENT_BALANCE
    int CHALLENGE_ALREADY_ASSIGNED_TO_SOMEONE -> CHALLENGE_ALREADY_ASSIGNED_TO_SOMEONE
    int CHALLENGE_ALREADY_ASSIGNED_TO_YOU -> CHALLENGE_ALREADY_ASSIGNED_TO_YOU
    int CHALLENGE_CANNOT_ACCEPT_CHALLENGE -> CHALLENGE_CANNOT_ACCEPT_CHALLENGE
    int CHALLENGE_CANNOT_REJECT_CHALLENGE -> CHALLENGE_CANNOT_REJECT_CHALLENGE
    java.lang.String INFO_KEY_DISCONNECTED_PROVIDER_IDENTIFIERS -> INFO_KEY_DISCONNECTED_PROVIDER_IDENTIFIERS
    long serialVersionUID -> serialVersionUID
    int a -> a
    int b -> b
    java.lang.String c -> c
    int d -> d
    java.util.Map e -> e
    com.scoreloop.client.android.core.controller.RequestControllerException a(com.scoreloop.client.android.core.server.Response) -> a
    void a(int) -> a
    int getErrorCode() -> getErrorCode
    java.lang.String getErrorMessage() -> getErrorMessage
    int getStatusCode() -> getStatusCode
    java.util.Map getUserInfo() -> getUserInfo
    boolean hasDetail(int) -> hasDetail
    void a(java.lang.String) -> a
    void a(java.util.Map) -> a
com.scoreloop.client.android.core.controller.RequestControllerObserver -> com.scoreloop.client.android.core.controller.RequestControllerObserver:
    void requestControllerDidFail(com.scoreloop.client.android.core.controller.RequestController,java.lang.Exception) -> requestControllerDidFail
    void requestControllerDidReceiveResponse(com.scoreloop.client.android.core.controller.RequestController) -> requestControllerDidReceiveResponse
com.scoreloop.client.android.core.controller.ScoreController -> com.scoreloop.client.android.core.controller.ScoreController:
    com.scoreloop.client.android.core.controller.ChallengeController b -> b
    com.scoreloop.client.android.core.model.Score c -> c
    boolean d -> d
    boolean e -> e
    com.scoreloop.client.android.core.controller.LocalScoreStore f -> f
    com.scoreloop.client.android.core.model.Score getScore() -> getScore
    boolean i() -> i
    boolean a(com.scoreloop.client.android.core.server.Request,com.scoreloop.client.android.core.server.Response) -> a
    void setShouldSubmitScoreForChallenge(boolean) -> setShouldSubmitScoreForChallenge
    void setShouldSubmitScoreLocally(boolean) -> setShouldSubmitScoreLocally
    boolean shouldSubmitScoreForChallenge() -> shouldSubmitScoreForChallenge
    boolean shouldSubmitScoreLocally() -> shouldSubmitScoreLocally
    void submitScore(com.scoreloop.client.android.core.model.Score) -> submitScore
    com.scoreloop.client.android.core.model.Score a(com.scoreloop.client.android.core.controller.ScoreController) -> a
    com.scoreloop.client.android.core.controller.LocalScoreStore b(com.scoreloop.client.android.core.controller.ScoreController) -> b
com.scoreloop.client.android.core.controller.ScoreController$1 -> com.scoreloop.client.android.core.controller.ScoreController$1:
    boolean a -> a
    com.scoreloop.client.android.core.controller.ScoreController b -> b
    void a(java.lang.Object) -> a
    java.lang.Object a(java.lang.Object[]) -> a
com.scoreloop.client.android.core.controller.ScoreController$2 -> com.scoreloop.client.android.core.controller.ScoreController$2:
    void requestControllerDidFail(com.scoreloop.client.android.core.controller.RequestController,java.lang.Exception) -> requestControllerDidFail
    void requestControllerDidReceiveResponse(com.scoreloop.client.android.core.controller.RequestController) -> requestControllerDidReceiveResponse
com.scoreloop.client.android.core.controller.ScoreController$a -> com.scoreloop.client.android.core.controller.ScoreController$a:
    com.scoreloop.client.android.core.controller.ScoreController a -> a
    void requestControllerDidFail(com.scoreloop.client.android.core.controller.RequestController,java.lang.Exception) -> requestControllerDidFail
    void requestControllerDidReceiveResponse(com.scoreloop.client.android.core.controller.RequestController) -> requestControllerDidReceiveResponse
com.scoreloop.client.android.core.controller.ScoreController$b -> com.scoreloop.client.android.core.controller.ScoreController$b:
    com.scoreloop.client.android.core.controller.RequestControllerObserver b -> b
    com.scoreloop.client.android.core.controller.ScoreController a -> a
    void requestControllerDidFail(com.scoreloop.client.android.core.controller.RequestController,java.lang.Exception) -> requestControllerDidFail
    void requestControllerDidReceiveResponse(com.scoreloop.client.android.core.controller.RequestController) -> requestControllerDidReceiveResponse
    com.scoreloop.client.android.core.controller.RequestControllerObserver a(com.scoreloop.client.android.core.controller.ScoreController$b) -> a
com.scoreloop.client.android.core.controller.ScoreController$b$1 -> com.scoreloop.client.android.core.controller.ScoreController$b$1:
    com.scoreloop.client.android.core.controller.ScoreController$b a -> a
    java.lang.Object a(java.lang.Object[]) -> a
com.scoreloop.client.android.core.controller.ScoreController$b$2 -> com.scoreloop.client.android.core.controller.ScoreController$b$2:
    com.scoreloop.client.android.core.controller.RequestController a -> a
    com.scoreloop.client.android.core.controller.ScoreController$b b -> b
    void a(java.lang.Object) -> a
    java.lang.Object a(java.lang.Object[]) -> a
com.scoreloop.client.android.core.controller.ScoreController$c -> com.scoreloop.client.android.core.controller.ScoreController$c:
    com.scoreloop.client.android.core.model.Game a -> a
    com.scoreloop.client.android.core.model.Score b -> b
    java.lang.String a() -> a
    org.json.JSONObject b() -> b
    com.scoreloop.client.android.core.server.RequestMethod c() -> c
com.scoreloop.client.android.core.controller.ScoresController -> com.scoreloop.client.android.core.controller.ScoresController:
    com.scoreloop.client.android.core.controller.a b -> b
    java.lang.Integer c -> c
    com.scoreloop.client.android.core.controller.ScoresController$b d -> d
    com.scoreloop.client.android.core.controller.RankingController e -> e
    com.scoreloop.client.android.core.model.Score f -> f
    com.scoreloop.client.android.core.model.SearchList g -> g
    com.scoreloop.client.android.core.controller.LocalScoreStore h -> h
    void loadLocalScoresToSubmit() -> loadLocalScoresToSubmit
    java.lang.Integer getMode() -> getMode
    int getRangeLength() -> getRangeLength
    com.scoreloop.client.android.core.controller.RankingController b() -> b
    java.util.List getScores() -> getScores
    com.scoreloop.client.android.core.model.SearchList getSearchList() -> getSearchList
    boolean hasNextRange() -> hasNextRange
    boolean hasPreviousRange() -> hasPreviousRange
    void a(int) -> a
    void loadNextRange() -> loadNextRange
    void loadPreviousRange() -> loadPreviousRange
    void loadRangeAtRank(int) -> loadRangeAtRank
    void loadRangeForScore(com.scoreloop.client.android.core.model.Score) -> loadRangeForScore
    void loadRangeForScoreResult(java.lang.Double,java.util.Map) -> loadRangeForScoreResult
    void loadRangeForUser(com.scoreloop.client.android.core.model.User) -> loadRangeForUser
    void c() -> c
    boolean a(com.scoreloop.client.android.core.server.Request,com.scoreloop.client.android.core.server.Response) -> a
    void a_() -> a_
    void setMode(java.lang.Integer) -> setMode
    void setRangeLength(int) -> setRangeLength
    void setSearchList(com.scoreloop.client.android.core.model.SearchList) -> setSearchList
    void removeLocalScores() -> removeLocalScores
    com.scoreloop.client.android.core.model.Score a(com.scoreloop.client.android.core.controller.ScoresController) -> a
    void a(com.scoreloop.client.android.core.controller.ScoresController,java.lang.Integer) -> a
    com.scoreloop.client.android.core.controller.LocalScoreStore b(com.scoreloop.client.android.core.controller.ScoresController) -> b
    com.scoreloop.client.android.core.controller.a c(com.scoreloop.client.android.core.controller.ScoresController) -> c
    java.lang.Integer d(com.scoreloop.client.android.core.controller.ScoresController) -> d
com.scoreloop.client.android.core.controller.ScoresController$1 -> com.scoreloop.client.android.core.controller.ScoresController$1:
    com.scoreloop.client.android.core.controller.ScoresController a -> a
    void a() -> a
    void a(java.lang.Object) -> a
    java.lang.Object a(java.lang.Object[]) -> a
com.scoreloop.client.android.core.controller.ScoresController$2 -> com.scoreloop.client.android.core.controller.ScoresController$2:
    int a -> a
    com.scoreloop.client.android.core.controller.ScoresController b -> b
    void a(java.lang.Object) -> a
    java.lang.Object a(java.lang.Object[]) -> a
com.scoreloop.client.android.core.controller.ScoresController$3 -> com.scoreloop.client.android.core.controller.ScoresController$3:
    com.scoreloop.client.android.core.controller.ScoresController a -> a
    void a(java.lang.Object) -> a
    java.lang.Object a(java.lang.Object[]) -> a
com.scoreloop.client.android.core.controller.ScoresController$4 -> com.scoreloop.client.android.core.controller.ScoresController$4:
    com.scoreloop.client.android.core.controller.ScoresController a -> a
    void a(java.lang.Object) -> a
    java.lang.Object a(java.lang.Object[]) -> a
com.scoreloop.client.android.core.controller.ScoresController$a -> com.scoreloop.client.android.core.controller.ScoresController$a:
    com.scoreloop.client.android.core.controller.ScoresController a -> a
    void requestControllerDidFail(com.scoreloop.client.android.core.controller.RequestController,java.lang.Exception) -> requestControllerDidFail
    void requestControllerDidReceiveResponse(com.scoreloop.client.android.core.controller.RequestController) -> requestControllerDidReceiveResponse
com.scoreloop.client.android.core.controller.ScoresController$b -> com.scoreloop.client.android.core.controller.ScoresController$b:
    com.scoreloop.client.android.core.model.Game a -> a
    java.lang.Integer b -> b
    int c -> c
    int d -> d
    com.scoreloop.client.android.core.model.SearchList e -> e
    com.scoreloop.client.android.core.model.User f -> f
    java.lang.String a() -> a
    org.json.JSONObject b() -> b
    com.scoreloop.client.android.core.server.RequestMethod c() -> c
    void a(int) -> a
com.scoreloop.client.android.core.controller.SearchSpec -> com.scoreloop.client.android.core.controller.SearchSpec:
    java.util.List a -> a
    com.scoreloop.client.android.core.controller.e b -> b
    void a(com.scoreloop.client.android.core.controller.c) -> a
    org.json.JSONObject a() -> a
com.scoreloop.client.android.core.controller.SocialProviderController -> com.scoreloop.client.android.core.controller.SocialProviderController:
    android.app.Activity a -> a
    com.scoreloop.client.android.core.controller.f b -> b
    com.scoreloop.client.android.core.controller.SocialProviderControllerObserver c -> c
    com.scoreloop.client.android.core.model.Session d -> d
    com.scoreloop.client.android.core.controller.RequestControllerObserver e -> e
    com.scoreloop.client.android.core.model.SocialProvider f -> f
    com.scoreloop.client.android.core.controller.UserController g -> g
    boolean h -> h
    com.scoreloop.client.android.core.controller.SocialProviderController getSocialProviderController(com.scoreloop.client.android.core.model.Session,com.scoreloop.client.android.core.controller.SocialProviderControllerObserver,com.scoreloop.client.android.core.model.SocialProvider) -> getSocialProviderController
    com.scoreloop.client.android.core.controller.SocialProviderController getSocialProviderController(java.lang.String,com.scoreloop.client.android.core.controller.SocialProviderControllerObserver) -> getSocialProviderController
    void connect(android.app.Activity) -> connect
    void a(java.lang.Exception) -> a
    void a() -> a
    android.app.Activity f_() -> f_
    com.scoreloop.client.android.core.controller.SocialProviderControllerObserver c() -> c
    com.scoreloop.client.android.core.model.Session d() -> d
    com.scoreloop.client.android.core.model.SocialProvider getSocialProvider() -> getSocialProvider
    com.scoreloop.client.android.core.model.User e() -> e
    void f() -> f
    void a(com.scoreloop.client.android.core.controller.SocialProviderController$UpdateMode) -> a
    void a(com.scoreloop.client.android.core.controller.SocialProviderController) -> a
    com.scoreloop.client.android.core.controller.f b(com.scoreloop.client.android.core.controller.SocialProviderController) -> b
    com.scoreloop.client.android.core.controller.f a(com.scoreloop.client.android.core.controller.SocialProviderController,com.scoreloop.client.android.core.controller.f) -> a
    com.scoreloop.client.android.core.controller.RequestControllerObserver c(com.scoreloop.client.android.core.controller.SocialProviderController) -> c
com.scoreloop.client.android.core.controller.SocialProviderController$1 -> com.scoreloop.client.android.core.controller.SocialProviderController$1:
    com.scoreloop.client.android.core.controller.SocialProviderController a -> a
    void withValue(java.lang.Object,java.lang.Exception) -> withValue
com.scoreloop.client.android.core.controller.SocialProviderController$2 -> com.scoreloop.client.android.core.controller.SocialProviderController$2:
    com.scoreloop.client.android.core.controller.SocialProviderController a -> a
    void requestControllerDidFail(com.scoreloop.client.android.core.controller.RequestController,java.lang.Exception) -> requestControllerDidFail
    void requestControllerDidReceiveResponse(com.scoreloop.client.android.core.controller.RequestController) -> requestControllerDidReceiveResponse
com.scoreloop.client.android.core.controller.SocialProviderController$3 -> com.scoreloop.client.android.core.controller.SocialProviderController$3:
    int[] a -> a
com.scoreloop.client.android.core.controller.SocialProviderController$UpdateMode -> com.scoreloop.client.android.core.controller.SocialProviderController$UpdateMode:
    com.scoreloop.client.android.core.controller.SocialProviderController$UpdateMode LOAD -> LOAD
    com.scoreloop.client.android.core.controller.SocialProviderController$UpdateMode SUBMIT -> SUBMIT
    com.scoreloop.client.android.core.controller.SocialProviderController$UpdateMode[] a -> a
    com.scoreloop.client.android.core.controller.SocialProviderController$UpdateMode[] values() -> values
    com.scoreloop.client.android.core.controller.SocialProviderController$UpdateMode valueOf(java.lang.String) -> valueOf
com.scoreloop.client.android.core.controller.SocialProviderController$a -> com.scoreloop.client.android.core.controller.SocialProviderController$a:
    com.scoreloop.client.android.core.controller.SocialProviderController a -> a
    void requestControllerDidFail(com.scoreloop.client.android.core.controller.RequestController,java.lang.Exception) -> requestControllerDidFail
    void requestControllerDidReceiveResponse(com.scoreloop.client.android.core.controller.RequestController) -> requestControllerDidReceiveResponse
com.scoreloop.client.android.core.controller.SocialProviderControllerObserver -> com.scoreloop.client.android.core.controller.SocialProviderControllerObserver:
    void socialProviderControllerDidFail(com.scoreloop.client.android.core.controller.SocialProviderController,java.lang.Throwable) -> socialProviderControllerDidFail
    void socialProviderControllerDidEnterInvalidCredentials(com.scoreloop.client.android.core.controller.SocialProviderController) -> socialProviderControllerDidEnterInvalidCredentials
    void socialProviderControllerDidSucceed(com.scoreloop.client.android.core.controller.SocialProviderController) -> socialProviderControllerDidSucceed
    void socialProviderControllerDidCancel(com.scoreloop.client.android.core.controller.SocialProviderController) -> socialProviderControllerDidCancel
com.scoreloop.client.android.core.controller.StandardTermsOfServiceManager -> com.scoreloop.client.android.core.controller.StandardTermsOfServiceManager:
    java.util.List a -> a
    com.scoreloop.client.android.core.controller.TermsOfServiceController b -> b
    com.scoreloop.client.android.core.model.Session c -> c
    com.scoreloop.client.android.core.model.TermsOfServiceStore d -> d
    boolean a() -> a
    void termsOfServiceControllerDidFinish(com.scoreloop.client.android.core.controller.TermsOfServiceController,java.lang.Boolean) -> termsOfServiceControllerDidFinish
    void a(com.scoreloop.client.android.core.model.Continuation) -> a
    com.scoreloop.client.android.core.model.TermsOfServiceStore b() -> b
com.scoreloop.client.android.core.controller.TermsOfServiceController -> com.scoreloop.client.android.core.controller.TermsOfServiceController:
    android.app.Activity a -> a
    com.scoreloop.client.android.core.ui.TermsOfServiceDialog b -> b
    com.scoreloop.client.android.core.controller.TermsOfServiceController$a c -> c
    com.scoreloop.client.android.core.controller.TermsOfServiceControllerObserver d -> d
    android.app.ProgressDialog e -> e
    android.app.Activity f -> f
    java.lang.Runnable g -> g
    com.scoreloop.client.android.core.model.Session h -> h
    com.scoreloop.client.android.core.controller.f i -> i
    void f() -> f
    com.scoreloop.client.android.core.controller.TermsOfServiceManager g() -> g
    void h() -> h
    void a(java.lang.Integer) -> a
    void a() -> a
    void i() -> i
    void j() -> j
    void k() -> k
    void l() -> l
    boolean m() -> m
    boolean isUpToDate() -> isUpToDate
    void a(int,android.content.Intent) -> a
    void c_() -> c_
    void a(java.lang.String,java.util.Map) -> a
    void n() -> n
    void o() -> o
    void query(android.app.Activity) -> query
    void requestControllerDidFail(com.scoreloop.client.android.core.controller.RequestController,java.lang.Exception) -> requestControllerDidFail
    void requestControllerDidReceiveResponse(com.scoreloop.client.android.core.controller.RequestController) -> requestControllerDidReceiveResponse
    void show(android.app.Activity) -> show
    void c() -> c
    void d() -> d
    void e() -> e
    void a(java.lang.Runnable) -> a
    boolean isTermsOfServiceEnabled() -> isTermsOfServiceEnabled
    com.scoreloop.client.android.core.model.Session a(com.scoreloop.client.android.core.controller.TermsOfServiceController) -> a
    com.scoreloop.client.android.core.controller.TermsOfServiceControllerObserver b(com.scoreloop.client.android.core.controller.TermsOfServiceController) -> b
    android.app.Activity c(com.scoreloop.client.android.core.controller.TermsOfServiceController) -> c
    com.scoreloop.client.android.core.ui.TermsOfServiceDialog a(com.scoreloop.client.android.core.controller.TermsOfServiceController,com.scoreloop.client.android.core.ui.TermsOfServiceDialog) -> a
    com.scoreloop.client.android.core.ui.TermsOfServiceDialog d(com.scoreloop.client.android.core.controller.TermsOfServiceController) -> d
    android.app.Activity a(com.scoreloop.client.android.core.controller.TermsOfServiceController,android.app.Activity) -> a
    android.app.Activity e(com.scoreloop.client.android.core.controller.TermsOfServiceController) -> e
com.scoreloop.client.android.core.controller.TermsOfServiceController$1 -> com.scoreloop.client.android.core.controller.TermsOfServiceController$1:
    com.scoreloop.client.android.core.controller.TermsOfServiceController a -> a
    void run() -> run
com.scoreloop.client.android.core.controller.TermsOfServiceController$2 -> com.scoreloop.client.android.core.controller.TermsOfServiceController$2:
    java.lang.String a -> a
    java.util.Map b -> b
    com.scoreloop.client.android.core.controller.TermsOfServiceController c -> c
    void run() -> run
com.scoreloop.client.android.core.controller.TermsOfServiceController$2$1 -> com.scoreloop.client.android.core.controller.TermsOfServiceController$2$1:
    com.scoreloop.client.android.core.controller.TermsOfServiceController$2 a -> a
    void withValue(java.lang.Object,java.lang.Exception) -> withValue
com.scoreloop.client.android.core.controller.TermsOfServiceController$3 -> com.scoreloop.client.android.core.controller.TermsOfServiceController$3:
    int[] a -> a
com.scoreloop.client.android.core.controller.TermsOfServiceController$a -> com.scoreloop.client.android.core.controller.TermsOfServiceController$a:
    com.scoreloop.client.android.core.controller.TermsOfServiceController$a QUERY -> QUERY
    com.scoreloop.client.android.core.controller.TermsOfServiceController$a SHOW -> SHOW
    com.scoreloop.client.android.core.controller.TermsOfServiceController$a[] a -> a
    com.scoreloop.client.android.core.controller.TermsOfServiceController$a[] values() -> values
    com.scoreloop.client.android.core.controller.TermsOfServiceController$a valueOf(java.lang.String) -> valueOf
com.scoreloop.client.android.core.controller.TermsOfServiceControllerObserver -> com.scoreloop.client.android.core.controller.TermsOfServiceControllerObserver:
    void termsOfServiceControllerDidFinish(com.scoreloop.client.android.core.controller.TermsOfServiceController,java.lang.Boolean) -> termsOfServiceControllerDidFinish
com.scoreloop.client.android.core.controller.TermsOfServiceException -> com.scoreloop.client.android.core.controller.TermsOfServiceException:
    long serialVersionUID -> serialVersionUID
com.scoreloop.client.android.core.controller.TermsOfServiceManager -> com.scoreloop.client.android.core.controller.TermsOfServiceManager:
    boolean a() -> a
    void a(com.scoreloop.client.android.core.model.Continuation) -> a
    com.scoreloop.client.android.core.model.TermsOfServiceStore b() -> b
com.scoreloop.client.android.core.controller.UserController -> com.scoreloop.client.android.core.controller.UserController:
    boolean b -> b
    com.scoreloop.client.android.core.model.User c -> c
    void addAsBuddy() -> addAsBuddy
    com.scoreloop.client.android.core.model.User getUser() -> getUser
    boolean i() -> i
    void loadBuddies() -> loadBuddies
    void loadUser() -> loadUser
    void loadUserContext() -> loadUserContext
    void loadUserDetail() -> loadUserDetail
    boolean a(com.scoreloop.client.android.core.server.Request,com.scoreloop.client.android.core.server.Response) -> a
    boolean b(com.scoreloop.client.android.core.server.Request,com.scoreloop.client.android.core.server.Response) -> b
    void removeAsBuddy() -> removeAsBuddy
    void setUser(com.scoreloop.client.android.core.model.Entity) -> setUser
    void submitUser() -> submitUser
    void submitUserContext() -> submitUserContext
com.scoreloop.client.android.core.controller.UserController$a -> com.scoreloop.client.android.core.controller.UserController$a:
    java.lang.Object a -> a
    java.lang.String a() -> a
    org.json.JSONObject b() -> b
com.scoreloop.client.android.core.controller.UserController$b -> com.scoreloop.client.android.core.controller.UserController$b:
    java.lang.Object a -> a
    java.lang.String a() -> a
    org.json.JSONObject b() -> b
    com.scoreloop.client.android.core.server.RequestMethod c() -> c
com.scoreloop.client.android.core.controller.UserController$c -> com.scoreloop.client.android.core.controller.UserController$c:
    java.lang.Object a -> a
    java.lang.String a() -> a
    org.json.JSONObject b() -> b
    com.scoreloop.client.android.core.server.RequestMethod c() -> c
com.scoreloop.client.android.core.controller.UserController$d -> com.scoreloop.client.android.core.controller.UserController$d:
    java.lang.Object a -> a
    com.scoreloop.client.android.core.model.Game b -> b
    java.lang.String a() -> a
    com.scoreloop.client.android.core.server.RequestMethod c() -> c
com.scoreloop.client.android.core.controller.UserController$e -> com.scoreloop.client.android.core.controller.UserController$e:
    java.lang.Object a -> a
    com.scoreloop.client.android.core.model.Game b -> b
    java.lang.String a() -> a
    org.json.JSONObject b() -> b
    com.scoreloop.client.android.core.server.RequestMethod c() -> c
com.scoreloop.client.android.core.controller.UserController$f -> com.scoreloop.client.android.core.controller.UserController$f:
    java.lang.Object b -> b
    com.scoreloop.client.android.core.model.User c -> c
    java.lang.String a() -> a
    org.json.JSONObject b() -> b
com.scoreloop.client.android.core.controller.UserController$g -> com.scoreloop.client.android.core.controller.UserController$g:
    java.lang.Object d -> d
    com.scoreloop.client.android.core.model.Game e -> e
    com.scoreloop.client.android.core.model.User f -> f
    java.lang.String a() -> a
    org.json.JSONObject b() -> b
    com.scoreloop.client.android.core.server.RequestMethod c() -> c
com.scoreloop.client.android.core.controller.UserController$h -> com.scoreloop.client.android.core.controller.UserController$h:
    java.lang.Object a -> a
    java.lang.String b -> b
    com.scoreloop.client.android.core.model.ImageSource c -> c
    java.lang.String g -> g
    org.json.JSONObject b() -> b
    com.scoreloop.client.android.core.server.RequestMethod c() -> c
com.scoreloop.client.android.core.controller.UsersController -> com.scoreloop.client.android.core.controller.UsersController:
    int b -> b
    boolean c -> c
    com.scoreloop.client.android.core.controller.UsersController$LoginSearchOperator d -> d
    java.util.List e -> e
    java.lang.Integer f -> f
    void setSearchLimit(int) -> setSearchLimit
    int getSearchLimit() -> getSearchLimit
    void setSearchesGlobal(boolean) -> setSearchesGlobal
    boolean getSearchesGlobal() -> getSearchesGlobal
    void setSearchOperator(com.scoreloop.client.android.core.controller.UsersController$LoginSearchOperator) -> setSearchOperator
    com.scoreloop.client.android.core.controller.UsersController$LoginSearchOperator getSearchOperator() -> getSearchOperator
    java.util.List getUsers() -> getUsers
    void a(java.util.List,java.lang.Integer) -> a
    void searchByLogin(java.lang.String) -> searchByLogin
    void searchByEmail(java.lang.String) -> searchByEmail
    void searchByLocalAddressBook() -> searchByLocalAddressBook
    void searchBySocialProvider(com.scoreloop.client.android.core.model.SocialProvider) -> searchBySocialProvider
    void loadRecommendedBuddies(int) -> loadRecommendedBuddies
    boolean isOverLimit() -> isOverLimit
    boolean isMaxUserCount() -> isMaxUserCount
    void loadBuddies(com.scoreloop.client.android.core.model.User,com.scoreloop.client.android.core.model.Game) -> loadBuddies
    int getCountOfUsers() -> getCountOfUsers
    boolean a(com.scoreloop.client.android.core.server.Request,com.scoreloop.client.android.core.server.Response) -> a
    com.scoreloop.client.android.core.controller.UsersController$d a(java.lang.String,com.scoreloop.client.android.core.controller.SearchSpec) -> a
    com.scoreloop.client.android.core.controller.SearchSpec b() -> b
com.scoreloop.client.android.core.controller.UsersController$1 -> com.scoreloop.client.android.core.controller.UsersController$1:
    int[] a -> a
com.scoreloop.client.android.core.controller.UsersController$LoginSearchOperator -> com.scoreloop.client.android.core.controller.UsersController$LoginSearchOperator:
    com.scoreloop.client.android.core.controller.UsersController$LoginSearchOperator EXACT_MATCH -> EXACT_MATCH
    com.scoreloop.client.android.core.controller.UsersController$LoginSearchOperator PREFIX -> PREFIX
    com.scoreloop.client.android.core.controller.UsersController$LoginSearchOperator[] a -> a
    com.scoreloop.client.android.core.controller.UsersController$LoginSearchOperator[] values() -> values
    com.scoreloop.client.android.core.controller.UsersController$LoginSearchOperator valueOf(java.lang.String) -> valueOf
com.scoreloop.client.android.core.controller.UsersController$a -> com.scoreloop.client.android.core.controller.UsersController$a:
    java.lang.Object a -> a
    com.scoreloop.client.android.core.model.User b -> b
    com.scoreloop.client.android.core.model.Game c -> c
    java.lang.String a() -> a
    org.json.JSONObject b() -> b
    com.scoreloop.client.android.core.server.RequestMethod c() -> c
com.scoreloop.client.android.core.controller.UsersController$b -> com.scoreloop.client.android.core.controller.UsersController$b:
    org.json.JSONObject b() -> b
com.scoreloop.client.android.core.controller.UsersController$c -> com.scoreloop.client.android.core.controller.UsersController$c:
    java.lang.String a -> a
    com.scoreloop.client.android.core.controller.SearchSpec b -> b
    org.json.JSONObject a() -> a
    void a(java.lang.String) -> a
com.scoreloop.client.android.core.controller.UsersController$d -> com.scoreloop.client.android.core.controller.UsersController$d:
    com.scoreloop.client.android.core.model.Game d -> d
    int a -> a
    boolean e -> e
    com.scoreloop.client.android.core.model.User b -> b
    com.scoreloop.client.android.core.controller.UsersController$c c -> c
    void a(com.scoreloop.client.android.core.model.User) -> a
    java.lang.String a() -> a
    org.json.JSONObject b() -> b
    com.scoreloop.client.android.core.server.RequestMethod c() -> c
com.scoreloop.client.android.core.controller.a -> com.scoreloop.client.android.core.controller.a:
    boolean a -> a
    boolean b -> b
    com.scoreloop.client.android.core.model.Range c -> c
    java.util.List d -> d
    int e -> e
    void k() -> k
    int a() -> a
    int b() -> b
    int c() -> c
    java.util.List d() -> d
    int e() -> e
    int f() -> f
    boolean g() -> g
    boolean h() -> h
    boolean i() -> i
    void a(int) -> a
    void b(int) -> b
    void a(java.util.List) -> a
    void c(int) -> c
    void j() -> j
com.scoreloop.client.android.core.controller.b -> com.scoreloop.client.android.core.controller.b:
    com.scoreloop.client.android.core.server.Request b -> b
    com.scoreloop.client.android.core.model.Device c -> c
    com.scoreloop.client.android.core.server.Request d -> d
    com.scoreloop.client.android.core.server.Request e -> e
    com.scoreloop.client.android.core.server.Request c(com.scoreloop.client.android.core.server.Request) -> c
    boolean a(com.scoreloop.client.android.core.server.Request,com.scoreloop.client.android.core.server.Response) -> a
    void a_() -> a_
    com.scoreloop.client.android.core.server.Request d(com.scoreloop.client.android.core.server.Request) -> d
    void b() -> b
    void b(org.json.JSONObject) -> b
    void c() -> c
com.scoreloop.client.android.core.controller.b$1 -> com.scoreloop.client.android.core.controller.b$1:
    int[] a -> a
com.scoreloop.client.android.core.controller.b$a -> com.scoreloop.client.android.core.controller.b$a:
    com.scoreloop.client.android.core.model.Device a -> a
    com.scoreloop.client.android.core.model.Game b -> b
    com.scoreloop.client.android.core.controller.b$b c -> c
    java.lang.String a() -> a
    org.json.JSONObject b() -> b
    com.scoreloop.client.android.core.server.RequestMethod c() -> c
    com.scoreloop.client.android.core.controller.b$b d() -> d
com.scoreloop.client.android.core.controller.b$b -> com.scoreloop.client.android.core.controller.b$b:
    com.scoreloop.client.android.core.controller.b$b CREATE -> CREATE
    com.scoreloop.client.android.core.controller.b$b UPDATE -> UPDATE
    com.scoreloop.client.android.core.controller.b$b VERIFY -> VERIFY
    com.scoreloop.client.android.core.controller.b$b[] a -> a
    com.scoreloop.client.android.core.controller.b$b[] values() -> values
    com.scoreloop.client.android.core.controller.b$b valueOf(java.lang.String) -> valueOf
com.scoreloop.client.android.core.controller.c -> com.scoreloop.client.android.core.controller.c:
    java.lang.String a -> a
    com.scoreloop.client.android.core.controller.d b -> b
    java.lang.Object c -> c
    java.lang.String a() -> a
    java.lang.Object b() -> b
com.scoreloop.client.android.core.controller.d -> com.scoreloop.client.android.core.controller.d:
    com.scoreloop.client.android.core.controller.d EXACT -> EXACT
    com.scoreloop.client.android.core.controller.d LIKE -> LIKE
    com.scoreloop.client.android.core.controller.d BEGINS_WITH -> BEGINS_WITH
    com.scoreloop.client.android.core.controller.d IS -> IS
    com.scoreloop.client.android.core.controller.d IS_GREATER -> IS_GREATER
    com.scoreloop.client.android.core.controller.d IS_LESS -> IS_LESS
    com.scoreloop.client.android.core.controller.d IS_NOT -> IS_NOT
    com.scoreloop.client.android.core.controller.d EQUALS_ANY -> EQUALS_ANY
    java.lang.String a -> a
    java.lang.String b -> b
    com.scoreloop.client.android.core.controller.d[] c -> c
    com.scoreloop.client.android.core.controller.d[] values() -> values
    com.scoreloop.client.android.core.controller.d valueOf(java.lang.String) -> valueOf
    java.lang.String getDescription() -> getDescription
    java.lang.String getName() -> getName
com.scoreloop.client.android.core.controller.e -> com.scoreloop.client.android.core.controller.e:
    java.lang.String a -> a
    com.scoreloop.client.android.core.controller.e$a b -> b
    java.lang.String a() -> a
    java.lang.String b() -> b
com.scoreloop.client.android.core.controller.e$a -> com.scoreloop.client.android.core.controller.e$a:
    com.scoreloop.client.android.core.controller.e$a ASCENDING -> ASCENDING
    com.scoreloop.client.android.core.controller.e$a DESCENDING -> DESCENDING
    java.lang.String a -> a
    com.scoreloop.client.android.core.controller.e$a[] b -> b
    com.scoreloop.client.android.core.controller.e$a[] values() -> values
    com.scoreloop.client.android.core.controller.e$a valueOf(java.lang.String) -> valueOf
    java.lang.String toString() -> toString
com.scoreloop.client.android.core.controller.f -> com.scoreloop.client.android.core.controller.f:
    com.scoreloop.client.android.core.controller.b b -> b
    com.scoreloop.client.android.core.server.Request c -> c
    com.scoreloop.client.android.core.controller.RequestControllerObserver d -> d
    boolean a(com.scoreloop.client.android.core.server.Request,com.scoreloop.client.android.core.server.Response) -> a
    void a_() -> a_
    boolean b() -> b
    void c() -> c
    com.scoreloop.client.android.core.controller.b a(com.scoreloop.client.android.core.controller.f) -> a
com.scoreloop.client.android.core.controller.f$a -> com.scoreloop.client.android.core.controller.f$a:
    boolean a -> a
    com.scoreloop.client.android.core.controller.f b -> b
    void requestControllerDidFail(com.scoreloop.client.android.core.controller.RequestController,java.lang.Exception) -> requestControllerDidFail
    void requestControllerDidReceiveResponse(com.scoreloop.client.android.core.controller.RequestController) -> requestControllerDidReceiveResponse
com.scoreloop.client.android.core.controller.f$b -> com.scoreloop.client.android.core.controller.f$b:
    com.scoreloop.client.android.core.model.Device a -> a
    com.scoreloop.client.android.core.model.Game b -> b
    java.lang.String c -> c
    java.lang.String a() -> a
    org.json.JSONObject b() -> b
    com.scoreloop.client.android.core.server.RequestMethod c() -> c
com.scoreloop.client.android.core.daemon.SxException -> com.scoreloop.client.android.core.daemon.SxException:
    long serialVersionUID -> serialVersionUID
    com.scoreloop.client.android.core.daemon.SxException$Code a -> a
    com.scoreloop.client.android.core.daemon.SxException$Code a() -> a
com.scoreloop.client.android.core.daemon.SxException$Code -> com.scoreloop.client.android.core.daemon.SxException$Code:
    com.scoreloop.client.android.core.daemon.SxException$Code CHANNEL_NOT_FOUND -> CHANNEL_NOT_FOUND
    com.scoreloop.client.android.core.daemon.SxException$Code CHANNEL_IO_ERROR -> CHANNEL_IO_ERROR
    com.scoreloop.client.android.core.daemon.SxException$Code PPS_ERROR -> PPS_ERROR
    com.scoreloop.client.android.core.daemon.SxException$Code INVALID_MESSAGE -> INVALID_MESSAGE
    com.scoreloop.client.android.core.daemon.SxException$Code CORPORATE_LIABLE_MODE -> CORPORATE_LIABLE_MODE
    com.scoreloop.client.android.core.daemon.SxException$Code[] a -> a
    com.scoreloop.client.android.core.daemon.SxException$Code[] values() -> values
    com.scoreloop.client.android.core.daemon.SxException$Code valueOf(java.lang.String) -> valueOf
com.scoreloop.client.android.core.daemon.SxInterface -> com.scoreloop.client.android.core.daemon.SxInterface:
    boolean a -> a
    com.scoreloop.client.android.core.daemon.b b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String a() -> a
    void a(com.scoreloop.client.android.core.daemon.a,com.scoreloop.client.android.core.daemon.c) -> a
    java.lang.String a(org.json.JSONObject,java.lang.String) -> a
com.scoreloop.client.android.core.daemon.a -> com.scoreloop.client.android.core.daemon.a:
    com.scoreloop.client.android.core.daemon.c a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    org.json.JSONObject d -> d
    java.lang.String e -> e
    long f -> f
    java.lang.String a(java.lang.String) -> a
    byte[] b(java.lang.String) -> b
    byte[] g() -> g
    long a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    org.json.JSONObject d() -> d
    com.scoreloop.client.android.core.daemon.c e() -> e
    com.scoreloop.client.android.core.daemon.pps.PPSMessage f() -> f
    com.scoreloop.client.android.core.daemon.a a(com.scoreloop.client.android.core.daemon.pps.PPSMessage) -> a
com.scoreloop.client.android.core.daemon.b -> com.scoreloop.client.android.core.daemon.b:
    com.scoreloop.client.android.core.daemon.pps.PPSObject a -> a
    long b -> b
    com.scoreloop.client.android.core.daemon.a a(java.lang.String,java.lang.String) -> a
    com.scoreloop.client.android.core.daemon.a a(java.lang.String,org.json.JSONObject) -> a
    com.scoreloop.client.android.core.daemon.a a(com.scoreloop.client.android.core.daemon.a) -> a
    long a() -> a
com.scoreloop.client.android.core.daemon.c -> com.scoreloop.client.android.core.daemon.c:
    com.scoreloop.client.android.core.daemon.c STRING -> STRING
    com.scoreloop.client.android.core.daemon.c JSON -> JSON
    com.scoreloop.client.android.core.daemon.c[] a -> a
    com.scoreloop.client.android.core.daemon.c[] values() -> values
    com.scoreloop.client.android.core.daemon.c valueOf(java.lang.String) -> valueOf
com.scoreloop.client.android.core.daemon.pps.PPSAttribute -> com.scoreloop.client.android.core.daemon.pps.PPSAttribute:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    com.scoreloop.client.android.core.daemon.pps.PPSQualifierState d -> d
    com.scoreloop.client.android.core.daemon.pps.PPSQualifierState e -> e
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    com.scoreloop.client.android.core.daemon.pps.PPSAttribute a(java.lang.String) -> a
    java.lang.String d() -> d
com.scoreloop.client.android.core.daemon.pps.PPSChangeType -> com.scoreloop.client.android.core.daemon.pps.PPSChangeType:
    com.scoreloop.client.android.core.daemon.pps.PPSChangeType NONE -> NONE
    com.scoreloop.client.android.core.daemon.pps.PPSChangeType CREATED -> CREATED
    com.scoreloop.client.android.core.daemon.pps.PPSChangeType DELETED -> DELETED
    com.scoreloop.client.android.core.daemon.pps.PPSChangeType TRUNCATED -> TRUNCATED
    com.scoreloop.client.android.core.daemon.pps.PPSChangeType PURGED -> PURGED
    java.lang.String a -> a
    com.scoreloop.client.android.core.daemon.pps.PPSChangeType[] b -> b
    com.scoreloop.client.android.core.daemon.pps.PPSChangeType[] values() -> values
    com.scoreloop.client.android.core.daemon.pps.PPSChangeType valueOf(java.lang.String) -> valueOf
    java.lang.String getDescriptor() -> getDescriptor
    com.scoreloop.client.android.core.daemon.pps.PPSChangeType fromDescriptor(java.lang.String) -> fromDescriptor
com.scoreloop.client.android.core.daemon.pps.PPSException -> com.scoreloop.client.android.core.daemon.pps.PPSException:
    long serialVersionUID -> serialVersionUID
com.scoreloop.client.android.core.daemon.pps.PPSMessage -> com.scoreloop.client.android.core.daemon.pps.PPSMessage:
    java.lang.String a -> a
    com.scoreloop.client.android.core.daemon.pps.PPSChangeType b -> b
    java.util.HashMap c -> c
    com.scoreloop.client.android.core.daemon.pps.PPSChangeType a() -> a
    void a(com.scoreloop.client.android.core.daemon.pps.PPSAttribute) -> a
    void a(java.lang.String,java.lang.String,java.lang.String) -> a
    com.scoreloop.client.android.core.daemon.pps.PPSAttribute a(java.lang.String) -> a
    java.lang.String b(java.lang.String) -> b
    java.lang.String b() -> b
    com.scoreloop.client.android.core.daemon.pps.PPSMessage c(java.lang.String) -> c
com.scoreloop.client.android.core.daemon.pps.PPSObject -> com.scoreloop.client.android.core.daemon.pps.PPSObject:
    java.io.RandomAccessFile a -> a
    int b -> b
    com.scoreloop.client.android.core.daemon.pps.PPSMessage a() -> a
    void a(com.scoreloop.client.android.core.daemon.pps.PPSMessage) -> a
com.scoreloop.client.android.core.daemon.pps.PPSQualifierState -> com.scoreloop.client.android.core.daemon.pps.PPSQualifierState:
    com.scoreloop.client.android.core.daemon.pps.PPSQualifierState NOT_USED -> NOT_USED
    com.scoreloop.client.android.core.daemon.pps.PPSQualifierState SET -> SET
    com.scoreloop.client.android.core.daemon.pps.PPSQualifierState UNSET -> UNSET
    com.scoreloop.client.android.core.daemon.pps.PPSQualifierState[] a -> a
    com.scoreloop.client.android.core.daemon.pps.PPSQualifierState[] values() -> values
    com.scoreloop.client.android.core.daemon.pps.PPSQualifierState valueOf(java.lang.String) -> valueOf
com.scoreloop.client.android.core.model.Achievement -> com.scoreloop.client.android.core.model.Achievement:
    java.lang.String a -> a
    com.scoreloop.client.android.core.model.Award c -> c
    java.util.Date d -> d
    java.lang.String e -> e
    boolean f -> f
    com.scoreloop.client.android.core.model.AchievementsStore g -> g
    java.lang.String h -> h
    int i -> i
    void a(java.lang.Object) -> a
    com.scoreloop.client.android.core.model.Award getAward() -> getAward
    java.util.Date getDate() -> getDate
    java.lang.String a() -> a
    android.graphics.Bitmap getImage() -> getImage
    java.lang.String c() -> c
    int getValue() -> getValue
    void incrementValue() -> incrementValue
    boolean isAchieved() -> isAchieved
    void a(com.scoreloop.client.android.core.model.Achievement,boolean) -> a
    boolean needsSubmit() -> needsSubmit
    void setAchieved() -> setAchieved
    void a(java.lang.String) -> a
    void setValue(int) -> setValue
    org.json.JSONObject b_() -> b_
    org.json.JSONObject a(boolean) -> a
    void d() -> d
    void a(org.json.JSONObject) -> a
    com.scoreloop.client.android.core.model.AchievementsStore a(com.scoreloop.client.android.core.model.Achievement) -> a
com.scoreloop.client.android.core.model.Achievement$1 -> com.scoreloop.client.android.core.model.Achievement$1:
    com.scoreloop.client.android.core.model.Achievement a -> a
    java.lang.Void c() -> c
    java.lang.Object a(java.lang.Object[]) -> a
com.scoreloop.client.android.core.model.AchievementsStore -> com.scoreloop.client.android.core.model.AchievementsStore:
    boolean a() -> a
    void b() -> b
    com.scoreloop.client.android.core.model.Achievement a(com.scoreloop.client.android.core.model.Award) -> a
    void a(com.scoreloop.client.android.core.model.Achievement) -> a
com.scoreloop.client.android.core.model.Activity -> com.scoreloop.client.android.core.model.Activity:
    java.util.Date c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String a -> a
    java.util.Date getDate() -> getDate
    java.lang.String getMessage() -> getMessage
    java.lang.String getUserIdentifier() -> getUserIdentifier
    com.scoreloop.client.android.core.model.Entity getUser() -> getUser
    java.lang.String getGameIdentifier() -> getGameIdentifier
    com.scoreloop.client.android.core.model.Entity getGame() -> getGame
    java.lang.String getTimeAgo() -> getTimeAgo
    java.lang.String getImageUrl(com.scoreloop.client.android.core.model.Activity$ImageSize) -> getImageUrl
    org.json.JSONObject b_() -> b_
    void a(java.lang.Object) -> a
    void a(org.json.JSONObject) -> a
    java.lang.String a() -> a
com.scoreloop.client.android.core.model.Activity$ImageSize -> com.scoreloop.client.android.core.model.Activity$ImageSize:
    com.scoreloop.client.android.core.model.Activity$ImageSize SMALL -> SMALL
    com.scoreloop.client.android.core.model.Activity$ImageSize MEDIUM -> MEDIUM
    com.scoreloop.client.android.core.model.Activity$ImageSize LARGE -> LARGE
    java.lang.String a -> a
    com.scoreloop.client.android.core.model.Activity$ImageSize[] b -> b
    com.scoreloop.client.android.core.model.Activity$ImageSize[] values() -> values
    com.scoreloop.client.android.core.model.Activity$ImageSize valueOf(java.lang.String) -> valueOf
    java.lang.String a(com.scoreloop.client.android.core.model.Activity$ImageSize) -> a
com.scoreloop.client.android.core.model.AddressBook -> com.scoreloop.client.android.core.model.AddressBook:
    java.lang.String[] a -> a
    java.util.List b -> b
    java.lang.String c -> c
    java.security.MessageDigest d -> d
    com.scoreloop.client.android.core.model.AddressBook$HashAlgorithm e -> e
    com.scoreloop.client.android.core.model.AddressBook a(com.scoreloop.client.android.core.model.Session) -> a
    void a(com.scoreloop.client.android.core.model.AddressBook$HashAlgorithm) -> a
    java.util.List a(android.content.Context) -> a
    void a(java.lang.String) -> a
    java.util.List b(android.content.Context) -> b
com.scoreloop.client.android.core.model.AddressBook$HashAlgorithm -> com.scoreloop.client.android.core.model.AddressBook$HashAlgorithm:
    com.scoreloop.client.android.core.model.AddressBook$HashAlgorithm SHA1 -> SHA1
    com.scoreloop.client.android.core.model.AddressBook$HashAlgorithm MD5 -> MD5
    java.lang.String a -> a
    com.scoreloop.client.android.core.model.AddressBook$HashAlgorithm[] b -> b
    com.scoreloop.client.android.core.model.AddressBook$HashAlgorithm[] values() -> values
    com.scoreloop.client.android.core.model.AddressBook$HashAlgorithm valueOf(java.lang.String) -> valueOf
    java.security.MessageDigest a() -> a
    java.security.MessageDigest a(com.scoreloop.client.android.core.model.AddressBook$HashAlgorithm) -> a
com.scoreloop.client.android.core.model.Award -> com.scoreloop.client.android.core.model.Award:
    android.graphics.Bitmap a -> a
    com.scoreloop.client.android.core.model.Award$a b -> b
    com.scoreloop.client.android.core.model.Range c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    com.scoreloop.client.android.core.model.Money g -> g
    android.graphics.Bitmap h -> h
    boolean equals(java.lang.Object) -> equals
    android.graphics.Bitmap getAchievedImage() -> getAchievedImage
    int getAchievingValue() -> getAchievingValue
    com.scoreloop.client.android.core.model.Award$a a() -> a
    com.scoreloop.client.android.core.model.Range getCounterRange() -> getCounterRange
    java.lang.String getIdentifier() -> getIdentifier
    int getInitialValue() -> getInitialValue
    java.lang.String getLocalizedDescription() -> getLocalizedDescription
    java.lang.String getLocalizedTitle() -> getLocalizedTitle
    com.scoreloop.client.android.core.model.Money getRewardMoney() -> getRewardMoney
    android.graphics.Bitmap getUnachievedImage() -> getUnachievedImage
    int hashCode() -> hashCode
    boolean isAchievedByValue(int) -> isAchievedByValue
    boolean isValidCounterValue(int) -> isValidCounterValue
    void a(android.graphics.Bitmap) -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void b(android.graphics.Bitmap) -> b
    java.lang.String toString() -> toString
com.scoreloop.client.android.core.model.Award$a -> com.scoreloop.client.android.core.model.Award$a:
    com.scoreloop.client.android.core.model.Award getAwardWithIdentifier(java.lang.String) -> getAwardWithIdentifier
    java.lang.String a() -> a
com.scoreloop.client.android.core.model.AwardList -> com.scoreloop.client.android.core.model.AwardList:
    java.util.List a -> a
    java.util.Map b -> b
    java.lang.String c -> c
    void a(com.scoreloop.client.android.core.model.Award) -> a
    java.util.List getAwardIdentifiers() -> getAwardIdentifiers
    java.util.List getAwards() -> getAwards
    com.scoreloop.client.android.core.model.Award getAwardWithIdentifier(java.lang.String) -> getAwardWithIdentifier
    java.lang.String a() -> a
    void a(java.lang.String) -> a
com.scoreloop.client.android.core.model.BaseEntity -> com.scoreloop.client.android.core.model.BaseEntity:
    java.lang.String b -> b
    void a(java.lang.Object,java.lang.String,java.lang.Object) -> a
    void a(java.lang.Object) -> a
    boolean equals(java.lang.Object) -> equals
    java.lang.String getIdentifier() -> getIdentifier
    int hashCode() -> hashCode
    boolean b() -> b
    void b(java.lang.String) -> b
    org.json.JSONObject b_() -> b_
    java.lang.String toString() -> toString
    void a(org.json.JSONObject) -> a
com.scoreloop.client.android.core.model.BaseEntity$a -> com.scoreloop.client.android.core.model.BaseEntity$a:
    java.lang.String a -> a
    java.lang.String b -> b
com.scoreloop.client.android.core.model.BundleAwardListBuilder -> com.scoreloop.client.android.core.model.BundleAwardListBuilder:
    java.lang.String a -> a
    android.content.Context b -> b
    java.util.regex.Pattern c -> c
    byte[] a(java.lang.String) -> a
    com.scoreloop.client.android.core.model.AwardList a(java.lang.String,java.lang.String) -> a
    boolean b(java.lang.String) -> b
    void a(java.lang.String,com.scoreloop.client.android.core.model.AwardList) -> a
    void b(java.lang.String,com.scoreloop.client.android.core.model.AwardList) -> b
    android.graphics.Bitmap b(java.lang.String,java.lang.String) -> b
    java.io.InputStream c(java.lang.String,java.lang.String) -> c
    java.lang.String c(java.lang.String) -> c
    boolean d(java.lang.String) -> d
    int a(java.io.InputStream,byte[]) -> a
com.scoreloop.client.android.core.model.Challenge -> com.scoreloop.client.android.core.model.Challenge:
    java.lang.String a -> a
    java.util.Date c -> c
    com.scoreloop.client.android.core.model.User d -> d
    com.scoreloop.client.android.core.model.Score e -> e
    java.lang.Integer f -> f
    com.scoreloop.client.android.core.model.User g -> g
    com.scoreloop.client.android.core.model.Score h -> h
    java.lang.Integer i -> i
    com.scoreloop.client.android.core.model.ContextMap j -> j
    java.util.Date k -> k
    java.lang.String l -> l
    java.lang.Integer m -> m
    com.scoreloop.client.android.core.model.User n -> n
    java.lang.Integer o -> o
    com.scoreloop.client.android.core.model.Money p -> p
    com.scoreloop.client.android.core.model.Money q -> q
    java.lang.String r -> r
    com.scoreloop.client.android.core.model.User s -> s
    com.scoreloop.client.android.core.model.Challenge a(com.scoreloop.client.android.core.model.Session,com.scoreloop.client.android.core.model.Money,com.scoreloop.client.android.core.model.User) -> a
    java.util.Date getCompletedAt() -> getCompletedAt
    com.scoreloop.client.android.core.model.User getContender() -> getContender
    com.scoreloop.client.android.core.model.Score getContenderScore() -> getContenderScore
    java.lang.Integer getContenderSkill() -> getContenderSkill
    com.scoreloop.client.android.core.model.User getContestant() -> getContestant
    com.scoreloop.client.android.core.model.Score getContestantScore() -> getContestantScore
    java.lang.Integer getContestantSkill() -> getContestantSkill
    java.util.Map getContext() -> getContext
    java.util.Date getCreatedAt() -> getCreatedAt
    java.lang.String a() -> a
    java.lang.Integer getLevel() -> getLevel
    com.scoreloop.client.android.core.model.User getLoser() -> getLoser
    java.lang.Integer getMode() -> getMode
    com.scoreloop.client.android.core.model.Money getPrize() -> getPrize
    com.scoreloop.client.android.core.model.Money getStake() -> getStake
    com.scoreloop.client.android.core.model.User getWinner() -> getWinner
    boolean isAccepted() -> isAccepted
    boolean isAssigned() -> isAssigned
    boolean isCancelled() -> isCancelled
    boolean isComplete() -> isComplete
    boolean isCreated() -> isCreated
    boolean isDone() -> isDone
    boolean isInvalid() -> isInvalid
    boolean isInvited() -> isInvited
    boolean isOpen() -> isOpen
    boolean isPlayableForUser(com.scoreloop.client.android.core.model.User) -> isPlayableForUser
    boolean isRejected() -> isRejected
    boolean isWinner(com.scoreloop.client.android.core.model.User) -> isWinner
    void a(com.scoreloop.client.android.core.model.Score) -> a
    void setContender(com.scoreloop.client.android.core.model.User) -> setContender
    void setContenderScore(com.scoreloop.client.android.core.model.Score) -> setContenderScore
    void setContestant(com.scoreloop.client.android.core.model.User) -> setContestant
    void setContestantScore(com.scoreloop.client.android.core.model.Score) -> setContestantScore
    void setContext(java.util.Map) -> setContext
    void setLevel(java.lang.Integer) -> setLevel
    void setMode(java.lang.Integer) -> setMode
    org.json.JSONObject b_() -> b_
    void a(org.json.JSONObject) -> a
    void a(com.scoreloop.client.android.core.model.User,boolean) -> a
com.scoreloop.client.android.core.model.Client -> com.scoreloop.client.android.core.model.Client:
    java.util.Map a -> a
    com.scoreloop.client.android.core.model.ClientObserver b -> b
    com.scoreloop.client.android.core.model.Session c -> c
    com.scoreloop.client.android.core.daemon.SxInterface d -> d
    boolean a(java.util.Properties,java.lang.String,boolean) -> a
    java.util.Properties getProperties(android.content.Context) -> getProperties
    void init(android.content.Context,java.lang.String,com.scoreloop.client.android.core.model.ClientObserver) -> init
    java.util.Properties a(android.content.Context) -> a
    void a(java.util.Properties,java.lang.String) -> a
    void a(java.util.Properties,java.lang.String,java.lang.String) -> a
    void a(android.content.Context,java.lang.String) -> a
    void a(java.util.Properties) -> a
    java.util.Set getSupportedPaymentProviderKinds() -> getSupportedPaymentProviderKinds
    void destroy() -> destroy
    com.scoreloop.client.android.core.model.Range getGameLevels() -> getGameLevels
    com.scoreloop.client.android.core.model.Range getGameModes() -> getGameModes
    java.lang.String getInfoString() -> getInfoString
    java.lang.String getSDKVersion() -> getSDKVersion
    com.scoreloop.client.android.core.model.Session getSession() -> getSession
    void a(android.content.Context,com.scoreloop.client.android.core.model.ClientObserver,java.util.Properties) -> a
    int b(java.util.Properties,java.lang.String) -> b
    void a(java.lang.Class) -> a
    void a(com.scoreloop.client.android.core.model.Session,java.lang.Boolean) -> a
    boolean a(com.scoreloop.client.android.core.model.Session) -> a
    void b(android.content.Context) -> b
    void setGameLevels(com.scoreloop.client.android.core.model.Range) -> setGameLevels
    void setGameModes(com.scoreloop.client.android.core.model.Range) -> setGameModes
com.scoreloop.client.android.core.model.ClientObserver -> com.scoreloop.client.android.core.model.ClientObserver:
    void clientDidAskUserForTermsOfService(com.scoreloop.client.android.core.model.Client,java.lang.Boolean) -> clientDidAskUserForTermsOfService
    boolean clientShouldAskUserForTermsOfService(com.scoreloop.client.android.core.model.Client) -> clientShouldAskUserForTermsOfService
com.scoreloop.client.android.core.model.ContextMap -> com.scoreloop.client.android.core.model.ContextMap:
    long serialVersionUID -> serialVersionUID
    java.lang.Object put(java.lang.Object,java.lang.Object) -> put
com.scoreloop.client.android.core.model.Continuation -> com.scoreloop.client.android.core.model.Continuation:
    void withValue(java.lang.Object,java.lang.Exception) -> withValue
com.scoreloop.client.android.core.model.DbAchievementsStore -> com.scoreloop.client.android.core.model.DbAchievementsStore:
    com.scoreloop.client.android.core.util.Cryptifier a -> a
    com.scoreloop.client.android.core.model.DbAchievementsStore$a b -> b
    java.util.concurrent.atomic.AtomicInteger c -> c
    android.database.sqlite.SQLiteDatabase a(boolean) -> a
    void c() -> c
    void a(com.scoreloop.client.android.core.model.Achievement) -> a
    void a(com.scoreloop.client.android.core.model.Achievement,android.database.sqlite.SQLiteDatabase) -> a
    boolean a() -> a
    void b() -> b
    void b(android.database.sqlite.SQLiteDatabase,boolean) -> b
    java.lang.String a(com.scoreloop.client.android.core.model.DbAchievementsStore$TableConfig$Keys) -> a
    java.lang.String b(android.database.sqlite.SQLiteDatabase,com.scoreloop.client.android.core.model.DbAchievementsStore$TableConfig$Keys) -> b
    void b(android.database.sqlite.SQLiteDatabase,com.scoreloop.client.android.core.model.DbAchievementsStore$TableConfig$Keys,java.lang.String) -> b
    android.content.ContentValues b(com.scoreloop.client.android.core.model.Achievement) -> b
    com.scoreloop.client.android.core.model.Achievement a(com.scoreloop.client.android.core.model.Award) -> a
    com.scoreloop.client.android.core.model.Achievement a(android.database.sqlite.SQLiteDatabase,com.scoreloop.client.android.core.model.Award) -> a
    boolean a(java.lang.Object,java.lang.Object) -> a
    com.scoreloop.client.android.core.model.Achievement a(java.lang.String,com.scoreloop.client.android.core.model.Award) -> a
    java.lang.String c(com.scoreloop.client.android.core.model.Achievement) -> c
    void a(com.scoreloop.client.android.core.model.DbAchievementsStore,com.scoreloop.client.android.core.model.Achievement,android.database.sqlite.SQLiteDatabase) -> a
    void a(android.database.sqlite.SQLiteDatabase,boolean) -> a
    java.lang.String a(android.database.sqlite.SQLiteDatabase,com.scoreloop.client.android.core.model.DbAchievementsStore$TableConfig$Keys) -> a
    void a(android.database.sqlite.SQLiteDatabase,com.scoreloop.client.android.core.model.DbAchievementsStore$TableConfig$Keys,java.lang.String) -> a
com.scoreloop.client.android.core.model.DbAchievementsStore$TableConfig$Keys -> com.scoreloop.client.android.core.model.DbAchievementsStore$TableConfig$Keys:
    com.scoreloop.client.android.core.model.DbAchievementsStore$TableConfig$Keys DID_QUERY_SERVER -> DID_QUERY_SERVER
    com.scoreloop.client.android.core.model.DbAchievementsStore$TableConfig$Keys USER_ID -> USER_ID
    java.lang.String keyName -> keyName
    com.scoreloop.client.android.core.model.DbAchievementsStore$TableConfig$Keys[] a -> a
    com.scoreloop.client.android.core.model.DbAchievementsStore$TableConfig$Keys[] values() -> values
    com.scoreloop.client.android.core.model.DbAchievementsStore$TableConfig$Keys valueOf(java.lang.String) -> valueOf
    java.lang.String getWhereClause() -> getWhereClause
com.scoreloop.client.android.core.model.DbAchievementsStore$a -> com.scoreloop.client.android.core.model.DbAchievementsStore$a:
    android.content.Context a -> a
    com.scoreloop.client.android.core.model.AwardList b -> b
    java.lang.String c -> c
    com.scoreloop.client.android.core.model.User d -> d
    com.scoreloop.client.android.core.model.SharedPreferencesAchievementsStore e -> e
    com.scoreloop.client.android.core.model.DbAchievementsStore f -> f
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void a(android.database.sqlite.SQLiteDatabase) -> a
    void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    void b(android.database.sqlite.SQLiteDatabase) -> b
com.scoreloop.client.android.core.model.Device -> com.scoreloop.client.android.core.model.Device:
    java.lang.String a -> a
    android.content.Context c -> c
    org.json.JSONObject d -> d
    com.scoreloop.client.android.core.model.DeviceUuid e -> e
    com.scoreloop.client.android.core.util.DiskAsyncTask f -> f
    com.scoreloop.client.android.core.model.DeviceIdStore g -> g
    org.json.JSONObject b(android.content.Context) -> b
    org.json.JSONObject a(java.lang.String,java.lang.String) -> a
    org.json.JSONObject f() -> f
    org.json.JSONObject g() -> g
    java.lang.String a() -> a
    java.lang.String c() -> c
    java.lang.String d() -> d
    void a(android.content.Context) -> a
    java.lang.String h() -> h
    boolean e() -> e
    void b(java.lang.String) -> b
    org.json.JSONObject b_() -> b_
    void a(org.json.JSONObject) -> a
    com.scoreloop.client.android.core.model.DeviceIdStore a(com.scoreloop.client.android.core.model.Device) -> a
    com.scoreloop.client.android.core.model.DeviceUuid a(com.scoreloop.client.android.core.model.Device,com.scoreloop.client.android.core.model.DeviceUuid) -> a
com.scoreloop.client.android.core.model.Device$1 -> com.scoreloop.client.android.core.model.Device$1:
    android.content.Context a -> a
    com.scoreloop.client.android.core.model.Device b -> b
    java.lang.Object a(java.lang.Object[]) -> a
com.scoreloop.client.android.core.model.Device$2 -> com.scoreloop.client.android.core.model.Device$2:
    com.scoreloop.client.android.core.model.Device a -> a
    java.lang.Object a(java.lang.Object[]) -> a
com.scoreloop.client.android.core.model.Device$State -> com.scoreloop.client.android.core.model.Device$State:
    com.scoreloop.client.android.core.model.Device$State CREATED -> CREATED
    com.scoreloop.client.android.core.model.Device$State FREED -> FREED
    com.scoreloop.client.android.core.model.Device$State UNKNOWN -> UNKNOWN
    com.scoreloop.client.android.core.model.Device$State VERIFIED -> VERIFIED
    int a -> a
    com.scoreloop.client.android.core.model.Device$State[] b -> b
    com.scoreloop.client.android.core.model.Device$State[] values() -> values
    com.scoreloop.client.android.core.model.Device$State valueOf(java.lang.String) -> valueOf
    int intValue() -> intValue
com.scoreloop.client.android.core.model.DeviceIdStore -> com.scoreloop.client.android.core.model.DeviceIdStore:
    java.util.List a -> a
    android.content.Context b -> b
    com.scoreloop.client.android.core.model.DeviceIdStore$b c -> c
    com.scoreloop.client.android.core.model.DeviceIdStore$c d -> d
    com.scoreloop.client.android.core.model.DeviceIdStore$d e -> e
    com.scoreloop.client.android.core.model.DeviceIdStore$a b() -> b
    java.lang.String a() -> a
    void a(java.lang.String) -> a
com.scoreloop.client.android.core.model.DeviceIdStore$a -> com.scoreloop.client.android.core.model.DeviceIdStore$a:
    java.lang.String a -> a
    org.json.JSONObject b_() -> b_
    void a(org.json.JSONObject) -> a
    java.lang.String a(com.scoreloop.client.android.core.model.DeviceIdStore$a) -> a
com.scoreloop.client.android.core.model.DeviceIdStore$b -> com.scoreloop.client.android.core.model.DeviceIdStore$b:
    java.lang.String a() -> a
    com.scoreloop.client.android.core.util.JSONSerializable c() -> c
com.scoreloop.client.android.core.model.DeviceIdStore$c -> com.scoreloop.client.android.core.model.DeviceIdStore$c:
    java.lang.String a() -> a
    com.scoreloop.client.android.core.util.JSONSerializable c() -> c
com.scoreloop.client.android.core.model.DeviceIdStore$d -> com.scoreloop.client.android.core.model.DeviceIdStore$d:
    java.lang.String a() -> a
    java.lang.String b() -> b
    com.scoreloop.client.android.core.util.JSONSerializable c() -> c
com.scoreloop.client.android.core.model.DeviceUuid -> com.scoreloop.client.android.core.model.DeviceUuid:
    java.util.Date b -> b
    java.lang.String a -> a
    com.scoreloop.client.android.core.model.DeviceUuid$Source c -> c
    org.json.JSONObject b_() -> b_
    void a(org.json.JSONObject) -> a
com.scoreloop.client.android.core.model.DeviceUuid$Source -> com.scoreloop.client.android.core.model.DeviceUuid$Source:
    com.scoreloop.client.android.core.model.DeviceUuid$Source IMEI -> IMEI
    com.scoreloop.client.android.core.model.DeviceUuid$Source ANDROID_ID -> ANDROID_ID
    com.scoreloop.client.android.core.model.DeviceUuid$Source GENERATED -> GENERATED
    com.scoreloop.client.android.core.model.DeviceUuid$Source[] a -> a
    com.scoreloop.client.android.core.model.DeviceUuid$Source[] values() -> values
    com.scoreloop.client.android.core.model.DeviceUuid$Source valueOf(java.lang.String) -> valueOf
com.scoreloop.client.android.core.model.Entity -> com.scoreloop.client.android.core.model.Entity:
    java.lang.String a() -> a
    java.lang.String getIdentifier() -> getIdentifier
com.scoreloop.client.android.core.model.EntityFactory -> com.scoreloop.client.android.core.model.EntityFactory:
    com.scoreloop.client.android.core.model.Entity createEntity(java.lang.String,java.lang.String) -> createEntity
    void a(com.scoreloop.client.android.core.model.Entity) -> a
com.scoreloop.client.android.core.model.Game -> com.scoreloop.client.android.core.model.Game:
    java.lang.String CONTEXT_KEY_LEVEL -> CONTEXT_KEY_LEVEL
    java.lang.String CONTEXT_KEY_MINOR_RESULT -> CONTEXT_KEY_MINOR_RESULT
    java.lang.String CONTEXT_KEY_MODE -> CONTEXT_KEY_MODE
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.Integer g -> g
    int h -> h
    java.lang.Integer i -> i
    int j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    java.lang.String[] p -> p
    com.scoreloop.client.android.core.model.AwardList q -> q
    com.scoreloop.client.android.core.model.ScoreOrdering r -> r
    java.lang.String a -> a
    java.lang.Integer getLevelCount() -> getLevelCount
    java.lang.Integer getMaxLevel() -> getMaxLevel
    java.lang.Integer getMaxMode() -> getMaxMode
    java.lang.Integer getMinLevel() -> getMinLevel
    java.lang.Integer getMinMode() -> getMinMode
    java.lang.Integer getModeCount() -> getModeCount
    java.lang.String getName() -> getName
    java.lang.String c() -> c
    java.lang.String getVersion() -> getVersion
    boolean hasLevels() -> hasLevels
    boolean hasModes() -> hasModes
    void a(java.lang.String) -> a
    void a(java.lang.Integer) -> a
    void b(java.lang.Integer) -> b
    void c(java.lang.Integer) -> c
    void d(java.lang.Integer) -> d
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    org.json.JSONObject b_() -> b_
    void a(org.json.JSONObject) -> a
    java.lang.String getDescription() -> getDescription
    java.lang.String getImageUrl() -> getImageUrl
    java.lang.String getPublisherName() -> getPublisherName
    java.lang.String getDownloadUrl() -> getDownloadUrl
    java.lang.String a() -> a
    void a(com.scoreloop.client.android.core.model.AwardList) -> a
    com.scoreloop.client.android.core.model.AwardList d() -> d
    java.lang.String[] getPackageNames() -> getPackageNames
    com.scoreloop.client.android.core.model.ScoreOrdering e() -> e
    void a(com.scoreloop.client.android.core.model.ScoreOrdering) -> a
    java.lang.String getBannerUrl(com.scoreloop.client.android.core.model.Game$BannerSize) -> getBannerUrl
com.scoreloop.client.android.core.model.Game$BannerSize -> com.scoreloop.client.android.core.model.Game$BannerSize:
    com.scoreloop.client.android.core.model.Game$BannerSize SMALL -> SMALL
    com.scoreloop.client.android.core.model.Game$BannerSize MEDIUM -> MEDIUM
    com.scoreloop.client.android.core.model.Game$BannerSize LARGE -> LARGE
    java.lang.String a -> a
    com.scoreloop.client.android.core.model.Game$BannerSize[] b -> b
    com.scoreloop.client.android.core.model.Game$BannerSize[] values() -> values
    com.scoreloop.client.android.core.model.Game$BannerSize valueOf(java.lang.String) -> valueOf
    java.lang.String a(com.scoreloop.client.android.core.model.Game$BannerSize) -> a
com.scoreloop.client.android.core.model.GameItem -> com.scoreloop.client.android.core.model.GameItem:
    java.lang.String ENTITY_NAME -> ENTITY_NAME
    com.scoreloop.client.android.core.model.Money a -> a
    java.lang.Integer c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.util.Map g -> g
    java.lang.Boolean h -> h
    java.util.List i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.util.Date l -> l
    java.util.List m -> m
    com.scoreloop.client.android.core.model.GameItem a(com.scoreloop.client.android.core.model.Entity) -> a
    com.scoreloop.client.android.core.model.Money getCoinPackValue() -> getCoinPackValue
    java.lang.Integer getContentSize() -> getContentSize
    java.lang.String getContentType() -> getContentType
    java.lang.String getDefaultImageKey() -> getDefaultImageKey
    java.lang.String getDefaultImageUrl() -> getDefaultImageUrl
    java.lang.String getDescription() -> getDescription
    java.lang.String getDownloadUrl() -> getDownloadUrl
    java.lang.String a() -> a
    java.util.Set getImageKeys() -> getImageKeys
    java.lang.String getImageUrlForKey(java.lang.String) -> getImageUrlForKey
    java.util.List getLowestPrices() -> getLowestPrices
    java.lang.String getMetaData() -> getMetaData
    java.lang.String getName() -> getName
    java.util.Date getPurchaseDate() -> getPurchaseDate
    boolean isPurchased() -> isPurchased
    java.util.List getTags() -> getTags
    boolean isCoinPack() -> isCoinPack
    java.lang.Boolean isCollectable() -> isCollectable
    java.lang.Boolean isFree() -> isFree
    void a(org.json.JSONObject) -> a
com.scoreloop.client.android.core.model.Image -> com.scoreloop.client.android.core.model.Image:
    byte[] toPngByteArray(int,int,com.scoreloop.client.android.core.model.Image$ResizeMode) -> toPngByteArray
com.scoreloop.client.android.core.model.Image$ResizeMode -> com.scoreloop.client.android.core.model.Image$ResizeMode:
    com.scoreloop.client.android.core.model.Image$ResizeMode CROP -> CROP
    com.scoreloop.client.android.core.model.Image$ResizeMode[] a -> a
    com.scoreloop.client.android.core.model.Image$ResizeMode[] values() -> values
    com.scoreloop.client.android.core.model.Image$ResizeMode valueOf(java.lang.String) -> valueOf
com.scoreloop.client.android.core.model.ImageSource -> com.scoreloop.client.android.core.model.ImageSource:
    com.scoreloop.client.android.core.model.ImageSource IMAGE_SOURCE_SCORELOOP -> IMAGE_SOURCE_SCORELOOP
    com.scoreloop.client.android.core.model.ImageSource IMAGE_SOURCE_DEFAULT -> IMAGE_SOURCE_DEFAULT
    java.lang.String getName() -> getName
com.scoreloop.client.android.core.model.Message -> com.scoreloop.client.android.core.model.Message:
    java.util.List a -> a
    com.scoreloop.client.android.core.model.MessageTargetInterface b -> b
    java.lang.String c -> c
    com.scoreloop.client.android.core.model.Message$Type d -> d
    void a(com.scoreloop.client.android.core.model.MessageReceiver) -> a
    java.util.List b() -> b
    org.json.JSONArray f() -> f
    com.scoreloop.client.android.core.model.MessageTargetInterface c() -> c
    org.json.JSONObject g() -> g
    java.lang.String d() -> d
    com.scoreloop.client.android.core.model.Message$Type e() -> e
    void a(com.scoreloop.client.android.core.model.MessageTargetInterface) -> a
    void a(java.lang.String) -> a
    void a(com.scoreloop.client.android.core.model.Message$Type) -> a
    org.json.JSONObject b_() -> b_
    void a(org.json.JSONObject) -> a
com.scoreloop.client.android.core.model.Message$Type -> com.scoreloop.client.android.core.model.Message$Type:
    com.scoreloop.client.android.core.model.Message$Type ABUSE_REPORT -> ABUSE_REPORT
    com.scoreloop.client.android.core.model.Message$Type RECOMMENDATION -> RECOMMENDATION
    com.scoreloop.client.android.core.model.Message$Type TARGET_INFERRED -> TARGET_INFERRED
    java.lang.String a -> a
    com.scoreloop.client.android.core.model.Message$Type[] b -> b
    com.scoreloop.client.android.core.model.Message$Type[] values() -> values
    com.scoreloop.client.android.core.model.Message$Type valueOf(java.lang.String) -> valueOf
    java.lang.String getTypeString() -> getTypeString
com.scoreloop.client.android.core.model.MessageReceiver -> com.scoreloop.client.android.core.model.MessageReceiver:
    com.scoreloop.client.android.core.model.MessageReceiverInterface a -> a
    java.lang.String[] b -> b
    boolean equals(java.lang.Object) -> equals
    com.scoreloop.client.android.core.model.MessageReceiverInterface b() -> b
    int hashCode() -> hashCode
    org.json.JSONObject b_() -> b_
    void a(org.json.JSONObject) -> a
com.scoreloop.client.android.core.model.MessageReceiverInterface -> com.scoreloop.client.android.core.model.MessageReceiverInterface:
    java.lang.String a() -> a
    java.lang.String[] a(java.lang.Object[]) -> a
    boolean a(com.scoreloop.client.android.core.model.Session) -> a
com.scoreloop.client.android.core.model.MessageTargetInterface -> com.scoreloop.client.android.core.model.MessageTargetInterface:
    java.lang.String a() -> a
    java.lang.String getIdentifier() -> getIdentifier
    boolean b() -> b
com.scoreloop.client.android.core.model.Money -> com.scoreloop.client.android.core.model.Money:
    java.lang.String a -> a
    java.lang.String b -> b
    java.math.BigDecimal c -> c
    java.lang.String d -> d
    java.lang.String getApplicationCurrencyCode() -> getApplicationCurrencyCode
    java.lang.String getApplicationCurrencySymbol() -> getApplicationCurrencySymbol
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    com.scoreloop.client.android.core.model.Money b() -> b
    int compareTo(com.scoreloop.client.android.core.model.Money) -> compareTo
    boolean equals(java.lang.Object) -> equals
    java.math.BigDecimal getAmount() -> getAmount
    java.math.BigDecimal getAmountInUnits() -> getAmountInUnits
    java.lang.String getCurrency() -> getCurrency
    boolean hasAmount() -> hasAmount
    int hashCode() -> hashCode
    org.json.JSONObject b_() -> b_
    java.lang.String toString() -> toString
    void a(org.json.JSONObject) -> a
    com.scoreloop.client.android.core.model.Money getPreferred(java.util.List,java.util.Locale,java.lang.String) -> getPreferred
    java.lang.Object clone() -> clone
    int compareTo(java.lang.Object) -> compareTo
com.scoreloop.client.android.core.model.MoneyFormatter -> com.scoreloop.client.android.core.model.MoneyFormatter:
    com.scoreloop.client.android.core.model.MoneyFormatter a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String format(com.scoreloop.client.android.core.model.Money) -> format
    com.scoreloop.client.android.core.model.MoneyFormatter getDefaultMoneyFormatter() -> getDefaultMoneyFormatter
    void setDefaultMoneyFormatter(com.scoreloop.client.android.core.model.MoneyFormatter) -> setDefaultMoneyFormatter
    java.lang.String formatMoney(com.scoreloop.client.android.core.model.Money) -> formatMoney
    java.lang.String getNamePlural() -> getNamePlural
    java.lang.String getNameSingular() -> getNameSingular
com.scoreloop.client.android.core.model.Payment -> com.scoreloop.client.android.core.model.Payment:
    java.lang.String a -> a
    java.util.Map c -> c
    java.util.Date d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    com.scoreloop.client.android.core.model.Payment$State h -> h
    java.lang.String i -> i
    java.util.Map c() -> c
    java.util.Date getBookingDate() -> getBookingDate
    java.lang.String a() -> a
    java.lang.String getGameItemIdentifier() -> getGameItemIdentifier
    java.lang.String getPriceCurrency() -> getPriceCurrency
    com.scoreloop.client.android.core.model.Payment$State getState() -> getState
    java.lang.String getTransactionKey() -> getTransactionKey
    boolean isBooked() -> isBooked
    void a(com.scoreloop.client.android.core.model.Entity) -> a
    void a(com.scoreloop.client.android.core.model.PaymentProvider) -> a
    void a(com.scoreloop.client.android.core.model.Price) -> a
    void a(com.scoreloop.client.android.core.model.Payment$State) -> a
    org.json.JSONObject b_() -> b_
    void a(org.json.JSONObject) -> a
com.scoreloop.client.android.core.model.Payment$Credential -> com.scoreloop.client.android.core.model.Payment$Credential:
    void a(org.json.JSONObject) -> a
com.scoreloop.client.android.core.model.Payment$State -> com.scoreloop.client.android.core.model.Payment$State:
    com.scoreloop.client.android.core.model.Payment$State BOOKED -> BOOKED
    com.scoreloop.client.android.core.model.Payment$State CANCELED -> CANCELED
    com.scoreloop.client.android.core.model.Payment$State CREATED -> CREATED
    com.scoreloop.client.android.core.model.Payment$State FAILED -> FAILED
    com.scoreloop.client.android.core.model.Payment$State PENDING -> PENDING
    com.scoreloop.client.android.core.model.Payment$State REFUNDED -> REFUNDED
    java.lang.String a -> a
    com.scoreloop.client.android.core.model.Payment$State[] b -> b
    com.scoreloop.client.android.core.model.Payment$State[] values() -> values
    com.scoreloop.client.android.core.model.Payment$State valueOf(java.lang.String) -> valueOf
    com.scoreloop.client.android.core.model.Payment$State fromJSONString(java.lang.String) -> fromJSONString
com.scoreloop.client.android.core.model.PaymentMethod -> com.scoreloop.client.android.core.model.PaymentMethod:
    com.scoreloop.client.android.core.model.PaymentProvider a -> a
    java.util.List b -> b
    com.scoreloop.client.android.core.model.PaymentMethod a(org.json.JSONObject) -> a
    java.lang.String getIdentifier() -> getIdentifier
    com.scoreloop.client.android.core.model.PaymentProvider getPaymentProvider() -> getPaymentProvider
    java.util.List getPrices() -> getPrices
com.scoreloop.client.android.core.model.PaymentProvider -> com.scoreloop.client.android.core.model.PaymentProvider:
    java.util.Set b -> b
    com.scoreloop.client.android.core.model.Continuation a -> a
    java.util.Set c -> c
    java.util.Set d -> d
    java.util.Set e -> e
    java.util.Set f -> f
    java.util.Map g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    void a(java.lang.String,android.content.Context) -> a
    com.scoreloop.client.android.core.model.PaymentProvider a(java.lang.String) -> a
    com.scoreloop.client.android.core.model.PaymentProvider a(org.json.JSONObject) -> a
    java.util.Set a() -> a
    void a(android.content.Context,java.lang.String) -> a
    void b(android.content.Context,java.lang.String) -> b
    void c(android.content.Context,java.lang.String) -> c
    void d(android.content.Context,java.lang.String) -> d
    void a(android.content.Context) -> a
    boolean controllerSupportsPrepare() -> controllerSupportsPrepare
    java.util.Map b() -> b
    java.lang.String c() -> c
    java.lang.String getImageUrl() -> getImageUrl
    java.lang.String getKind() -> getKind
    java.lang.String d() -> d
    java.lang.String getName() -> getName
    java.lang.String e() -> e
    boolean g() -> g
    void f() -> f
com.scoreloop.client.android.core.model.Price -> com.scoreloop.client.android.core.model.Price:
    java.util.Map a -> a
    boolean b -> b
    java.util.Map c() -> c
    boolean isExternalPrice() -> isExternalPrice
com.scoreloop.client.android.core.model.Range -> com.scoreloop.client.android.core.model.Range:
    int a -> a
    int b -> b
    int getLength() -> getLength
    int getLocation() -> getLocation
    void a(int) -> a
    int a() -> a
    int b() -> b
    java.lang.String toString() -> toString
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
com.scoreloop.client.android.core.model.Ranking -> com.scoreloop.client.android.core.model.Ranking:
    java.lang.Integer a -> a
    com.scoreloop.client.android.core.model.Score b -> b
    java.lang.Integer c -> c
    java.lang.Integer getRank() -> getRank
    com.scoreloop.client.android.core.model.Score getScore() -> getScore
    java.lang.Integer getTotal() -> getTotal
    org.json.JSONObject b_() -> b_
    void a(org.json.JSONObject) -> a
com.scoreloop.client.android.core.model.Score -> com.scoreloop.client.android.core.model.Score:
    java.lang.String c -> c
    java.lang.Integer d -> d
    java.lang.Double e -> e
    java.lang.Integer f -> f
    java.lang.Double g -> g
    java.lang.Integer h -> h
    java.lang.String i -> i
    com.scoreloop.client.android.core.model.User j -> j
    com.scoreloop.client.android.core.model.ContextMap k -> k
    java.lang.String a -> a
    boolean areModesEqual(java.lang.Integer,com.scoreloop.client.android.core.model.Score) -> areModesEqual
    boolean areModesEqual(com.scoreloop.client.android.core.model.Score,com.scoreloop.client.android.core.model.Score) -> areModesEqual
    boolean areModesEqual(java.lang.Integer,java.lang.Integer) -> areModesEqual
    java.lang.String c() -> c
    void a(java.lang.String) -> a
    java.lang.Integer getLevel() -> getLevel
    java.lang.Double getMinorResult() -> getMinorResult
    java.lang.Integer getMode() -> getMode
    boolean hasMode() -> hasMode
    java.lang.Integer getRank() -> getRank
    java.lang.Double getResult() -> getResult
    com.scoreloop.client.android.core.model.User getUser() -> getUser
    void setLevel(java.lang.Integer) -> setLevel
    void setMinorResult(java.lang.Double) -> setMinorResult
    void setMode(java.lang.Integer) -> setMode
    void a(java.lang.Integer) -> a
    void setResult(java.lang.Double) -> setResult
    void a(com.scoreloop.client.android.core.model.User) -> a
    org.json.JSONObject b_() -> b_
    void a(org.json.JSONObject) -> a
    java.lang.String a() -> a
    java.util.Map getContext() -> getContext
    void setContext(java.util.Map) -> setContext
com.scoreloop.client.android.core.model.ScoreFormatter -> com.scoreloop.client.android.core.model.ScoreFormatter:
    java.util.HashMap a -> a
    com.scoreloop.client.android.core.model.ScoreFormatter b -> b
    java.util.regex.Pattern c -> c
    java.util.regex.Pattern d -> d
    java.util.regex.Pattern e -> e
    java.util.HashMap f -> f
    android.util.SparseArray g -> g
    android.util.SparseArray h -> h
    java.lang.String[] getDefinedModesNames(int,int) -> getDefinedModesNames
    java.lang.String formatScore(com.scoreloop.client.android.core.model.Score) -> formatScore
    java.lang.String format(com.scoreloop.client.android.core.model.Score) -> format
    java.lang.String format(com.scoreloop.client.android.core.model.Score,com.scoreloop.client.android.core.model.ScoreFormatter$ScoreFormatKey) -> format
    java.lang.String formatScore(com.scoreloop.client.android.core.model.Score,com.scoreloop.client.android.core.model.ScoreFormatter$ScoreFormatKey) -> formatScore
    java.lang.String a(double) -> a
    java.util.List a(java.lang.String) -> a
    void b(java.lang.String) -> b
    com.scoreloop.client.android.core.model.ScoreFormatter getDefaultScoreFormatter() -> getDefaultScoreFormatter
    void setDefaultScoreFormatter(com.scoreloop.client.android.core.model.ScoreFormatter) -> setDefaultScoreFormatter
com.scoreloop.client.android.core.model.ScoreFormatter$ScoreFormatKey -> com.scoreloop.client.android.core.model.ScoreFormatter$ScoreFormatKey:
    com.scoreloop.client.android.core.model.ScoreFormatter$ScoreFormatKey DefaultFormat -> DefaultFormat
    com.scoreloop.client.android.core.model.ScoreFormatter$ScoreFormatKey ScoresOnlyFormat -> ScoresOnlyFormat
    com.scoreloop.client.android.core.model.ScoreFormatter$ScoreFormatKey LevelAndModeFormat -> LevelAndModeFormat
    com.scoreloop.client.android.core.model.ScoreFormatter$ScoreFormatKey LevelOnlyFormat -> LevelOnlyFormat
    com.scoreloop.client.android.core.model.ScoreFormatter$ScoreFormatKey ModeOnlyFormat -> ModeOnlyFormat
    com.scoreloop.client.android.core.model.ScoreFormatter$ScoreFormatKey NoLevelFormat -> NoLevelFormat
    com.scoreloop.client.android.core.model.ScoreFormatter$ScoreFormatKey ScoresAndLevelFormat -> ScoresAndLevelFormat
    com.scoreloop.client.android.core.model.ScoreFormatter$a a -> a
    com.scoreloop.client.android.core.model.ScoreFormatter$ScoreFormatKey[] b -> b
    com.scoreloop.client.android.core.model.ScoreFormatter$ScoreFormatKey[] values() -> values
    com.scoreloop.client.android.core.model.ScoreFormatter$ScoreFormatKey valueOf(java.lang.String) -> valueOf
    com.scoreloop.client.android.core.model.ScoreFormatter$ScoreFormatKey parse(java.lang.String) -> parse
    com.scoreloop.client.android.core.model.ScoreFormatter$a a() -> a
com.scoreloop.client.android.core.model.ScoreFormatter$a -> com.scoreloop.client.android.core.model.ScoreFormatter$a:
    com.scoreloop.client.android.core.model.ScoreFormatter$a DefaultFormat -> DefaultFormat
    com.scoreloop.client.android.core.model.ScoreFormatter$a LevelAndModeFormat -> LevelAndModeFormat
    com.scoreloop.client.android.core.model.ScoreFormatter$a LevelOnlyFormat -> LevelOnlyFormat
    com.scoreloop.client.android.core.model.ScoreFormatter$a ModeOnlyFormat -> ModeOnlyFormat
    com.scoreloop.client.android.core.model.ScoreFormatter$a NoLevelFormat -> NoLevelFormat
    com.scoreloop.client.android.core.model.ScoreFormatter$a ScoresAndLevelFormat -> ScoresAndLevelFormat
    com.scoreloop.client.android.core.model.ScoreFormatter$a ScoresOnlyFormat -> ScoresOnlyFormat
    com.scoreloop.client.android.core.model.ScoreFormatter$a ResultTimeConversion -> ResultTimeConversion
    com.scoreloop.client.android.core.model.ScoreFormatter$a LevelSymbol -> LevelSymbol
    com.scoreloop.client.android.core.model.ScoreFormatter$a ModeSymbol -> ModeSymbol
    com.scoreloop.client.android.core.model.ScoreFormatter$a ResultSymbol -> ResultSymbol
    com.scoreloop.client.android.core.model.ScoreFormatter$a MinorResultSymbol -> MinorResultSymbol
    com.scoreloop.client.android.core.model.ScoreFormatter$a Separator -> Separator
    com.scoreloop.client.android.core.model.ScoreFormatter$a[] a -> a
    com.scoreloop.client.android.core.model.ScoreFormatter$a[] values() -> values
    com.scoreloop.client.android.core.model.ScoreFormatter$a valueOf(java.lang.String) -> valueOf
    com.scoreloop.client.android.core.model.ScoreFormatter$a parse(java.lang.String) -> parse
com.scoreloop.client.android.core.model.ScoreOrdering -> com.scoreloop.client.android.core.model.ScoreOrdering:
    java.util.List a -> a
    java.util.List a(java.lang.String) -> a
    java.lang.String a(java.util.Map) -> a
com.scoreloop.client.android.core.model.ScoreOrdering$Column -> com.scoreloop.client.android.core.model.ScoreOrdering$Column:
    com.scoreloop.client.android.core.model.ScoreOrdering$Column Result -> Result
    com.scoreloop.client.android.core.model.ScoreOrdering$Column MinorResult -> MinorResult
    com.scoreloop.client.android.core.model.ScoreOrdering$Column Level -> Level
    com.scoreloop.client.android.core.model.ScoreOrdering$Column[] a -> a
    com.scoreloop.client.android.core.model.ScoreOrdering$Column[] values() -> values
    com.scoreloop.client.android.core.model.ScoreOrdering$Column valueOf(java.lang.String) -> valueOf
    com.scoreloop.client.android.core.model.ScoreOrdering$Column a(java.lang.String) -> a
com.scoreloop.client.android.core.model.ScoreOrdering$ColumnOrder -> com.scoreloop.client.android.core.model.ScoreOrdering$ColumnOrder:
    com.scoreloop.client.android.core.model.ScoreOrdering$Column a -> a
    com.scoreloop.client.android.core.model.ScoreOrdering$Order b -> b
com.scoreloop.client.android.core.model.ScoreOrdering$Order -> com.scoreloop.client.android.core.model.ScoreOrdering$Order:
    com.scoreloop.client.android.core.model.ScoreOrdering$Order Ascending -> Ascending
    com.scoreloop.client.android.core.model.ScoreOrdering$Order Descending -> Descending
    java.lang.String a -> a
    com.scoreloop.client.android.core.model.ScoreOrdering$Order[] b -> b
    com.scoreloop.client.android.core.model.ScoreOrdering$Order[] values() -> values
    com.scoreloop.client.android.core.model.ScoreOrdering$Order valueOf(java.lang.String) -> valueOf
    java.lang.String asSql() -> asSql
    com.scoreloop.client.android.core.model.ScoreOrdering$Order a(java.lang.String) -> a
com.scoreloop.client.android.core.model.ScoreSubmitException -> com.scoreloop.client.android.core.model.ScoreSubmitException:
    long serialVersionUID -> serialVersionUID
com.scoreloop.client.android.core.model.ScoreloopNotAccessibleException -> com.scoreloop.client.android.core.model.ScoreloopNotAccessibleException:
    long serialVersionUID -> serialVersionUID
com.scoreloop.client.android.core.model.SearchList -> com.scoreloop.client.android.core.model.SearchList:
    java.lang.String a -> a
    com.scoreloop.client.android.core.model.SearchList c -> c
    java.lang.String d -> d
    com.scoreloop.client.android.core.model.SearchList getBuddiesScoreSearchList() -> getBuddiesScoreSearchList
    com.scoreloop.client.android.core.model.SearchList getDefaultScoreSearchList() -> getDefaultScoreSearchList
    com.scoreloop.client.android.core.model.SearchList getGlobalScoreSearchList() -> getGlobalScoreSearchList
    com.scoreloop.client.android.core.model.SearchList getLocalScoreSearchList() -> getLocalScoreSearchList
    com.scoreloop.client.android.core.model.SearchList a(java.lang.String) -> a
    com.scoreloop.client.android.core.model.SearchList getTwentyFourHourScoreSearchList() -> getTwentyFourHourScoreSearchList
    com.scoreloop.client.android.core.model.SearchList getUserCountryLocationScoreSearchList() -> getUserCountryLocationScoreSearchList
    com.scoreloop.client.android.core.model.SearchList getUserNationalityScoreSearchList() -> getUserNationalityScoreSearchList
    java.lang.String a() -> a
    java.lang.String getName() -> getName
    void setName(java.lang.String) -> setName
    org.json.JSONObject b_() -> b_
    java.lang.String toString() -> toString
    void a(org.json.JSONObject) -> a
com.scoreloop.client.android.core.model.Session -> com.scoreloop.client.android.core.model.Session:
    com.scoreloop.client.android.core.model.Session a -> a
    android.content.Context b -> b
    com.scoreloop.client.android.core.model.Challenge c -> c
    java.util.List d -> d
    com.scoreloop.client.android.core.model.TermsOfService e -> e
    com.scoreloop.client.android.core.model.Device f -> f
    com.scoreloop.client.android.core.model.EntityFactory g -> g
    com.scoreloop.client.android.core.model.Game h -> h
    long i -> i
    com.scoreloop.client.android.core.model.SessionObserver j -> j
    java.lang.String k -> k
    com.scoreloop.client.android.core.server.Server l -> l
    java.lang.Object[] m -> m
    com.scoreloop.client.android.core.model.Session$State n -> n
    long o -> o
    com.scoreloop.client.android.core.model.User p -> p
    com.scoreloop.client.android.core.model.TermsOfService q -> q
    boolean r -> r
    boolean s -> s
    int t -> t
    boolean u -> u
    java.util.Date v -> v
    java.lang.String w -> w
    com.scoreloop.client.android.core.model.Session getCurrentSession() -> getCurrentSession
    void a(com.scoreloop.client.android.core.model.Session) -> a
    void a() -> a
    void a(java.lang.Boolean) -> a
    android.content.Context b() -> b
    com.scoreloop.client.android.core.model.Money getBalance() -> getBalance
    com.scoreloop.client.android.core.model.Challenge getChallenge() -> getChallenge
    java.util.List getChallengeStakes() -> getChallengeStakes
    com.scoreloop.client.android.core.model.TermsOfService c() -> c
    com.scoreloop.client.android.core.model.Device d() -> d
    com.scoreloop.client.android.core.model.EntityFactory getEntityFactory() -> getEntityFactory
    com.scoreloop.client.android.core.model.Game getGame() -> getGame
    java.lang.String getScoreloopAppDownloadUrl() -> getScoreloopAppDownloadUrl
    java.util.List getScoreSearchLists() -> getScoreSearchLists
    com.scoreloop.client.android.core.server.Server e() -> e
    java.lang.Object a(int) -> a
    com.scoreloop.client.android.core.model.Session$State f() -> f
    com.scoreloop.client.android.core.model.User getUser() -> getUser
    com.scoreloop.client.android.core.model.TermsOfService getUsersTermsOfService() -> getUsersTermsOfService
    boolean isAuthenticated() -> isAuthenticated
    boolean isOwnedByUser(com.scoreloop.client.android.core.model.User) -> isOwnedByUser
    void a(com.scoreloop.client.android.core.model.TermsOfService) -> a
    void g() -> g
    void a(android.content.Context) -> a
    void setChallenge(com.scoreloop.client.android.core.model.Challenge) -> setChallenge
    void a(java.util.List) -> a
    void a(com.scoreloop.client.android.core.model.Game) -> a
    void a(int,java.lang.Object) -> a
    void a(java.lang.String) -> a
    java.lang.String h() -> h
    void a(com.scoreloop.client.android.core.model.Session$State) -> a
    boolean i() -> i
    void a(org.json.JSONObject) -> a
    boolean j() -> j
    void a(boolean) -> a
    boolean k() -> k
    void b(boolean) -> b
    int l() -> l
    boolean m() -> m
    void b(int) -> b
    boolean n() -> n
    void c(boolean) -> c
    java.util.Date o() -> o
    void a(java.util.Date) -> a
com.scoreloop.client.android.core.model.Session$State -> com.scoreloop.client.android.core.model.Session$State:
    com.scoreloop.client.android.core.model.Session$State AUTHENTICATED -> AUTHENTICATED
    com.scoreloop.client.android.core.model.Session$State AUTHENTICATING -> AUTHENTICATING
    com.scoreloop.client.android.core.model.Session$State DEVICE_KNOWN -> DEVICE_KNOWN
    com.scoreloop.client.android.core.model.Session$State DEVICE_VERIFIED -> DEVICE_VERIFIED
    com.scoreloop.client.android.core.model.Session$State FAILED -> FAILED
    com.scoreloop.client.android.core.model.Session$State INITIAL -> INITIAL
    com.scoreloop.client.android.core.model.Session$State TIMEOUT -> TIMEOUT
    com.scoreloop.client.android.core.model.Session$State[] a -> a
    com.scoreloop.client.android.core.model.Session$State[] values() -> values
    com.scoreloop.client.android.core.model.Session$State valueOf(java.lang.String) -> valueOf
com.scoreloop.client.android.core.model.SessionObserver -> com.scoreloop.client.android.core.model.SessionObserver:
    void a(com.scoreloop.client.android.core.model.Session,java.lang.Boolean) -> a
    boolean a(com.scoreloop.client.android.core.model.Session) -> a
com.scoreloop.client.android.core.model.SharedPreferencesAchievementsStore -> com.scoreloop.client.android.core.model.SharedPreferencesAchievementsStore:
    android.content.Context a -> a
    java.lang.String b -> b
    com.scoreloop.client.android.core.util.Cryptifier c -> c
    void c() -> c
    boolean a() -> a
    java.lang.String d() -> d
    java.lang.String e() -> e
    void a(com.scoreloop.client.android.core.model.Achievement) -> a
    java.lang.String b(com.scoreloop.client.android.core.model.Achievement) -> b
    com.scoreloop.client.android.core.model.Achievement a(com.scoreloop.client.android.core.model.Award) -> a
    com.scoreloop.client.android.core.model.Achievement a(java.lang.String,com.scoreloop.client.android.core.model.Award) -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(java.lang.String,java.lang.String) -> a
    void b() -> b
com.scoreloop.client.android.core.model.SimpleEntityFactory -> com.scoreloop.client.android.core.model.SimpleEntityFactory:
    java.util.Map a -> a
    com.scoreloop.client.android.core.model.Entity createEntity(java.lang.String,java.lang.String) -> createEntity
    void a(com.scoreloop.client.android.core.model.Entity) -> a
com.scoreloop.client.android.core.model.SocialProvider -> com.scoreloop.client.android.core.model.SocialProvider:
    java.lang.String FACEBOOK_IDENTIFIER -> FACEBOOK_IDENTIFIER
    java.lang.String TWITTER_IDENTIFIER -> TWITTER_IDENTIFIER
    java.util.List a -> a
    com.scoreloop.client.android.core.model.SocialProvider getSocialProviderForIdentifier(java.lang.String) -> getSocialProviderForIdentifier
    java.util.List getSupportedProviders() -> getSupportedProviders
    void a(com.scoreloop.client.android.core.model.User,org.json.JSONObject) -> a
    void b(com.scoreloop.client.android.core.model.User,org.json.JSONObject) -> b
    void c(com.scoreloop.client.android.core.model.User,org.json.JSONObject) -> c
    java.lang.Class b() -> b
    java.lang.String a() -> a
    java.lang.String getIdentifier() -> getIdentifier
    java.lang.String getName() -> getName
    java.lang.Integer getVersion() -> getVersion
    boolean isUserConnected(com.scoreloop.client.android.core.model.User) -> isUserConnected
    void a(com.scoreloop.client.android.core.model.User,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(com.scoreloop.client.android.core.model.User) -> a
    void d(com.scoreloop.client.android.core.model.User,org.json.JSONObject) -> d
    boolean a(com.scoreloop.client.android.core.model.Session) -> a
    java.lang.String[] a(java.lang.Object[]) -> a
    int c() -> c
com.scoreloop.client.android.core.model.StandardTermsOfServiceStore -> com.scoreloop.client.android.core.model.StandardTermsOfServiceStore:
    java.lang.String a() -> a
    java.lang.String b() -> b
    void a(com.scoreloop.client.android.core.model.TermsOfService) -> a
    com.scoreloop.client.android.core.util.JSONSerializable c() -> c
com.scoreloop.client.android.core.model.TermsOfService -> com.scoreloop.client.android.core.model.TermsOfService:
    java.util.Date a -> a
    com.scoreloop.client.android.core.model.TermsOfService$Status b -> b
    java.lang.Integer c -> c
    java.util.Date b() -> b
    com.scoreloop.client.android.core.model.TermsOfService$Status getStatus() -> getStatus
    java.lang.Integer c() -> c
    void a(java.util.Date) -> a
    void a(com.scoreloop.client.android.core.model.TermsOfService$Status) -> a
    void a(java.lang.Integer) -> a
    org.json.JSONObject b_() -> b_
    void a(org.json.JSONObject) -> a
com.scoreloop.client.android.core.model.TermsOfService$Status -> com.scoreloop.client.android.core.model.TermsOfService$Status:
    com.scoreloop.client.android.core.model.TermsOfService$Status ACCEPTED -> ACCEPTED
    com.scoreloop.client.android.core.model.TermsOfService$Status OUTDATED -> OUTDATED
    com.scoreloop.client.android.core.model.TermsOfService$Status PENDING -> PENDING
    com.scoreloop.client.android.core.model.TermsOfService$Status REJECTED -> REJECTED
    int a -> a
    com.scoreloop.client.android.core.model.TermsOfService$Status[] b -> b
    com.scoreloop.client.android.core.model.TermsOfService$Status[] values() -> values
    com.scoreloop.client.android.core.model.TermsOfService$Status valueOf(java.lang.String) -> valueOf
    com.scoreloop.client.android.core.model.TermsOfService$Status a(int) -> a
com.scoreloop.client.android.core.model.TermsOfServiceStore -> com.scoreloop.client.android.core.model.TermsOfServiceStore:
    void a(com.scoreloop.client.android.core.model.TermsOfService) -> a
com.scoreloop.client.android.core.model.User -> com.scoreloop.client.android.core.model.User:
    java.util.Map c -> c
    java.lang.String a -> a
    boolean d -> d
    java.lang.Integer e -> e
    java.lang.String f -> f
    java.lang.Integer g -> g
    java.util.List h -> h
    com.scoreloop.client.android.core.model.ContextMap i -> i
    java.lang.Long j -> j
    com.scoreloop.client.android.core.model.User$Details k -> k
    java.lang.String l -> l
    boolean m -> m
    java.lang.String n -> n
    java.lang.Integer o -> o
    java.lang.Integer p -> p
    java.lang.String q -> q
    java.lang.String r -> r
    java.lang.String s -> s
    java.lang.String t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    java.util.List w -> w
    java.util.Map x -> x
    com.scoreloop.client.android.core.model.User$a y -> y
    void a(java.lang.Object) -> a
    void assignImage(com.scoreloop.client.android.core.model.Image,com.scoreloop.client.android.core.model.Continuation) -> assignImage
    boolean equals(java.lang.Object) -> equals
    com.scoreloop.client.android.core.model.Money c() -> c
    java.lang.Integer getBuddiesCounter() -> getBuddiesCounter
    java.util.List getBuddyUsers() -> getBuddyUsers
    java.util.Map getContext() -> getContext
    java.lang.Long d() -> d
    com.scoreloop.client.android.core.model.User$Details getDetail() -> getDetail
    java.lang.String e() -> e
    java.lang.String getDisplayName() -> getDisplayName
    java.lang.String getEmailAddress() -> getEmailAddress
    java.lang.String a() -> a
    java.lang.Integer getGamesCounter() -> getGamesCounter
    java.lang.Integer getGlobalAchievementsCounter() -> getGlobalAchievementsCounter
    com.scoreloop.client.android.core.model.ImageSource getImageSource() -> getImageSource
    java.lang.String getImageUrl() -> getImageUrl
    java.util.Date getLastActiveAt() -> getLastActiveAt
    com.scoreloop.client.android.core.model.Activity getLastActivity() -> getLastActivity
    java.lang.String getLogin() -> getLogin
    java.util.List f() -> f
    org.json.JSONObject a(java.lang.String) -> a
    int hashCode() -> hashCode
    boolean c(java.lang.String) -> c
    boolean isActive() -> isActive
    boolean isAnonymous() -> isAnonymous
    boolean isAuthenticated() -> isAuthenticated
    boolean isChallengable() -> isChallengable
    boolean isPassive() -> isPassive
    boolean isPending() -> isPending
    void g() -> g
    void setContext(java.util.Map) -> setContext
    void a(java.lang.Long) -> a
    void d(java.lang.String) -> d
    void setEmailAddress(java.lang.String) -> setEmailAddress
    void b(java.lang.String) -> b
    void setImageSource(com.scoreloop.client.android.core.model.ImageSource) -> setImageSource
    void setImageSource(java.lang.String) -> setImageSource
    void setLogin(java.lang.String) -> setLogin
    void setNationality(java.lang.String) -> setNationality
    void a(org.json.JSONObject,java.lang.String) -> a
    org.json.JSONObject b_() -> b_
    void a(org.json.JSONObject) -> a
    void b(org.json.JSONObject) -> b
    java.lang.String a(com.scoreloop.client.android.core.model.User,java.lang.String) -> a
    java.lang.String b(com.scoreloop.client.android.core.model.User,java.lang.String) -> b
    java.lang.String c(com.scoreloop.client.android.core.model.User,java.lang.String) -> c
com.scoreloop.client.android.core.model.User$1 -> com.scoreloop.client.android.core.model.User$1:
    com.scoreloop.client.android.core.model.Image a -> a
    com.scoreloop.client.android.core.model.Continuation b -> b
    com.scoreloop.client.android.core.model.User c -> c
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.scoreloop.client.android.core.model.User$Details -> com.scoreloop.client.android.core.model.User$Details:
    java.lang.Integer a -> a
    java.lang.Integer b -> b
    java.lang.Double c -> c
    java.lang.Integer getChallengesLost() -> getChallengesLost
    java.lang.Integer getChallengesWon() -> getChallengesWon
    java.lang.Double getWinningProbability() -> getWinningProbability
    void a(org.json.JSONObject) -> a
com.scoreloop.client.android.core.model.User$a -> com.scoreloop.client.android.core.model.User$a:
    com.scoreloop.client.android.core.model.User$a active -> active
    com.scoreloop.client.android.core.model.User$a anonymous -> anonymous
    com.scoreloop.client.android.core.model.User$a deleted -> deleted
    com.scoreloop.client.android.core.model.User$a passive -> passive
    com.scoreloop.client.android.core.model.User$a pending -> pending
    com.scoreloop.client.android.core.model.User$a suspended -> suspended
    com.scoreloop.client.android.core.model.User$a[] a -> a
    com.scoreloop.client.android.core.model.User$a[] values() -> values
    com.scoreloop.client.android.core.model.User$a valueOf(java.lang.String) -> valueOf
com.scoreloop.client.android.core.model.a -> com.scoreloop.client.android.core.model.a:
    java.lang.String[] a -> a
    java.lang.String[] b -> b
    android.content.Context c -> c
    java.lang.String b() -> b
    com.scoreloop.client.android.core.model.DeviceUuid a() -> a
com.scoreloop.client.android.core.model.b -> com.scoreloop.client.android.core.model.b:
    java.lang.String getName() -> getName
com.scoreloop.client.android.core.model.c -> com.scoreloop.client.android.core.model.c:
    java.lang.String getName() -> getName
com.scoreloop.client.android.core.paymentprovider.StandardPaymentProvider -> com.scoreloop.client.android.core.paymentprovider.StandardPaymentProvider:
    void a(android.content.Context) -> a
    java.lang.String g() -> g
    boolean b(android.content.Context) -> b
com.scoreloop.client.android.core.paymentprovider.StandardPaymentProviderController -> com.scoreloop.client.android.core.paymentprovider.StandardPaymentProviderController:
    android.os.Handler a -> a
    com.scoreloop.client.android.core.controller.PaymentController b -> b
    int c -> c
    int d -> d
    java.lang.Runnable e -> e
    void a() -> a
    void a(com.scoreloop.client.android.core.paymentprovider.StandardPaymentProviderController$Status,java.lang.Exception) -> a
    android.os.Handler e() -> e
    com.scoreloop.client.android.core.model.Payment getPayment() -> getPayment
    void h() -> h
    void requestControllerDidFail(com.scoreloop.client.android.core.controller.RequestController,java.lang.Exception) -> requestControllerDidFail
    void requestControllerDidReceiveResponse(com.scoreloop.client.android.core.controller.RequestController) -> requestControllerDidReceiveResponse
    void f() -> f
    boolean g() -> g
    int a(com.scoreloop.client.android.core.paymentprovider.StandardPaymentProviderController) -> a
    com.scoreloop.client.android.core.controller.PaymentController b(com.scoreloop.client.android.core.paymentprovider.StandardPaymentProviderController) -> b
com.scoreloop.client.android.core.paymentprovider.StandardPaymentProviderController$1 -> com.scoreloop.client.android.core.paymentprovider.StandardPaymentProviderController$1:
    int[] a -> a
    int[] b -> b
com.scoreloop.client.android.core.paymentprovider.StandardPaymentProviderController$Status -> com.scoreloop.client.android.core.paymentprovider.StandardPaymentProviderController$Status:
    com.scoreloop.client.android.core.paymentprovider.StandardPaymentProviderController$Status CANCELED -> CANCELED
    com.scoreloop.client.android.core.paymentprovider.StandardPaymentProviderController$Status FAILED -> FAILED
    com.scoreloop.client.android.core.paymentprovider.StandardPaymentProviderController$Status OK -> OK
    com.scoreloop.client.android.core.paymentprovider.StandardPaymentProviderController$Status PAYMENT_BOOKED -> PAYMENT_BOOKED
    com.scoreloop.client.android.core.paymentprovider.StandardPaymentProviderController$Status PENDING -> PENDING
    com.scoreloop.client.android.core.paymentprovider.StandardPaymentProviderController$Status[] a -> a
    com.scoreloop.client.android.core.paymentprovider.StandardPaymentProviderController$Status[] values() -> values
    com.scoreloop.client.android.core.paymentprovider.StandardPaymentProviderController$Status valueOf(java.lang.String) -> valueOf
com.scoreloop.client.android.core.paymentprovider.StandardPendingPaymentProcessorModule -> com.scoreloop.client.android.core.paymentprovider.StandardPendingPaymentProcessorModule:
    android.os.Handler a -> a
    boolean b -> b
    com.scoreloop.client.android.core.controller.PaymentController c -> c
    java.util.List d -> d
    java.util.Queue e -> e
    com.scoreloop.client.android.core.model.Session f -> f
    void a(com.scoreloop.client.android.core.model.Payment) -> a
    void b() -> b
    void c() -> c
    void requestControllerDidFail(com.scoreloop.client.android.core.controller.RequestController,java.lang.Exception) -> requestControllerDidFail
    void requestControllerDidReceiveResponse(com.scoreloop.client.android.core.controller.RequestController) -> requestControllerDidReceiveResponse
    void a(com.scoreloop.client.android.core.model.Session) -> a
    void a() -> a
    void a(com.scoreloop.client.android.core.paymentprovider.StandardPendingPaymentProcessorModule) -> a
com.scoreloop.client.android.core.paymentprovider.StandardPendingPaymentProcessorModule$1 -> com.scoreloop.client.android.core.paymentprovider.StandardPendingPaymentProcessorModule$1:
    com.scoreloop.client.android.core.paymentprovider.StandardPendingPaymentProcessorModule a -> a
    void run() -> run
com.scoreloop.client.android.core.paymentprovider.a -> com.scoreloop.client.android.core.paymentprovider.a:
    com.scoreloop.client.android.core.paymentprovider.StandardPaymentProviderController a -> a
    void run() -> run
com.scoreloop.client.android.core.paymentprovider.fortumo.FortumoPaymentProvider -> com.scoreloop.client.android.core.paymentprovider.fortumo.FortumoPaymentProvider:
    void a(android.content.Context) -> a
    java.lang.String c() -> c
    java.lang.String g() -> g
    java.lang.String e() -> e
    void a(com.scoreloop.client.android.core.paymentprovider.fortumo.FortumoPaymentProvider) -> a
com.scoreloop.client.android.core.paymentprovider.fortumo.FortumoPaymentProvider$1 -> com.scoreloop.client.android.core.paymentprovider.fortumo.FortumoPaymentProvider$1:
    android.content.Context a -> a
    com.scoreloop.client.android.core.paymentprovider.fortumo.FortumoPaymentProvider b -> b
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.scoreloop.client.android.core.paymentprovider.fortumo.FortumoPaymentProviderController -> com.scoreloop.client.android.core.paymentprovider.fortumo.FortumoPaymentProviderController:
    java.lang.String h() -> h
    java.lang.String i() -> i
    void a(int,android.content.Intent) -> a
    void c_() -> c_
    void f() -> f
    boolean g() -> g
com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingDelegateManager -> com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingDelegateManager:
    java.util.Stack a -> a
    void a(com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingDelegateManager$Delegate) -> a
    void a(com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingDelegateManager$a) -> a
    void a(boolean) -> a
    void a(android.app.PendingIntent,android.content.Intent) -> a
    void a(com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingOrder,java.lang.String,java.lang.String) -> a
    void a(java.lang.String,com.scoreloop.client.android.core.paymentprovider.googlemarket.Consts$ResponseCode) -> a
    void b(com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingDelegateManager$Delegate) -> b
com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingDelegateManager$1 -> com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingDelegateManager$1:
    boolean a -> a
    boolean a(com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingDelegateManager$Delegate) -> a
com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingDelegateManager$2 -> com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingDelegateManager$2:
    android.app.PendingIntent a -> a
    android.content.Intent b -> b
    boolean a(com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingDelegateManager$Delegate) -> a
com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingDelegateManager$3 -> com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingDelegateManager$3:
    com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingOrder a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    boolean a(com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingDelegateManager$Delegate) -> a
com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingDelegateManager$4 -> com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingDelegateManager$4:
    java.lang.String a -> a
    com.scoreloop.client.android.core.paymentprovider.googlemarket.Consts$ResponseCode b -> b
    boolean a(com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingDelegateManager$Delegate) -> a
com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingDelegateManager$Delegate -> com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingDelegateManager$Delegate:
    boolean a(boolean) -> a
    boolean a(android.app.PendingIntent,android.content.Intent) -> a
    boolean a(com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingOrder,java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String,com.scoreloop.client.android.core.paymentprovider.googlemarket.Consts$ResponseCode) -> a
com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingDelegateManager$a -> com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingDelegateManager$a:
    boolean a(com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingDelegateManager$Delegate) -> a
com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingNonceManager -> com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingNonceManager:
    java.security.SecureRandom a -> a
    java.util.HashSet b -> b
    long a() -> a
    boolean a(java.lang.String) -> a
    long b(java.lang.String) -> b
    void a(long) -> a
com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingOrder -> com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingOrder:
    java.lang.String a -> a
    java.lang.String b -> b
    com.scoreloop.client.android.core.model.Payment c -> c
    com.scoreloop.client.android.core.paymentprovider.googlemarket.Consts$PurchaseState d -> d
    java.util.List a(java.lang.String) -> a
    java.lang.String a() -> a
    java.lang.String b() -> b
    com.scoreloop.client.android.core.model.Payment c() -> c
    com.scoreloop.client.android.core.paymentprovider.googlemarket.Consts$PurchaseState d() -> d
    void a(com.scoreloop.client.android.core.model.Payment) -> a
com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingReceiver -> com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingService -> com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingService:
    java.util.LinkedList a -> a
    java.util.HashMap b -> b
    com.a.a.a.a c -> c
    boolean g() -> g
    boolean a() -> a
    boolean a(java.lang.String) -> a
    boolean a(int,java.lang.String[]) -> a
    android.os.IBinder onBind(android.content.Intent) -> onBind
    void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    void onStart(android.content.Intent,int) -> onStart
    void a(java.lang.String,java.lang.String) -> a
    void a(android.content.Context) -> a
    void b() -> b
    com.a.a.a.a c() -> c
    com.a.a.a.a d() -> d
    java.util.HashMap e() -> e
    boolean a(com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingService) -> a
    java.util.LinkedList f() -> f
com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingService$BillingException -> com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingService$BillingException:
    long serialVersionUID -> serialVersionUID
com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingService$a -> com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingService$a:
    long a -> a
    int b -> b
    com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingService c -> c
    int a() -> a
    void a(android.os.Bundle) -> a
    android.os.Bundle a(java.lang.String) -> a
    void a(android.os.RemoteException) -> a
    void a(com.scoreloop.client.android.core.paymentprovider.googlemarket.Consts$ResponseCode) -> a
    long b() -> b
    boolean c() -> c
    boolean d() -> d
com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingService$b -> com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingService$b:
    long b() -> b
com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingService$c -> com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingService$c:
    java.lang.String[] a -> a
    long b() -> b
com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingService$d -> com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingService$d:
    long a -> a
    java.lang.String[] b -> b
    void a(android.os.RemoteException) -> a
    long b() -> b
com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingService$e -> com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingService$e:
    java.lang.String a -> a
    java.lang.String b -> b
    void a(com.scoreloop.client.android.core.paymentprovider.googlemarket.Consts$ResponseCode) -> a
    long b() -> b
com.scoreloop.client.android.core.paymentprovider.googlemarket.Consts -> com.scoreloop.client.android.core.paymentprovider.googlemarket.Consts:
    long a -> a
com.scoreloop.client.android.core.paymentprovider.googlemarket.Consts$PurchaseState -> com.scoreloop.client.android.core.paymentprovider.googlemarket.Consts$PurchaseState:
    com.scoreloop.client.android.core.paymentprovider.googlemarket.Consts$PurchaseState PURCHASED -> PURCHASED
    com.scoreloop.client.android.core.paymentprovider.googlemarket.Consts$PurchaseState CANCELED -> CANCELED
    com.scoreloop.client.android.core.paymentprovider.googlemarket.Consts$PurchaseState REFUNDED -> REFUNDED
    com.scoreloop.client.android.core.paymentprovider.googlemarket.Consts$PurchaseState[] a -> a
    com.scoreloop.client.android.core.paymentprovider.googlemarket.Consts$PurchaseState[] values() -> values
    com.scoreloop.client.android.core.paymentprovider.googlemarket.Consts$PurchaseState valueOf(java.lang.String) -> valueOf
    com.scoreloop.client.android.core.paymentprovider.googlemarket.Consts$PurchaseState valueOf(int) -> valueOf
com.scoreloop.client.android.core.paymentprovider.googlemarket.Consts$ResponseCode -> com.scoreloop.client.android.core.paymentprovider.googlemarket.Consts$ResponseCode:
    com.scoreloop.client.android.core.paymentprovider.googlemarket.Consts$ResponseCode RESULT_OK -> RESULT_OK
    com.scoreloop.client.android.core.paymentprovider.googlemarket.Consts$ResponseCode RESULT_USER_CANCELED -> RESULT_USER_CANCELED
    com.scoreloop.client.android.core.paymentprovider.googlemarket.Consts$ResponseCode RESULT_SERVICE_UNAVAILABLE -> RESULT_SERVICE_UNAVAILABLE
    com.scoreloop.client.android.core.paymentprovider.googlemarket.Consts$ResponseCode RESULT_BILLING_UNAVAILABLE -> RESULT_BILLING_UNAVAILABLE
    com.scoreloop.client.android.core.paymentprovider.googlemarket.Consts$ResponseCode RESULT_ITEM_UNAVAILABLE -> RESULT_ITEM_UNAVAILABLE
    com.scoreloop.client.android.core.paymentprovider.googlemarket.Consts$ResponseCode RESULT_DEVELOPER_ERROR -> RESULT_DEVELOPER_ERROR
    com.scoreloop.client.android.core.paymentprovider.googlemarket.Consts$ResponseCode RESULT_ERROR -> RESULT_ERROR
    com.scoreloop.client.android.core.paymentprovider.googlemarket.Consts$ResponseCode[] a -> a
    com.scoreloop.client.android.core.paymentprovider.googlemarket.Consts$ResponseCode[] values() -> values
    com.scoreloop.client.android.core.paymentprovider.googlemarket.Consts$ResponseCode valueOf(java.lang.String) -> valueOf
    com.scoreloop.client.android.core.paymentprovider.googlemarket.Consts$ResponseCode valueOf(int) -> valueOf
com.scoreloop.client.android.core.paymentprovider.googlemarket.GoogleMarketPaymentProvider -> com.scoreloop.client.android.core.paymentprovider.googlemarket.GoogleMarketPaymentProvider:
    com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingService b -> b
    void a(android.content.Context) -> a
    boolean controllerSupportsPrepare() -> controllerSupportsPrepare
    void g() -> g
    java.lang.String c() -> c
    java.lang.String e() -> e
    boolean a(boolean) -> a
    boolean a(android.app.PendingIntent,android.content.Intent) -> a
    boolean a(com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingOrder,java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String,com.scoreloop.client.android.core.paymentprovider.googlemarket.Consts$ResponseCode) -> a
com.scoreloop.client.android.core.paymentprovider.googlemarket.GoogleMarketPaymentProviderController -> com.scoreloop.client.android.core.paymentprovider.googlemarket.GoogleMarketPaymentProviderController:
    java.lang.Class[] a -> a
    com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingService b -> b
    android.os.Handler c -> c
    com.scoreloop.client.android.core.controller.PaymentController d -> d
    java.lang.reflect.Method e -> e
    java.lang.Object[] f -> f
    void a() -> a
    void e() -> e
    com.scoreloop.client.android.core.model.Payment getPayment() -> getPayment
    java.lang.String f() -> f
    boolean a(boolean) -> a
    boolean a(android.app.PendingIntent,android.content.Intent) -> a
    boolean a(com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingOrder,java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String,com.scoreloop.client.android.core.paymentprovider.googlemarket.Consts$ResponseCode) -> a
    void prepare() -> prepare
    void run() -> run
    com.scoreloop.client.android.core.controller.PaymentProviderControllerObserver a(com.scoreloop.client.android.core.paymentprovider.googlemarket.GoogleMarketPaymentProviderController) -> a
    java.lang.String b(com.scoreloop.client.android.core.paymentprovider.googlemarket.GoogleMarketPaymentProviderController) -> b
    java.lang.String c(com.scoreloop.client.android.core.paymentprovider.googlemarket.GoogleMarketPaymentProviderController) -> c
    com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingService d(com.scoreloop.client.android.core.paymentprovider.googlemarket.GoogleMarketPaymentProviderController) -> d
    com.scoreloop.client.android.core.controller.PaymentProviderControllerObserver e(com.scoreloop.client.android.core.paymentprovider.googlemarket.GoogleMarketPaymentProviderController) -> e
    com.scoreloop.client.android.core.model.Session f(com.scoreloop.client.android.core.paymentprovider.googlemarket.GoogleMarketPaymentProviderController) -> f
    com.scoreloop.client.android.core.controller.PaymentProviderControllerObserver g(com.scoreloop.client.android.core.paymentprovider.googlemarket.GoogleMarketPaymentProviderController) -> g
    com.scoreloop.client.android.core.controller.PaymentProviderControllerObserver h(com.scoreloop.client.android.core.paymentprovider.googlemarket.GoogleMarketPaymentProviderController) -> h
    com.scoreloop.client.android.core.controller.PaymentProviderControllerObserver i(com.scoreloop.client.android.core.paymentprovider.googlemarket.GoogleMarketPaymentProviderController) -> i
    com.scoreloop.client.android.core.model.Session j(com.scoreloop.client.android.core.paymentprovider.googlemarket.GoogleMarketPaymentProviderController) -> j
    com.scoreloop.client.android.core.controller.PaymentProviderControllerObserver k(com.scoreloop.client.android.core.paymentprovider.googlemarket.GoogleMarketPaymentProviderController) -> k
com.scoreloop.client.android.core.paymentprovider.googlemarket.GoogleMarketPaymentProviderController$1 -> com.scoreloop.client.android.core.paymentprovider.googlemarket.GoogleMarketPaymentProviderController$1:
    com.scoreloop.client.android.core.paymentprovider.googlemarket.GoogleMarketPaymentProviderController a -> a
    void requestControllerDidFail(com.scoreloop.client.android.core.controller.RequestController,java.lang.Exception) -> requestControllerDidFail
    void requestControllerDidReceiveResponse(com.scoreloop.client.android.core.controller.RequestController) -> requestControllerDidReceiveResponse
com.scoreloop.client.android.core.paymentprovider.googlemarket.GoogleMarketPaymentProviderController$2 -> com.scoreloop.client.android.core.paymentprovider.googlemarket.GoogleMarketPaymentProviderController$2:
    com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingOrder a -> a
    com.scoreloop.client.android.core.paymentprovider.googlemarket.GoogleMarketPaymentProviderController b -> b
    void withValue(java.lang.Object,java.lang.Exception) -> withValue
com.scoreloop.client.android.core.paymentprovider.googlemarket.GoogleMarketPaymentUtil -> com.scoreloop.client.android.core.paymentprovider.googlemarket.GoogleMarketPaymentUtil:
    void a(com.scoreloop.client.android.core.model.Session,com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingOrder,java.lang.String,java.lang.String,com.scoreloop.client.android.core.model.Continuation) -> a
com.scoreloop.client.android.core.paymentprovider.googlemarket.GoogleMarketPaymentUtil$1 -> com.scoreloop.client.android.core.paymentprovider.googlemarket.GoogleMarketPaymentUtil$1:
    com.scoreloop.client.android.core.model.Session b -> b
    com.scoreloop.client.android.core.model.Continuation a -> a
    com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingOrder c -> c
    com.scoreloop.client.android.core.paymentprovider.googlemarket.GoogleMarketPaymentUtil$a d -> d
    void requestControllerDidReceiveResponse(com.scoreloop.client.android.core.controller.RequestController) -> requestControllerDidReceiveResponse
    void requestControllerDidFail(com.scoreloop.client.android.core.controller.RequestController,java.lang.Exception) -> requestControllerDidFail
com.scoreloop.client.android.core.paymentprovider.googlemarket.GoogleMarketPaymentUtil$1$1 -> com.scoreloop.client.android.core.paymentprovider.googlemarket.GoogleMarketPaymentUtil$1$1:
    com.scoreloop.client.android.core.paymentprovider.googlemarket.GoogleMarketPaymentUtil$1 a -> a
    void requestControllerDidFail(com.scoreloop.client.android.core.controller.RequestController,java.lang.Exception) -> requestControllerDidFail
    void requestControllerDidReceiveResponse(com.scoreloop.client.android.core.controller.RequestController) -> requestControllerDidReceiveResponse
com.scoreloop.client.android.core.paymentprovider.googlemarket.GoogleMarketPaymentUtil$a -> com.scoreloop.client.android.core.paymentprovider.googlemarket.GoogleMarketPaymentUtil$a:
    java.lang.String a -> a
    java.lang.String b -> b
    void a(org.json.JSONObject) -> a
com.scoreloop.client.android.core.paymentprovider.googlemarket.GoogleMarketPendingPaymentProcessorModule -> com.scoreloop.client.android.core.paymentprovider.googlemarket.GoogleMarketPendingPaymentProcessorModule:
    com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingService a -> a
    java.util.List b -> b
    com.scoreloop.client.android.core.model.Session c -> c
    void a(com.scoreloop.client.android.core.model.Payment) -> a
    void a(java.lang.Object) -> a
    boolean a(boolean) -> a
    boolean a(android.app.PendingIntent,android.content.Intent) -> a
    boolean a(com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingOrder,java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String,com.scoreloop.client.android.core.paymentprovider.googlemarket.Consts$ResponseCode) -> a
    void a(com.scoreloop.client.android.core.model.Session) -> a
    void a() -> a
com.scoreloop.client.android.core.paymentprovider.googlemarket.GoogleMarketPendingPaymentProcessorModule$1 -> com.scoreloop.client.android.core.paymentprovider.googlemarket.GoogleMarketPendingPaymentProcessorModule$1:
    com.scoreloop.client.android.core.paymentprovider.googlemarket.BillingOrder a -> a
    com.scoreloop.client.android.core.paymentprovider.googlemarket.GoogleMarketPendingPaymentProcessorModule b -> b
    void withValue(java.lang.Object,java.lang.Exception) -> withValue
com.scoreloop.client.android.core.paymentprovider.paypalx.PayPalXPaymentProvider -> com.scoreloop.client.android.core.paymentprovider.paypalx.PayPalXPaymentProvider:
    boolean controllerSupportsPrepare() -> controllerSupportsPrepare
    boolean b(android.content.Context) -> b
    java.lang.String c() -> c
    java.lang.String g() -> g
    java.lang.String e() -> e
com.scoreloop.client.android.core.paymentprovider.paypalx.PayPalXPaymentProviderController -> com.scoreloop.client.android.core.paymentprovider.paypalx.PayPalXPaymentProviderController:
    com.scoreloop.client.android.core.paymentprovider.paypalx.PayPalXPaymentProviderController a -> a
    boolean b -> b
    java.util.concurrent.ExecutorService c -> c
    void k() -> k
    java.lang.String l() -> l
    java.lang.String m() -> m
    void a(int,android.content.Intent) -> a
    void onPaymentCanceled(java.lang.String) -> onPaymentCanceled
    void onPaymentFailed(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> onPaymentFailed
    void onPaymentSucceeded(java.lang.String,java.lang.String) -> onPaymentSucceeded
    void c_() -> c_
    void prepare() -> prepare
    void f() -> f
    boolean g() -> g
    com.scoreloop.client.android.core.model.Session a(com.scoreloop.client.android.core.paymentprovider.paypalx.PayPalXPaymentProviderController) -> a
    java.lang.String b(com.scoreloop.client.android.core.paymentprovider.paypalx.PayPalXPaymentProviderController) -> b
    boolean h() -> h
    com.scoreloop.client.android.core.paymentprovider.paypalx.PayPalXPaymentProviderController i() -> i
    void c(com.scoreloop.client.android.core.paymentprovider.paypalx.PayPalXPaymentProviderController) -> c
    com.scoreloop.client.android.core.paymentprovider.paypalx.PayPalXPaymentProviderController j() -> j
    android.os.Handler d(com.scoreloop.client.android.core.paymentprovider.paypalx.PayPalXPaymentProviderController) -> d
com.scoreloop.client.android.core.paymentprovider.paypalx.PayPalXPaymentProviderController$1 -> com.scoreloop.client.android.core.paymentprovider.paypalx.PayPalXPaymentProviderController$1:
    com.scoreloop.client.android.core.paymentprovider.paypalx.PayPalXPaymentProviderController a -> a
    void run() -> run
com.scoreloop.client.android.core.paymentprovider.paypalx.PayPalXPaymentProviderController$1$1 -> com.scoreloop.client.android.core.paymentprovider.paypalx.PayPalXPaymentProviderController$1$1:
    void run() -> run
com.scoreloop.client.android.core.paymentprovider.virtualcurrency.SLVirtualCurrencyPaymentProvider -> com.scoreloop.client.android.core.paymentprovider.virtualcurrency.SLVirtualCurrencyPaymentProvider:
    java.lang.String c() -> c
    java.lang.String g() -> g
    java.lang.String e() -> e
com.scoreloop.client.android.core.paymentprovider.virtualcurrency.SLVirtualCurrencyPaymentProviderController -> com.scoreloop.client.android.core.paymentprovider.virtualcurrency.SLVirtualCurrencyPaymentProviderController:
    void a() -> a
    void f() -> f
    boolean g() -> g
    void a(com.scoreloop.client.android.core.paymentprovider.virtualcurrency.SLVirtualCurrencyPaymentProviderController,com.scoreloop.client.android.core.paymentprovider.StandardPaymentProviderController$Status,java.lang.Exception) -> a
    void a(com.scoreloop.client.android.core.paymentprovider.virtualcurrency.SLVirtualCurrencyPaymentProviderController,com.scoreloop.client.android.core.paymentprovider.StandardPaymentProviderController$Status) -> a
com.scoreloop.client.android.core.paymentprovider.virtualcurrency.SLVirtualCurrencyPaymentProviderController$a -> com.scoreloop.client.android.core.paymentprovider.virtualcurrency.SLVirtualCurrencyPaymentProviderController$a:
    com.scoreloop.client.android.core.paymentprovider.virtualcurrency.SLVirtualCurrencyPaymentProviderController a -> a
    void requestControllerDidFail(com.scoreloop.client.android.core.controller.RequestController,java.lang.Exception) -> requestControllerDidFail
    void requestControllerDidReceiveResponse(com.scoreloop.client.android.core.controller.RequestController) -> requestControllerDidReceiveResponse
com.scoreloop.client.android.core.paymentprovider.web.WebPaymentDialog -> com.scoreloop.client.android.core.paymentprovider.web.WebPaymentDialog:
    boolean b -> b
    com.scoreloop.client.android.core.paymentprovider.web.WebPaymentDialog$Delegate c -> c
    java.lang.String d -> d
    android.app.ProgressDialog e -> e
    void a() -> a
    void b() -> b
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onStart() -> onStart
    void c() -> c
    boolean a(java.lang.String) -> a
    void d() -> d
    boolean a(com.scoreloop.client.android.core.paymentprovider.web.WebPaymentDialog) -> a
    com.scoreloop.client.android.core.paymentprovider.web.WebPaymentDialog$Delegate b(com.scoreloop.client.android.core.paymentprovider.web.WebPaymentDialog) -> b
com.scoreloop.client.android.core.paymentprovider.web.WebPaymentDialog$1 -> com.scoreloop.client.android.core.paymentprovider.web.WebPaymentDialog$1:
    int a -> a
    com.scoreloop.client.android.core.paymentprovider.web.WebPaymentDialog b -> b
    void onNewPicture(android.webkit.WebView,android.graphics.Picture) -> onNewPicture
com.scoreloop.client.android.core.paymentprovider.web.WebPaymentDialog$2 -> com.scoreloop.client.android.core.paymentprovider.web.WebPaymentDialog$2:
    boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsConfirm
com.scoreloop.client.android.core.paymentprovider.web.WebPaymentDialog$3 -> com.scoreloop.client.android.core.paymentprovider.web.WebPaymentDialog$3:
    void onClick(android.content.DialogInterface,int) -> onClick
com.scoreloop.client.android.core.paymentprovider.web.WebPaymentDialog$4 -> com.scoreloop.client.android.core.paymentprovider.web.WebPaymentDialog$4:
    com.scoreloop.client.android.core.paymentprovider.web.WebPaymentDialog a -> a
    void onClick(android.content.DialogInterface,int) -> onClick
com.scoreloop.client.android.core.paymentprovider.web.WebPaymentDialog$Delegate -> com.scoreloop.client.android.core.paymentprovider.web.WebPaymentDialog$Delegate:
    void d_() -> d_
    void a(com.scoreloop.client.android.core.paymentprovider.StandardPaymentProviderController$Status) -> a
com.scoreloop.client.android.core.paymentprovider.web.WebPaymentProvider -> com.scoreloop.client.android.core.paymentprovider.web.WebPaymentProvider:
    java.lang.String c() -> c
    java.lang.String g() -> g
    java.lang.String e() -> e
com.scoreloop.client.android.core.paymentprovider.web.WebPaymentProviderController -> com.scoreloop.client.android.core.paymentprovider.web.WebPaymentProviderController:
    java.lang.Object a -> a
    java.lang.String h() -> h
    void f() -> f
    boolean g() -> g
    void a(com.scoreloop.client.android.core.paymentprovider.StandardPaymentProviderController$Status) -> a
    void d_() -> d_
com.scoreloop.client.android.core.server.BayeuxConnectionObserver -> com.scoreloop.client.android.core.server.BayeuxConnectionObserver:
    void a(java.lang.Integer,java.lang.Object,int) -> a
    org.json.JSONObject a(org.json.JSONObject) -> a
com.scoreloop.client.android.core.server.BayeuxConnectionObserver$SecureBayeuxConnectionObserver -> com.scoreloop.client.android.core.server.BayeuxConnectionObserver$SecureBayeuxConnectionObserver:
com.scoreloop.client.android.core.server.Request -> com.scoreloop.client.android.core.server.Request:
    int a -> a
    com.scoreloop.client.android.core.server.RequestCompletionCallback b -> b
    java.lang.String c -> c
    java.lang.Exception d -> d
    org.json.JSONObject e -> e
    int f -> f
    com.scoreloop.client.android.core.server.RequestMethod g -> g
    com.scoreloop.client.android.core.server.Response h -> h
    com.scoreloop.client.android.core.server.Request$State i -> i
    long j -> j
    java.lang.Object k -> k
    boolean l -> l
    com.scoreloop.client.android.core.server.RequestCompletionCallback e() -> e
    void f() -> f
    java.lang.String a() -> a
    org.json.JSONObject b() -> b
    java.lang.Exception g() -> g
    org.json.JSONObject h() -> h
    int i() -> i
    com.scoreloop.client.android.core.server.RequestMethod c() -> c
    com.scoreloop.client.android.core.server.Response j() -> j
    com.scoreloop.client.android.core.server.Request$State k() -> k
    java.lang.Object l() -> l
    boolean m() -> m
    void n() -> n
    void a(com.scoreloop.client.android.core.server.Response) -> a
    void a(java.lang.Exception) -> a
    void a(java.lang.String) -> a
    void o() -> o
    void p() -> p
    void a(org.json.JSONObject) -> a
    void a(com.scoreloop.client.android.core.server.RequestMethod) -> a
    void a(java.lang.Object) -> a
    java.lang.String q() -> q
    void a(long) -> a
    long r() -> r
com.scoreloop.client.android.core.server.Request$State -> com.scoreloop.client.android.core.server.Request$State:
    com.scoreloop.client.android.core.server.Request$State CANCELLED -> CANCELLED
    com.scoreloop.client.android.core.server.Request$State COMPLETED -> COMPLETED
    com.scoreloop.client.android.core.server.Request$State ENQUEUED -> ENQUEUED
    com.scoreloop.client.android.core.server.Request$State EXECUTING -> EXECUTING
    com.scoreloop.client.android.core.server.Request$State FAILED -> FAILED
    com.scoreloop.client.android.core.server.Request$State IDLE -> IDLE
    com.scoreloop.client.android.core.server.Request$State[] a -> a
    com.scoreloop.client.android.core.server.Request$State[] values() -> values
    com.scoreloop.client.android.core.server.Request$State valueOf(java.lang.String) -> valueOf
com.scoreloop.client.android.core.server.RequestCompletionCallback -> com.scoreloop.client.android.core.server.RequestCompletionCallback:
    void a(com.scoreloop.client.android.core.server.Request) -> a
com.scoreloop.client.android.core.server.RequestMethod -> com.scoreloop.client.android.core.server.RequestMethod:
    com.scoreloop.client.android.core.server.RequestMethod DELETE -> DELETE
    com.scoreloop.client.android.core.server.RequestMethod GET -> GET
    com.scoreloop.client.android.core.server.RequestMethod POST -> POST
    com.scoreloop.client.android.core.server.RequestMethod PUT -> PUT
    com.scoreloop.client.android.core.server.RequestMethod[] a -> a
    com.scoreloop.client.android.core.server.RequestMethod[] values() -> values
    com.scoreloop.client.android.core.server.RequestMethod valueOf(java.lang.String) -> valueOf
com.scoreloop.client.android.core.server.Response -> com.scoreloop.client.android.core.server.Response:
    java.lang.Object a -> a
    int b -> b
    java.lang.Integer c -> c
    boolean d -> d
    java.lang.Object a() -> a
    java.lang.Integer b() -> b
    boolean c() -> c
    org.json.JSONArray d() -> d
    org.json.JSONObject e() -> e
    int f() -> f
com.scoreloop.client.android.core.server.Server -> com.scoreloop.client.android.core.server.Server:
    java.net.URL a -> a
    com.scoreloop.client.android.core.server.ServerWorkerThread b -> b
    com.scoreloop.client.android.core.server.Server$a c -> c
    com.scoreloop.client.android.core.server.a d -> d
    com.scoreloop.client.android.core.util.Cache e -> e
    boolean f -> f
    void a(java.lang.Runnable) -> a
    void a(com.scoreloop.client.android.core.server.Request) -> a
    void b(com.scoreloop.client.android.core.server.Request) -> b
    void finalize() -> finalize
    void a(android.content.Context) -> a
    void a(org.json.JSONObject) -> a
    void a() -> a
    com.scoreloop.client.android.core.util.Cache a(com.scoreloop.client.android.core.server.Server) -> a
com.scoreloop.client.android.core.server.Server$1 -> com.scoreloop.client.android.core.server.Server$1:
    com.scoreloop.client.android.core.server.Request a -> a
    void run() -> run
com.scoreloop.client.android.core.server.Server$RequestResult -> com.scoreloop.client.android.core.server.Server$RequestResult:
    java.lang.Exception a -> a
    com.scoreloop.client.android.core.server.Request b -> b
    com.scoreloop.client.android.core.server.Response c -> c
    java.util.concurrent.CountDownLatch d -> d
    void a() -> a
    void b() -> b
com.scoreloop.client.android.core.server.Server$a -> com.scoreloop.client.android.core.server.Server$a:
    com.scoreloop.client.android.core.server.Server a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.scoreloop.client.android.core.server.ServerWorkerThread -> com.scoreloop.client.android.core.server.ServerWorkerThread:
    int b -> b
    com.scoreloop.client.android.core.server.a$a c -> c
    com.scoreloop.client.android.core.util.MainThreadHandler d -> d
    com.scoreloop.client.android.core.server.a e -> e
    com.scoreloop.client.android.core.server.ServerWorkerThread$ServerWorkerHandler f -> f
    org.json.JSONObject g -> g
    com.scoreloop.client.android.core.server.Response a -> a
    void a(com.scoreloop.client.android.core.server.Request) -> a
    void a(java.lang.Runnable) -> a
    void a(java.lang.Integer,java.lang.Object,int) -> a
    org.json.JSONObject a(org.json.JSONObject) -> a
    void a(com.scoreloop.client.android.core.server.Request,com.scoreloop.client.android.core.server.Response,int,java.lang.Exception) -> a
    void run() -> run
    void b(org.json.JSONObject) -> b
    void a() -> a
    void a(com.scoreloop.client.android.core.server.ServerWorkerThread,com.scoreloop.client.android.core.server.Request,com.scoreloop.client.android.core.server.Response,int,java.lang.Exception) -> a
    com.scoreloop.client.android.core.server.a$a a(com.scoreloop.client.android.core.server.ServerWorkerThread,com.scoreloop.client.android.core.server.a$a) -> a
    com.scoreloop.client.android.core.server.a a(com.scoreloop.client.android.core.server.ServerWorkerThread) -> a
    com.scoreloop.client.android.core.server.a$a b(com.scoreloop.client.android.core.server.ServerWorkerThread) -> b
com.scoreloop.client.android.core.server.ServerWorkerThread$ServerWorkerHandler -> com.scoreloop.client.android.core.server.ServerWorkerThread$ServerWorkerHandler:
    com.scoreloop.client.android.core.server.ServerWorkerThread a -> a
    void handleMessage(android.os.Message) -> handleMessage
com.scoreloop.client.android.core.server.a -> com.scoreloop.client.android.core.server.a:
    java.lang.String a -> a
    com.scoreloop.client.android.core.server.e b -> b
    com.scoreloop.client.android.core.server.BayeuxConnectionObserver c -> c
    java.lang.String d -> d
    java.net.URI e -> e
    void a(com.scoreloop.client.android.core.server.BayeuxConnectionObserver) -> a
    void a(com.scoreloop.client.android.core.server.a$a,org.json.JSONObject) -> a
    void a(com.scoreloop.client.android.core.server.a$a) -> a
    void a(android.content.Context) -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    com.scoreloop.client.android.core.server.e a(com.scoreloop.client.android.core.server.a) -> a
com.scoreloop.client.android.core.server.a$a -> com.scoreloop.client.android.core.server.a$a:
    java.lang.String a -> a
    org.json.JSONObject b -> b
    org.json.JSONObject c -> c
    org.apache.http.client.methods.HttpPost e -> e
    int d -> d
    com.scoreloop.client.android.core.server.a f -> f
    void a() -> a
    org.apache.http.client.methods.HttpPost b() -> b
    void a(int,java.lang.String,org.json.JSONObject,org.json.JSONObject) -> a
    org.apache.http.client.methods.HttpPost a(com.scoreloop.client.android.core.server.a$a) -> a
com.scoreloop.client.android.core.server.b -> com.scoreloop.client.android.core.server.b:
    long serialVersionUID -> serialVersionUID
com.scoreloop.client.android.core.server.c -> com.scoreloop.client.android.core.server.c:
    long serialVersionUID -> serialVersionUID
com.scoreloop.client.android.core.server.d -> com.scoreloop.client.android.core.server.d:
    long serialVersionUID -> serialVersionUID
com.scoreloop.client.android.core.server.e -> com.scoreloop.client.android.core.server.e:
    org.apache.http.client.HttpClient a -> a
    java.lang.String b -> b
    java.net.URI c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String b(android.content.Context) -> b
    org.apache.http.client.HttpClient c(android.content.Context) -> c
    org.apache.http.client.methods.HttpPost a() -> a
    org.apache.http.HttpEntity a(org.apache.http.client.methods.HttpPost,org.apache.http.HttpEntity) -> a
    byte[] a(org.apache.http.client.methods.HttpPost,byte[]) -> a
    java.lang.String a(org.apache.http.client.methods.HttpPost,java.lang.String) -> a
    org.json.JSONArray a(org.apache.http.client.methods.HttpPost,org.json.JSONArray) -> a
    org.json.JSONArray a(org.apache.http.client.methods.HttpPost,java.lang.Object) -> a
    java.lang.String b() -> b
    void a(android.content.Context) -> a
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
com.scoreloop.client.android.core.server.f -> com.scoreloop.client.android.core.server.f:
    javax.crypto.Cipher a -> a
    byte[] b -> b
    java.lang.String b() -> b
    java.lang.String a(org.apache.http.client.methods.HttpPost,java.lang.String) -> a
com.scoreloop.client.android.core.settings.CommonSettings -> com.scoreloop.client.android.core.settings.CommonSettings:
com.scoreloop.client.android.core.settings.CommonSettings$Payment -> com.scoreloop.client.android.core.settings.CommonSettings$Payment:
    java.util.Map a -> a
com.scoreloop.client.android.core.settings.CommonSettings$Payment$BokuPayment -> com.scoreloop.client.android.core.settings.CommonSettings$Payment$BokuPayment:
com.scoreloop.client.android.core.settings.CommonSettings$Payment$CreditCardPayment -> com.scoreloop.client.android.core.settings.CommonSettings$Payment$CreditCardPayment:
com.scoreloop.client.android.core.settings.CommonSettings$Payment$FortumoPayment -> com.scoreloop.client.android.core.settings.CommonSettings$Payment$FortumoPayment:
com.scoreloop.client.android.core.settings.CommonSettings$Payment$GoogleCheckoutPayment -> com.scoreloop.client.android.core.settings.CommonSettings$Payment$GoogleCheckoutPayment:
com.scoreloop.client.android.core.settings.CommonSettings$Payment$GoogleMarketPayment -> com.scoreloop.client.android.core.settings.CommonSettings$Payment$GoogleMarketPayment:
com.scoreloop.client.android.core.settings.CommonSettings$Payment$PayPalPayment -> com.scoreloop.client.android.core.settings.CommonSettings$Payment$PayPalPayment:
com.scoreloop.client.android.core.settings.CommonSettings$Payment$PayPalXPayment -> com.scoreloop.client.android.core.settings.CommonSettings$Payment$PayPalXPayment:
com.scoreloop.client.android.core.settings.CommonSettings$Payment$SLVirtualCurrencyPayment -> com.scoreloop.client.android.core.settings.CommonSettings$Payment$SLVirtualCurrencyPayment:
com.scoreloop.client.android.core.settings.CommonSettings$Payment$ZongPayment -> com.scoreloop.client.android.core.settings.CommonSettings$Payment$ZongPayment:
com.scoreloop.client.android.core.settings.CommonSettings$Social -> com.scoreloop.client.android.core.settings.CommonSettings$Social:
    java.lang.String[] a -> a
com.scoreloop.client.android.core.settings.CommonSettings$Social$Facebook -> com.scoreloop.client.android.core.settings.CommonSettings$Social$Facebook:
com.scoreloop.client.android.core.settings.CommonSettings$Social$Twitter -> com.scoreloop.client.android.core.settings.CommonSettings$Social$Twitter:
com.scoreloop.client.android.core.settings.CommonSettings$TermsOfService -> com.scoreloop.client.android.core.settings.CommonSettings$TermsOfService:
    java.lang.Class a -> a
    java.lang.Class b -> b
com.scoreloop.client.android.core.settings.Settings -> com.scoreloop.client.android.core.settings.Settings:
    java.util.Map a -> a
    java.lang.String b -> b
com.scoreloop.client.android.core.settings.Settings$Facebook -> com.scoreloop.client.android.core.settings.Settings$Facebook:
com.scoreloop.client.android.core.settings.Settings$Twitter -> com.scoreloop.client.android.core.settings.Settings$Twitter:
com.scoreloop.client.android.core.settings.Version -> com.scoreloop.client.android.core.settings.Version:
com.scoreloop.client.android.core.socialprovider.AuthRequest -> com.scoreloop.client.android.core.socialprovider.AuthRequest:
    com.scoreloop.client.android.core.socialprovider.AuthRequestDelegate a -> a
    com.scoreloop.client.android.core.model.Session b -> b
    com.scoreloop.client.android.core.socialprovider.AuthRequestDelegate a() -> a
    void a(org.apache.http.client.methods.HttpUriRequest) -> a
    void a(org.apache.http.HttpResponse) -> a
    void a(java.lang.Throwable) -> a
com.scoreloop.client.android.core.socialprovider.AuthRequest$1 -> com.scoreloop.client.android.core.socialprovider.AuthRequest$1:
    org.apache.http.client.methods.HttpUriRequest b -> b
    android.os.Handler c -> c
    com.scoreloop.client.android.core.socialprovider.AuthRequest a -> a
    void run() -> run
com.scoreloop.client.android.core.socialprovider.AuthRequest$1$1 -> com.scoreloop.client.android.core.socialprovider.AuthRequest$1$1:
    org.apache.http.HttpResponse a -> a
    com.scoreloop.client.android.core.socialprovider.AuthRequest$1 b -> b
    void run() -> run
com.scoreloop.client.android.core.socialprovider.AuthRequest$1$2 -> com.scoreloop.client.android.core.socialprovider.AuthRequest$1$2:
    java.lang.Exception a -> a
    com.scoreloop.client.android.core.socialprovider.AuthRequest$1 b -> b
    void run() -> run
com.scoreloop.client.android.core.socialprovider.AuthRequestDelegate -> com.scoreloop.client.android.core.socialprovider.AuthRequestDelegate:
    void a(com.scoreloop.client.android.core.socialprovider.AuthRequest) -> a
    void a(java.lang.Throwable) -> a
com.scoreloop.client.android.core.socialprovider.AuthViewController -> com.scoreloop.client.android.core.socialprovider.AuthViewController:
    com.scoreloop.client.android.core.socialprovider.AuthViewController$Observer a -> a
    com.scoreloop.client.android.core.socialprovider.AuthViewController$Observer a() -> a
com.scoreloop.client.android.core.socialprovider.AuthViewController$Observer -> com.scoreloop.client.android.core.socialprovider.AuthViewController$Observer:
    void b(java.lang.Throwable) -> b
    void b() -> b
    void e_() -> e_
com.scoreloop.client.android.core.socialprovider.oauthfacebook.OAuthFacebookSocialProvider -> com.scoreloop.client.android.core.socialprovider.oauthfacebook.OAuthFacebookSocialProvider:
    java.lang.Class b() -> b
    int c() -> c
    java.lang.String getIdentifier() -> getIdentifier
com.scoreloop.client.android.core.socialprovider.oauthfacebook.OAuthFacebookSocialProviderController -> com.scoreloop.client.android.core.socialprovider.oauthfacebook.OAuthFacebookSocialProviderController:
    java.lang.String[] a -> a
    void a() -> a
    com.scoreloop.client.android.core.controller.SocialProviderControllerObserver a(com.scoreloop.client.android.core.socialprovider.oauthfacebook.OAuthFacebookSocialProviderController) -> a
    com.scoreloop.client.android.core.model.User b(com.scoreloop.client.android.core.socialprovider.oauthfacebook.OAuthFacebookSocialProviderController) -> b
    com.scoreloop.client.android.core.socialprovider.oauthfacebook.OAuthFacebookSocialProvider c(com.scoreloop.client.android.core.socialprovider.oauthfacebook.OAuthFacebookSocialProviderController) -> c
    void a(com.scoreloop.client.android.core.socialprovider.oauthfacebook.OAuthFacebookSocialProviderController,com.scoreloop.client.android.core.controller.SocialProviderController$UpdateMode) -> a
    com.scoreloop.client.android.core.controller.SocialProviderControllerObserver d(com.scoreloop.client.android.core.socialprovider.oauthfacebook.OAuthFacebookSocialProviderController) -> d
    com.scoreloop.client.android.core.controller.SocialProviderControllerObserver e(com.scoreloop.client.android.core.socialprovider.oauthfacebook.OAuthFacebookSocialProviderController) -> e
    com.scoreloop.client.android.core.controller.SocialProviderControllerObserver f(com.scoreloop.client.android.core.socialprovider.oauthfacebook.OAuthFacebookSocialProviderController) -> f
com.scoreloop.client.android.core.socialprovider.oauthfacebook.OAuthFacebookSocialProviderController$1 -> com.scoreloop.client.android.core.socialprovider.oauthfacebook.OAuthFacebookSocialProviderController$1:
    com.facebook.android.b a -> a
    com.scoreloop.client.android.core.socialprovider.oauthfacebook.OAuthFacebookSocialProviderController b -> b
    void a() -> a
    void a(android.os.Bundle) -> a
    void a(com.facebook.android.a) -> a
    void a(com.facebook.android.d) -> a
com.scoreloop.client.android.core.socialprovider.twitter.TwitterSocialProvider -> com.scoreloop.client.android.core.socialprovider.twitter.TwitterSocialProvider:
    java.lang.Class b() -> b
    int c() -> c
    java.lang.String getIdentifier() -> getIdentifier
com.scoreloop.client.android.core.socialprovider.twitter.TwitterSocialProviderController -> com.scoreloop.client.android.core.socialprovider.twitter.TwitterSocialProviderController:
    com.scoreloop.client.android.core.socialprovider.twitter.b a -> a
    com.scoreloop.client.android.core.socialprovider.twitter.c b -> b
    com.scoreloop.client.android.core.socialprovider.twitter.b c -> c
    void a() -> a
    void a(com.scoreloop.client.android.core.socialprovider.AuthRequest) -> a
    void a(java.lang.Throwable) -> a
    void b(java.lang.Throwable) -> b
    void b() -> b
    void e_() -> e_
com.scoreloop.client.android.core.socialprovider.twitter.a -> com.scoreloop.client.android.core.socialprovider.twitter.a:
    com.scoreloop.client.android.core.socialprovider.twitter.c b -> b
    void b(java.lang.String) -> b
    void i() -> i
    void j() -> j
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
com.scoreloop.client.android.core.socialprovider.twitter.b -> com.scoreloop.client.android.core.socialprovider.twitter.b:
    org.json.JSONObject a -> a
    void b() -> b
    void a(java.lang.Throwable) -> a
    void a(org.apache.http.HttpResponse) -> a
    void a(int,java.lang.String) -> a
    void b(java.lang.Throwable) -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    void a(java.lang.String,java.lang.String) -> a
com.scoreloop.client.android.core.socialprovider.twitter.c -> com.scoreloop.client.android.core.socialprovider.twitter.c:
    java.lang.String a -> a
    com.scoreloop.client.android.core.socialprovider.twitter.a b -> b
    java.lang.String b() -> b
    void a(android.app.Activity) -> a
    void a(java.lang.String) -> a
com.scoreloop.client.android.core.socialprovider.twitter.c$1 -> com.scoreloop.client.android.core.socialprovider.twitter.c$1:
    void onDismiss(android.content.DialogInterface) -> onDismiss
com.scoreloop.client.android.core.socialprovider.twitter.c$2 -> com.scoreloop.client.android.core.socialprovider.twitter.c$2:
    void onCancel(android.content.DialogInterface) -> onCancel
com.scoreloop.client.android.core.ui.ProxyActivity -> com.scoreloop.client.android.core.ui.ProxyActivity:
    void a(com.scoreloop.client.android.core.model.Continuation,android.content.Context,com.scoreloop.client.android.core.ui.ProxyActivity$Delegate) -> a
    void a(android.content.Intent,android.app.Activity,com.scoreloop.client.android.core.ui.ProxyActivity$Delegate) -> a
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onCreate(android.os.Bundle) -> onCreate
    void onResume() -> onResume
    void onStop() -> onStop
com.scoreloop.client.android.core.ui.ProxyActivity$Delegate -> com.scoreloop.client.android.core.ui.ProxyActivity$Delegate:
    void a(int,android.content.Intent) -> a
    void c_() -> c_
com.scoreloop.client.android.core.ui.ProxyActivity$a -> com.scoreloop.client.android.core.ui.ProxyActivity$a:
    com.scoreloop.client.android.core.model.Continuation a -> a
    com.scoreloop.client.android.core.ui.ProxyActivity$Delegate b -> b
    android.content.Intent c -> c
com.scoreloop.client.android.core.ui.ScoreloopCustomDialog -> com.scoreloop.client.android.core.ui.ScoreloopCustomDialog:
com.scoreloop.client.android.core.ui.TermsOfServiceDialog -> com.scoreloop.client.android.core.ui.TermsOfServiceDialog:
    android.graphics.drawable.Drawable b -> b
    boolean c -> c
    com.scoreloop.client.android.core.ui.TermsOfServiceDialog$Delegate d -> d
    android.app.ProgressDialog e -> e
    java.util.Map f -> f
    java.lang.String g -> g
    void a() -> a
    void e() -> e
    void b() -> b
    void d() -> d
    void cancel() -> cancel
    void onStart() -> onStart
    boolean a(java.lang.String) -> a
    android.graphics.drawable.Drawable i() -> i
    void f() -> f
com.scoreloop.client.android.core.ui.TermsOfServiceDialog$Delegate -> com.scoreloop.client.android.core.ui.TermsOfServiceDialog$Delegate:
    void c() -> c
    void d() -> d
    void a(java.lang.Integer) -> a
    void a() -> a
    void e() -> e
com.scoreloop.client.android.core.ui.WebViewDialog -> com.scoreloop.client.android.core.ui.WebViewDialog:
    android.webkit.WebView a -> a
    android.webkit.WebViewClient b -> b
    void a() -> a
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void e() -> e
    void b() -> b
    void c(java.lang.String) -> c
    void a(java.lang.String,java.util.Map) -> a
    void onCreate(android.os.Bundle) -> onCreate
    void b(java.lang.String) -> b
    void g() -> g
    void c() -> c
    boolean a(java.lang.String) -> a
    void d() -> d
    void f() -> f
    void h() -> h
com.scoreloop.client.android.core.ui.WebViewDialog$a -> com.scoreloop.client.android.core.ui.WebViewDialog$a:
    boolean a -> a
    com.scoreloop.client.android.core.ui.WebViewDialog b -> b
    void onLoadResource(android.webkit.WebView,java.lang.String) -> onLoadResource
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
com.scoreloop.client.android.core.ui.WebViewDialog$b -> com.scoreloop.client.android.core.ui.WebViewDialog$b:
    com.scoreloop.client.android.core.ui.WebViewDialog a -> a
    void onDetachedFromWindow() -> onDetachedFromWindow
com.scoreloop.client.android.core.util.Base64 -> com.scoreloop.client.android.core.util.Base64:
    byte[] a -> a
    byte[] b -> b
    boolean c -> c
    byte[] a(byte[],int) -> a
    byte[] a(java.lang.String) -> a
    byte[] b(java.lang.String) -> b
    java.lang.String a(byte[]) -> a
    java.lang.String b(byte[],int) -> b
    byte[] a(byte[],int,int,byte[],int) -> a
com.scoreloop.client.android.core.util.BaseStore -> com.scoreloop.client.android.core.util.BaseStore:
    com.scoreloop.client.android.core.util.Cryptifier b -> b
    android.content.Context a -> a
    java.lang.String d() -> d
    com.scoreloop.client.android.core.util.JSONSerializable c() -> c
    com.scoreloop.client.android.core.util.Cryptifier e() -> e
    com.scoreloop.client.android.core.util.JSONSerializable f() -> f
    com.scoreloop.client.android.core.util.JSONSerializable g() -> g
com.scoreloop.client.android.core.util.Cache -> com.scoreloop.client.android.core.util.Cache:
    int a -> a
    long b -> b
    java.util.HashMap c -> c
    java.util.concurrent.ConcurrentHashMap d -> d
    android.os.Handler e -> e
    java.lang.Runnable f -> f
    void a() -> a
    void a(long) -> a
    void a(java.lang.Object,java.lang.Object,long) -> a
    java.lang.Object a(java.lang.Object) -> a
    void b() -> b
    int a(com.scoreloop.client.android.core.util.Cache) -> a
    java.util.concurrent.ConcurrentHashMap b(com.scoreloop.client.android.core.util.Cache) -> b
com.scoreloop.client.android.core.util.Cache$1 -> com.scoreloop.client.android.core.util.Cache$1:
    long serialVersionUID -> serialVersionUID
    com.scoreloop.client.android.core.util.Cache a -> a
    boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
com.scoreloop.client.android.core.util.Cache$a -> com.scoreloop.client.android.core.util.Cache$a:
    long a -> a
    long b -> b
    java.lang.Object c -> c
    long a() -> a
    long b() -> b
    java.lang.Object c() -> c
com.scoreloop.client.android.core.util.Cryptifier -> com.scoreloop.client.android.core.util.Cryptifier:
    javax.crypto.Cipher a -> a
    byte[] b -> b
    javax.crypto.spec.SecretKeySpec c -> c
    byte[] a(java.lang.String,java.lang.String) -> a
    java.lang.String a(java.lang.String) -> a
    byte[] b(java.lang.String) -> b
    java.lang.String c(java.lang.String) -> c
    java.lang.String a(byte[]) -> a
    byte[] a(int,byte[]) -> a
    javax.crypto.Cipher a() -> a
com.scoreloop.client.android.core.util.CryptifierException -> com.scoreloop.client.android.core.util.CryptifierException:
    long serialVersionUID -> serialVersionUID
com.scoreloop.client.android.core.util.Destroyable -> com.scoreloop.client.android.core.util.Destroyable:
    void destroy() -> destroy
com.scoreloop.client.android.core.util.DiskAsyncTask -> com.scoreloop.client.android.core.util.DiskAsyncTask:
    java.util.concurrent.ThreadPoolExecutor a -> a
    com.scoreloop.client.android.core.util.DiskAsyncTask$b b -> b
    com.scoreloop.client.android.core.util.DiskAsyncTask$c c -> c
    java.util.concurrent.FutureTask d -> d
    com.scoreloop.client.android.core.util.DiskAsyncTask$Status e -> e
    java.lang.Object a(java.lang.Object[]) -> a
    void a() -> a
    void a(java.lang.Object) -> a
    java.lang.Object a(java.util.concurrent.TimeUnit) -> a
    com.scoreloop.client.android.core.util.DiskAsyncTask b(java.lang.Object[]) -> b
    com.scoreloop.client.android.core.util.DiskAsyncTask$b b() -> b
    void a(com.scoreloop.client.android.core.util.DiskAsyncTask,java.lang.Object) -> a
com.scoreloop.client.android.core.util.DiskAsyncTask$1 -> com.scoreloop.client.android.core.util.DiskAsyncTask$1:
    com.scoreloop.client.android.core.util.DiskAsyncTask b -> b
    java.lang.Object call() -> call
com.scoreloop.client.android.core.util.DiskAsyncTask$2 -> com.scoreloop.client.android.core.util.DiskAsyncTask$2:
    com.scoreloop.client.android.core.util.DiskAsyncTask a -> a
    void done() -> done
com.scoreloop.client.android.core.util.DiskAsyncTask$3 -> com.scoreloop.client.android.core.util.DiskAsyncTask$3:
    int[] a -> a
com.scoreloop.client.android.core.util.DiskAsyncTask$Status -> com.scoreloop.client.android.core.util.DiskAsyncTask$Status:
    com.scoreloop.client.android.core.util.DiskAsyncTask$Status PENDING -> PENDING
    com.scoreloop.client.android.core.util.DiskAsyncTask$Status RUNNING -> RUNNING
    com.scoreloop.client.android.core.util.DiskAsyncTask$Status FINISHED -> FINISHED
    com.scoreloop.client.android.core.util.DiskAsyncTask$Status[] a -> a
    com.scoreloop.client.android.core.util.DiskAsyncTask$Status[] values() -> values
    com.scoreloop.client.android.core.util.DiskAsyncTask$Status valueOf(java.lang.String) -> valueOf
com.scoreloop.client.android.core.util.DiskAsyncTask$a -> com.scoreloop.client.android.core.util.DiskAsyncTask$a:
    com.scoreloop.client.android.core.util.DiskAsyncTask a -> a
    java.lang.Object[] b -> b
com.scoreloop.client.android.core.util.DiskAsyncTask$b -> com.scoreloop.client.android.core.util.DiskAsyncTask$b:
    void handleMessage(android.os.Message) -> handleMessage
com.scoreloop.client.android.core.util.DiskAsyncTask$c -> com.scoreloop.client.android.core.util.DiskAsyncTask$c:
    java.lang.Object[] a -> a
com.scoreloop.client.android.core.util.ExternalFileStore -> com.scoreloop.client.android.core.util.ExternalFileStore:
    java.lang.Boolean b -> b
    java.lang.String d() -> d
    java.io.File b() -> b
    java.io.InputStream h() -> h
    java.io.OutputStream i() -> i
    boolean j() -> j
com.scoreloop.client.android.core.util.FileStore -> com.scoreloop.client.android.core.util.FileStore:
    java.io.File b() -> b
    java.lang.String a() -> a
    com.scoreloop.client.android.core.util.JSONSerializable f() -> f
    java.io.InputStream h() -> h
    byte[] j() -> j
    boolean a(com.scoreloop.client.android.core.util.JSONSerializable) -> a
    java.io.OutputStream i() -> i
    boolean a(byte[]) -> a
com.scoreloop.client.android.core.util.Formats -> com.scoreloop.client.android.core.util.Formats:
    java.text.SimpleDateFormat a -> a
    java.text.SimpleDateFormat b -> b
com.scoreloop.client.android.core.util.HTTPUtils -> com.scoreloop.client.android.core.util.HTTPUtils:
    java.lang.String a(org.apache.http.HttpResponse) -> a
com.scoreloop.client.android.core.util.ImageUtil -> com.scoreloop.client.android.core.util.ImageUtil:
com.scoreloop.client.android.core.util.InternalFileStore -> com.scoreloop.client.android.core.util.InternalFileStore:
    java.lang.String d() -> d
    java.io.File b() -> b
    java.io.InputStream h() -> h
    java.io.OutputStream i() -> i
com.scoreloop.client.android.core.util.JSONListAdapter -> com.scoreloop.client.android.core.util.JSONListAdapter:
    java.util.List a -> a
    com.scoreloop.client.android.core.util.JSONSerializable b() -> b
    java.util.List c() -> c
    void a(java.util.List) -> a
    org.json.JSONObject b_() -> b_
    void a(org.json.JSONObject) -> a
com.scoreloop.client.android.core.util.JSONSerializable -> com.scoreloop.client.android.core.util.JSONSerializable:
    org.json.JSONObject b_() -> b_
    void a(org.json.JSONObject) -> a
com.scoreloop.client.android.core.util.JSONUtils -> com.scoreloop.client.android.core.util.JSONUtils:
    java.util.Map a(org.json.JSONObject) -> a
    org.json.JSONArray a(java.util.Collection) -> a
    org.json.JSONObject a(java.util.Map) -> a
    com.scoreloop.client.android.core.model.ContextMap b(org.json.JSONObject) -> b
    void a(java.lang.Object) -> a
    java.util.Map c(org.json.JSONObject) -> c
    java.lang.Object b(java.lang.Object) -> b
    java.lang.String a(java.lang.Double) -> a
com.scoreloop.client.android.core.util.Logger -> com.scoreloop.client.android.core.util.Logger:
com.scoreloop.client.android.core.util.MainThreadHandler -> com.scoreloop.client.android.core.util.MainThreadHandler:
com.scoreloop.client.android.core.util.NullStore -> com.scoreloop.client.android.core.util.NullStore:
    com.scoreloop.client.android.core.util.JSONSerializable a -> a
    com.scoreloop.client.android.core.util.JSONSerializable g() -> g
com.scoreloop.client.android.core.util.OAuthBuilder -> com.scoreloop.client.android.core.util.OAuthBuilder:
    java.util.Random a -> a
    java.lang.String b -> b
    java.net.URL c -> c
    java.lang.String d -> d
    java.util.Map e -> e
    java.lang.String f -> f
    java.lang.String a(byte[],byte[]) -> a
    java.util.List a(java.util.Map) -> a
    org.apache.http.client.methods.HttpGet a(java.lang.String,java.lang.String) -> a
    void a(java.lang.String) -> a
    void a(java.net.URL) -> a
    void b(java.lang.String) -> b
    java.net.URL a(java.lang.String,java.util.Map) -> a
    java.lang.String a() -> a
    java.lang.String a(java.lang.String,java.lang.String,java.lang.String) -> a
com.scoreloop.client.android.core.util.PlistParser -> com.scoreloop.client.android.core.util.PlistParser:
    java.lang.Integer a(java.lang.Object) -> a
    java.util.Map b(java.lang.Object) -> b
    java.lang.String c(java.lang.Object) -> c
    java.lang.Object a(java.io.InputStream) -> a
    java.util.List a(org.w3c.dom.Node) -> a
    java.lang.Integer b(org.w3c.dom.Node) -> b
    java.lang.Object c(org.w3c.dom.Node) -> c
    java.lang.String d(org.w3c.dom.Node) -> d
com.scoreloop.client.android.core.util.PreferencesStore -> com.scoreloop.client.android.core.util.PreferencesStore:
    java.lang.String d() -> d
    java.lang.String a() -> a
    java.lang.String b() -> b
    com.scoreloop.client.android.core.util.JSONSerializable f() -> f
    boolean a(com.scoreloop.client.android.core.util.JSONSerializable) -> a
com.scoreloop.client.android.core.util.SetterIntent -> com.scoreloop.client.android.core.util.SetterIntent:
    boolean a -> a
    java.lang.Object b -> b
    boolean a(org.json.JSONObject,java.lang.String) -> a
    java.lang.Integer a(org.json.JSONObject,java.lang.String,com.scoreloop.client.android.core.util.SetterIntent$KeyMode,com.scoreloop.client.android.core.util.SetterIntent$ValueMode) -> a
    org.json.JSONObject b(org.json.JSONObject,java.lang.String,com.scoreloop.client.android.core.util.SetterIntent$KeyMode,com.scoreloop.client.android.core.util.SetterIntent$ValueMode) -> b
    java.lang.Object a(com.scoreloop.client.android.core.util.SetterIntent$KeyMode,java.lang.Object) -> a
    java.lang.Long c(org.json.JSONObject,java.lang.String,com.scoreloop.client.android.core.util.SetterIntent$KeyMode,com.scoreloop.client.android.core.util.SetterIntent$ValueMode) -> c
    java.lang.String d(org.json.JSONObject,java.lang.String,com.scoreloop.client.android.core.util.SetterIntent$KeyMode,com.scoreloop.client.android.core.util.SetterIntent$ValueMode) -> d
    java.lang.Object a() -> a
    void a(java.lang.Object) -> a
    void a(java.lang.Object,com.scoreloop.client.android.core.util.SetterIntent$ValueMode) -> a
    void a(boolean,java.lang.Object) -> a
    boolean a(org.json.JSONObject,java.lang.String,com.scoreloop.client.android.core.util.SetterIntent$ValueMode) -> a
    boolean b(org.json.JSONObject,java.lang.String,com.scoreloop.client.android.core.util.SetterIntent$ValueMode) -> b
    boolean c(org.json.JSONObject,java.lang.String,com.scoreloop.client.android.core.util.SetterIntent$ValueMode) -> c
    boolean d(org.json.JSONObject,java.lang.String,com.scoreloop.client.android.core.util.SetterIntent$ValueMode) -> d
    boolean e(org.json.JSONObject,java.lang.String,com.scoreloop.client.android.core.util.SetterIntent$ValueMode) -> e
    boolean f(org.json.JSONObject,java.lang.String,com.scoreloop.client.android.core.util.SetterIntent$ValueMode) -> f
    boolean g(org.json.JSONObject,java.lang.String,com.scoreloop.client.android.core.util.SetterIntent$ValueMode) -> g
com.scoreloop.client.android.core.util.SetterIntent$KeyMode -> com.scoreloop.client.android.core.util.SetterIntent$KeyMode:
    com.scoreloop.client.android.core.util.SetterIntent$KeyMode COERCE_NULL_WHEN_NO_KEY -> COERCE_NULL_WHEN_NO_KEY
    com.scoreloop.client.android.core.util.SetterIntent$KeyMode THROWS_WHEN_NO_KEY -> THROWS_WHEN_NO_KEY
    com.scoreloop.client.android.core.util.SetterIntent$KeyMode USE_NULL_WHEN_NO_KEY -> USE_NULL_WHEN_NO_KEY
    com.scoreloop.client.android.core.util.SetterIntent$KeyMode[] a -> a
    com.scoreloop.client.android.core.util.SetterIntent$KeyMode[] values() -> values
    com.scoreloop.client.android.core.util.SetterIntent$KeyMode valueOf(java.lang.String) -> valueOf
com.scoreloop.client.android.core.util.SetterIntent$ValueMode -> com.scoreloop.client.android.core.util.SetterIntent$ValueMode:
    com.scoreloop.client.android.core.util.SetterIntent$ValueMode ALLOWS_AND_COERCES_NULL_VALUE -> ALLOWS_AND_COERCES_NULL_VALUE
    com.scoreloop.client.android.core.util.SetterIntent$ValueMode ALLOWS_NULL_VALUE -> ALLOWS_NULL_VALUE
    com.scoreloop.client.android.core.util.SetterIntent$ValueMode REQUIRES_NON_NULL_VALUE -> REQUIRES_NON_NULL_VALUE
    com.scoreloop.client.android.core.util.SetterIntent$ValueMode[] a -> a
    com.scoreloop.client.android.core.util.SetterIntent$ValueMode[] values() -> values
    com.scoreloop.client.android.core.util.SetterIntent$ValueMode valueOf(java.lang.String) -> valueOf
com.scoreloop.client.android.core.util.Store -> com.scoreloop.client.android.core.util.Store:
    com.scoreloop.client.android.core.util.JSONSerializable g() -> g
com.scoreloop.client.android.core.util.StringsParser -> com.scoreloop.client.android.core.util.StringsParser:
    java.util.Map a(java.io.InputStream) -> a
com.scoreloop.client.android.core.util.a -> com.scoreloop.client.android.core.util.a:
    com.scoreloop.client.android.core.util.Cache a -> a
    void run() -> run
d -> g:
    java.lang.ref.WeakReference a -> a
    com.google.ads.Ad b -> b
    com.google.ads.AdListener c -> c
    c d -> d
    com.google.ads.AdRequest e -> e
    com.google.ads.AdSize f -> f
    f g -> g
    java.lang.String h -> h
    g i -> i
    h j -> j
    android.os.Handler k -> k
    boolean l -> l
    boolean m -> m
    long n -> n
    x o -> o
    java.util.LinkedList p -> p
    int q -> q
    void a(java.lang.String) -> a
    void a() -> a
    void b() -> b
    android.app.Activity c() -> c
    com.google.ads.Ad d() -> d
    c e() -> e
    java.lang.String f() -> f
    g g() -> g
    h h() -> h
    com.google.ads.AdSize i() -> i
    f j() -> j
    void a(int) -> a
    int k() -> k
    boolean u() -> r
    boolean m() -> l
    void a(com.google.ads.AdRequest) -> a
    void a(com.google.ads.AdRequest$ErrorCode) -> a
    void n() -> m
    void o() -> n
    void p() -> o
    void q() -> p
    void r() -> s
    void s() -> q
    void a(com.google.ads.AdListener) -> a
    void a(float) -> a
e -> h:
    java.lang.String a -> a
    java.util.HashMap b -> b
    android.os.Bundle a() -> a
    java.lang.String b() -> b
    java.util.HashMap c() -> c
f -> i:
    java.util.LinkedList a -> a
    long b -> b
    long c -> c
    java.util.LinkedList d -> d
    long e -> e
    java.lang.String f -> f
    boolean g -> g
    boolean h -> h
    java.lang.String i -> i
    void a() -> a
    void b() -> b
    void c() -> c
    void d() -> d
    long e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
    long h() -> h
    long i() -> i
    java.lang.String j() -> j
    void a(java.lang.String) -> a
    boolean k() -> k
    void l() -> l
    boolean m() -> m
    void n() -> n
    void o() -> o
    java.lang.String p() -> p
    void b(java.lang.String) -> b
g -> j:
    com.google.ads.AdActivity a -> a
    com.google.ads.AdSize b -> b
    void a() -> a
    com.google.ads.AdActivity b() -> b
    void a(com.google.ads.AdActivity) -> a
    void onMeasure(int,int) -> onMeasure
h -> k:
    d a -> a
    a$a b -> b
    boolean c -> c
    boolean d -> d
    boolean e -> e
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void a() -> a
    void b() -> b
h$a -> l:
    d a -> a
    java.lang.Void a(java.lang.String[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
i -> m:
    void a(d,java.util.HashMap,android.webkit.WebView) -> a
j -> n:
    void a(d,java.util.HashMap,android.webkit.WebView) -> a
k -> o:
    void a(d,java.util.HashMap,android.webkit.WebView) -> a
l -> p:
    void a(d,java.util.HashMap,android.webkit.WebView) -> a
m -> q:
    void a(d,java.util.HashMap,android.webkit.WebView) -> a
n -> r:
    void a(d,java.util.HashMap,android.webkit.WebView) -> a
net.youmi.android.YoumiActivity -> net.youmi.android.YoumiActivity:
    net.youmi.android.a.k.a.h a -> a
    net.youmi.android.a.h.j b -> b
    net.youmi.android.g.a c -> c
    android.widget.RelativeLayout d -> d
    net.youmi.android.g.c e -> e
    net.youmi.android.d.a.a f -> f
    void onCreate(android.os.Bundle) -> onCreate
    void i() -> i
    void a(java.lang.String) -> a
    void a(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> a
    void a(android.webkit.WebView,int,java.lang.String,java.lang.String) -> a
    void a(android.webkit.WebView,java.lang.String) -> a
    void a() -> a
    void onClick(android.view.View) -> onClick
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void b() -> b
    void c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
    boolean g() -> g
    boolean b(java.lang.String) -> b
    boolean a(java.lang.String,byte[]) -> a
    boolean h() -> h
net.youmi.android.YoumiAdManager -> net.youmi.android.YoumiAdManager:
    android.content.Context a -> a
    net.youmi.android.YoumiAdManager b -> b
    net.youmi.android.YoumiAdManager getInstance(android.content.Context) -> getInstance
    void init(java.lang.String,java.lang.String,boolean) -> init
    java.lang.String getOnlineConfig(java.lang.String,java.lang.String) -> getOnlineConfig
    net.youmi.android.dev.AppUpdateInfo checkAppUpdate() -> checkAppUpdate
net.youmi.android.YoumiReceiver -> net.youmi.android.YoumiReceiver:
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
net.youmi.android.YoumiService -> net.youmi.android.YoumiService:
    void onHandleIntent(android.content.Intent) -> onHandleIntent
net.youmi.android.a.a.a -> net.youmi.android.a.a.a:
    java.lang.String a -> a
    java.lang.String b -> b
    net.youmi.android.a.a.b c -> c
    net.youmi.android.a.a.c d -> d
    java.lang.String e -> e
    boolean f -> f
    java.lang.String g -> g
    long h -> h
    java.lang.String i -> i
    long j -> j
    boolean k -> k
    net.youmi.android.a.h.i l -> l
    java.lang.String m -> m
    java.lang.String a() -> a
    boolean b() -> b
    void a(boolean) -> a
    void a(java.lang.String) -> a
    java.lang.String c() -> c
    java.lang.String d() -> d
    void b(java.lang.String) -> b
    boolean e() -> e
    void b(boolean) -> b
    net.youmi.android.a.a.c f() -> f
    void a(net.youmi.android.a.a.c) -> a
    void a(long) -> a
    net.youmi.android.a.h.i g() -> g
    void a(net.youmi.android.a.h.i) -> a
    java.lang.String h() -> h
    boolean c(java.lang.String) -> c
    long i() -> i
    java.lang.String j() -> j
    java.lang.String d(java.lang.String) -> d
net.youmi.android.a.a.a.a -> net.youmi.android.a.a.a.a:
    int a -> a
    int b -> b
    long c -> c
    java.lang.String d -> d
    net.youmi.android.a.a.a.f e -> e
    net.youmi.android.a.a.a.c f -> f
    net.youmi.android.a.a.a.g g -> g
    net.youmi.android.a.a.a.e h -> h
    net.youmi.android.a.a.a.d i -> i
    net.youmi.android.a.a.a.j j -> j
    net.youmi.android.a.a.a.h k -> k
    int a() -> a
    int b() -> b
    long c() -> c
    void a(long) -> a
    java.lang.String d() -> d
    java.lang.String a(int,int) -> a
    net.youmi.android.a.a.a.f e() -> e
    void a(net.youmi.android.a.a.a.f) -> a
    net.youmi.android.a.a.a.c f() -> f
    void a(net.youmi.android.a.a.a.c) -> a
    net.youmi.android.a.a.a.g g() -> g
    void a(net.youmi.android.a.a.a.g) -> a
    void a(net.youmi.android.a.a.a.e) -> a
    net.youmi.android.a.a.a.e k() -> k
    void a(net.youmi.android.a.a.a.d) -> a
    net.youmi.android.a.a.a.d l() -> l
    net.youmi.android.a.a.a.j m() -> m
    void a(net.youmi.android.a.a.a.j) -> a
    net.youmi.android.a.a.a.h n() -> n
    void a(net.youmi.android.a.a.a.h) -> a
    java.lang.String toString() -> toString
    java.lang.String h() -> h
    boolean c(java.lang.String) -> c
    long i() -> i
    java.lang.String j() -> j
net.youmi.android.a.a.a.b -> net.youmi.android.a.a.a.b:
    java.lang.String a(net.youmi.android.a.a.a.a) -> a
    boolean a(net.youmi.android.a.a.a.a,java.lang.String) -> a
net.youmi.android.a.a.a.c -> net.youmi.android.a.a.a.c:
    long a -> a
    java.util.ArrayList b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.util.ArrayList a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void b(java.lang.String) -> b
    java.lang.String c() -> c
    void c(java.lang.String) -> c
    java.lang.String d() -> d
    void d(java.lang.String) -> d
    java.lang.String e() -> e
    void e(java.lang.String) -> e
    java.lang.String f() -> f
    void f(java.lang.String) -> f
    java.lang.String g() -> g
    void g(java.lang.String) -> g
    void h(java.lang.String) -> h
    java.lang.String h() -> h
    java.lang.String i() -> i
    void i(java.lang.String) -> i
    long j() -> j
    void a(long) -> a
    java.lang.String toString() -> toString
net.youmi.android.a.a.a.d -> net.youmi.android.a.a.a.d:
    long a -> a
    int b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    int e -> e
    long a() -> a
    void a(long) -> a
    int b() -> b
    void a(int) -> a
    java.lang.String c() -> c
    void a(java.lang.String) -> a
    java.lang.String d() -> d
    void b(java.lang.String) -> b
    int e() -> e
    void b(int) -> b
    java.lang.String toString() -> toString
net.youmi.android.a.a.a.e -> net.youmi.android.a.a.a.e:
    long a -> a
    long b -> b
    java.lang.String c -> c
    long a() -> a
    void a(long) -> a
    void b(long) -> b
    long b() -> b
    java.lang.String c() -> c
    void a(java.lang.String) -> a
    java.lang.String toString() -> toString
net.youmi.android.a.a.a.f -> net.youmi.android.a.a.a.f:
    boolean a -> a
    boolean b -> b
    boolean c -> c
    int d -> d
    long e -> e
    boolean a(android.content.Context,java.lang.String) -> a
    void a(boolean) -> a
    boolean a() -> a
    boolean b() -> b
    int c() -> c
    java.lang.String toString() -> toString
net.youmi.android.a.a.a.g -> net.youmi.android.a.a.a.g:
    long b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    int a -> a
    java.lang.String g -> g
    long a() -> a
    void a(long) -> a
    java.lang.String b() -> b
    void a(java.lang.String) -> a
    java.lang.String c() -> c
    void b(java.lang.String) -> b
    java.lang.String d() -> d
    void c(java.lang.String) -> c
    java.lang.String e() -> e
    void d(java.lang.String) -> d
    java.lang.String f() -> f
    void e(java.lang.String) -> e
    java.lang.String toString() -> toString
    int g() -> g
    void a(int) -> a
net.youmi.android.a.a.a.h -> net.youmi.android.a.a.a.h:
    long a -> a
    int b -> b
    long a() -> a
    void a(long) -> a
    int b() -> b
    void a(int) -> a
net.youmi.android.a.a.a.i -> net.youmi.android.a.a.a.i:
    int a -> a
    java.lang.String b -> b
    int c -> c
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    int b() -> b
    void a(int) -> a
    int c() -> c
    void b(int) -> b
net.youmi.android.a.a.a.j -> net.youmi.android.a.a.a.j:
    long a -> a
    java.util.List b -> b
    long a() -> a
    void a(long) -> a
    java.util.List b() -> b
    void a(net.youmi.android.a.a.a.i) -> a
    java.lang.String toString() -> toString
net.youmi.android.a.a.b -> net.youmi.android.a.a.b:
    net.youmi.android.a.a.c a() -> a
    net.youmi.android.a.a.c a(org.json.JSONObject,net.youmi.android.a.a.c) -> a
net.youmi.android.a.a.c -> net.youmi.android.a.a.c:
    org.json.JSONObject a() -> a
    boolean a(org.json.JSONObject) -> a
net.youmi.android.a.a.d -> net.youmi.android.a.a.d:
    net.youmi.android.a.a.d a -> a
    net.youmi.android.a.a.d a(android.content.Context) -> a
    net.youmi.android.a.a.a a(android.content.Context,java.lang.String,net.youmi.android.a.a.b) -> a
    boolean a(android.content.Context,net.youmi.android.a.a.a) -> a
    boolean a(java.lang.String) -> a
net.youmi.android.a.a.e -> net.youmi.android.a.a.e:
    void a(android.content.Context,net.youmi.android.a.h.d,java.util.List) -> a
net.youmi.android.a.b.a -> net.youmi.android.a.b.a:
    java.lang.String a(java.lang.String,java.lang.String) -> a
    java.lang.String b(java.lang.String,java.lang.String) -> b
net.youmi.android.a.c.a -> net.youmi.android.a.c.a:
    android.webkit.WebViewClient a(net.youmi.android.a.k.a.g) -> a
    int a() -> a
    android.webkit.WebChromeClient a(android.content.Context,net.youmi.android.a.k.a.b) -> a
    void a(android.content.Context,android.webkit.WebSettings) -> a
    void a(android.content.Context) -> a
net.youmi.android.a.c.b -> net.youmi.android.a.c.b:
    void a(android.content.Context) -> a
net.youmi.android.a.c.c -> net.youmi.android.a.c.c:
    int a() -> a
net.youmi.android.a.c.d -> net.youmi.android.a.c.d:
    net.youmi.android.a.k.a.b a -> a
    net.youmi.android.a.c.d a(net.youmi.android.a.k.a.b) -> a
    void onReceivedTitle(android.webkit.WebView,java.lang.String) -> onReceivedTitle
    void onProgressChanged(android.webkit.WebView,int) -> onProgressChanged
    boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsAlert
    boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsConfirm
    boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult) -> onJsPrompt
net.youmi.android.a.c.e -> net.youmi.android.a.c.e:
    net.youmi.android.a.c.e b(net.youmi.android.a.k.a.b) -> b
    void onExceededDatabaseQuota(java.lang.String,java.lang.String,long,long,long,android.webkit.WebStorage$QuotaUpdater) -> onExceededDatabaseQuota
    void onGeolocationPermissionsShowPrompt(java.lang.String,android.webkit.GeolocationPermissions$Callback) -> onGeolocationPermissionsShowPrompt
net.youmi.android.a.c.f -> net.youmi.android.a.c.f:
    android.webkit.GeolocationPermissions$Callback a -> a
    java.lang.String b -> b
    net.youmi.android.a.c.e c -> c
    void onClick(android.content.DialogInterface,int) -> onClick
net.youmi.android.a.c.g -> net.youmi.android.a.c.g:
    android.webkit.GeolocationPermissions$Callback a -> a
    java.lang.String b -> b
    net.youmi.android.a.c.e c -> c
    void onClick(android.content.DialogInterface,int) -> onClick
net.youmi.android.a.c.h -> net.youmi.android.a.c.h:
    android.webkit.GeolocationPermissions$Callback a -> a
    java.lang.String b -> b
    net.youmi.android.a.c.e c -> c
    void onClick(android.content.DialogInterface,int) -> onClick
net.youmi.android.a.c.i -> net.youmi.android.a.c.i:
    net.youmi.android.a.c.i c(net.youmi.android.a.k.a.b) -> c
    void onShowCustomView(android.view.View,android.webkit.WebChromeClient$CustomViewCallback) -> onShowCustomView
    void onHideCustomView() -> onHideCustomView
    android.graphics.Bitmap getDefaultVideoPoster() -> getDefaultVideoPoster
    android.view.View getVideoLoadingProgressView() -> getVideoLoadingProgressView
    void onReachedMaxAppCacheSize(long,long,android.webkit.WebStorage$QuotaUpdater) -> onReachedMaxAppCacheSize
net.youmi.android.a.c.j -> net.youmi.android.a.c.j:
    net.youmi.android.a.k.a.g a -> a
    net.youmi.android.a.c.j a(net.youmi.android.a.k.a.g) -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
net.youmi.android.a.c.k -> net.youmi.android.a.c.k:
    net.youmi.android.a.k.a.g a -> a
    net.youmi.android.a.c.k a(net.youmi.android.a.k.a.g) -> a
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onReceivedSslError(android.webkit.WebView,android.webkit.SslErrorHandler,android.net.http.SslError) -> onReceivedSslError
    void onPageFinished(android.webkit.WebView,java.lang.String) -> onPageFinished
    void onPageStarted(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> onPageStarted
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
net.youmi.android.a.c.l -> net.youmi.android.a.c.l:
    void a(android.content.Context,android.webkit.WebSettings) -> a
net.youmi.android.a.c.m -> net.youmi.android.a.c.m:
    void a(android.content.Context,android.webkit.WebSettings) -> a
net.youmi.android.a.d.a -> net.youmi.android.a.d.a:
    net.youmi.android.e.a.d a -> a
    net.youmi.android.e.a.d b -> b
    net.youmi.android.e.a.d c -> c
    net.youmi.android.e.a.d a(android.content.Context) -> a
    net.youmi.android.e.a.d b(android.content.Context) -> b
    net.youmi.android.e.a.d c(android.content.Context) -> c
net.youmi.android.a.e.a.a -> net.youmi.android.a.e.a.a:
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
net.youmi.android.a.e.a.b -> net.youmi.android.a.e.a.b:
    java.lang.String a -> a
    java.lang.String b -> b
    long c -> c
    java.lang.String h() -> h
    boolean c(java.lang.String) -> c
    void a(long) -> a
    long i() -> i
    java.lang.String j() -> j
    java.lang.String a() -> a
    void a(java.lang.String) -> a
net.youmi.android.a.e.a.c -> net.youmi.android.a.e.a.c:
    net.youmi.android.a.e.a.c a -> a
    net.youmi.android.a.e.a.c a(android.content.Context) -> a
    java.lang.String a(java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String,long) -> a
net.youmi.android.a.f.a -> net.youmi.android.a.f.a:
    net.youmi.android.c.e.a a(net.youmi.android.e.b.b) -> a
    net.youmi.android.e.b.d a() -> a
net.youmi.android.a.f.b -> net.youmi.android.a.f.b:
    net.youmi.android.a.f.b a -> a
    net.youmi.android.a.f.b a(android.content.Context) -> a
net.youmi.android.a.f.c -> net.youmi.android.a.f.c:
    net.youmi.android.a.f.c a -> a
    net.youmi.android.a.f.c a(android.content.Context) -> a
net.youmi.android.a.f.d -> net.youmi.android.a.f.d:
    net.youmi.android.a.f.d a -> a
    net.youmi.android.a.f.d a(android.content.Context) -> a
net.youmi.android.a.g.a -> net.youmi.android.a.g.a:
    net.youmi.android.a.g.a a -> a
    net.youmi.android.a.g.a b -> b
    net.youmi.android.a.g.a c -> c
    net.youmi.android.a.g.a d -> d
    net.youmi.android.a.g.a e -> e
    net.youmi.android.a.g.a f -> f
    java.io.File c(java.lang.String) -> c
    net.youmi.android.a.g.a a(android.content.Context,net.youmi.android.a.g.a,net.youmi.android.a.g.a,int,long) -> a
    net.youmi.android.a.g.a a(android.content.Context,int) -> a
    net.youmi.android.a.g.a b(android.content.Context,int) -> b
    net.youmi.android.a.g.a c(android.content.Context,int) -> c
    net.youmi.android.a.g.a d(android.content.Context,int) -> d
    net.youmi.android.a.g.a a(android.content.Context) -> a
    net.youmi.android.a.g.a b(android.content.Context) -> b
net.youmi.android.a.h.a -> net.youmi.android.a.h.a:
    net.youmi.android.a.h.e a() -> a
    boolean a(java.lang.Runnable) -> a
net.youmi.android.a.h.a.a -> net.youmi.android.a.h.a.a:
    java.lang.String a -> a
    java.lang.String b -> b
    long c -> c
    boolean d -> d
    boolean a() -> a
    java.lang.String h() -> h
    boolean c(java.lang.String) -> c
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void a(long) -> a
    long i() -> i
    java.lang.String j() -> j
net.youmi.android.a.h.a.b -> net.youmi.android.a.h.a.b:
    net.youmi.android.a.h.a.b a -> a
    net.youmi.android.a.h.a.b a(android.content.Context) -> a
    net.youmi.android.a.h.a.a a(java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String,long) -> a
    boolean b(java.lang.String) -> b
net.youmi.android.a.h.b -> net.youmi.android.a.h.b:
    void a(java.lang.String,java.lang.String) -> a
net.youmi.android.a.h.b.a -> net.youmi.android.a.h.b.a:
    java.lang.String a(net.youmi.android.a.h.d,net.youmi.android.a.h.a,java.lang.String) -> a
net.youmi.android.a.h.b.a.a -> net.youmi.android.a.h.b.a.a:
    org.json.JSONObject a(net.youmi.android.a.h.d,net.youmi.android.a.h.a,org.json.JSONObject) -> a
net.youmi.android.a.h.b.a.b -> net.youmi.android.a.h.b.a.b:
    org.json.JSONObject a(net.youmi.android.a.h.d,net.youmi.android.a.h.a,org.json.JSONObject) -> a
net.youmi.android.a.h.b.a.c -> net.youmi.android.a.h.b.a.c:
    org.json.JSONObject a(net.youmi.android.a.h.d,net.youmi.android.a.h.a,org.json.JSONObject) -> a
net.youmi.android.a.h.b.a.d -> net.youmi.android.a.h.b.a.d:
    int[] a -> a
net.youmi.android.a.h.b.a.e -> net.youmi.android.a.h.b.a.e:
    org.json.JSONObject a(net.youmi.android.a.h.d,net.youmi.android.a.h.a,org.json.JSONObject) -> a
net.youmi.android.a.h.b.a.f -> net.youmi.android.a.h.b.a.f:
    org.json.JSONObject a(net.youmi.android.a.h.d,net.youmi.android.a.h.a,org.json.JSONObject) -> a
net.youmi.android.a.h.b.a.g -> net.youmi.android.a.h.b.a.g:
    org.json.JSONObject a(net.youmi.android.a.h.d,net.youmi.android.a.h.a,org.json.JSONObject) -> a
net.youmi.android.a.h.b.a.h -> net.youmi.android.a.h.b.a.h:
    org.json.JSONObject a(net.youmi.android.a.h.d,net.youmi.android.a.h.a,org.json.JSONObject) -> a
net.youmi.android.a.h.b.a.i -> net.youmi.android.a.h.b.a.i:
    org.json.JSONObject a(net.youmi.android.a.h.d,net.youmi.android.a.h.a,org.json.JSONObject) -> a
net.youmi.android.a.h.b.a.j -> net.youmi.android.a.h.b.a.j:
    org.json.JSONObject a(net.youmi.android.a.h.d,net.youmi.android.a.h.a) -> a
net.youmi.android.a.h.b.b -> net.youmi.android.a.h.b.b:
    java.lang.String a(org.json.JSONObject) -> a
    org.json.JSONObject a(int) -> a
    java.lang.String b(int) -> b
net.youmi.android.a.h.b.b.a -> net.youmi.android.a.h.b.b.a:
    org.json.JSONObject a(net.youmi.android.a.h.d,net.youmi.android.a.h.a) -> a
net.youmi.android.a.h.b.b.b -> net.youmi.android.a.h.b.b.b:
    int[] a -> a
net.youmi.android.a.h.b.b.c -> net.youmi.android.a.h.b.b.c:
    org.json.JSONObject a(net.youmi.android.a.h.d,net.youmi.android.a.h.a) -> a
net.youmi.android.a.h.b.b.d -> net.youmi.android.a.h.b.b.d:
    int[] a -> a
net.youmi.android.a.h.b.b.e -> net.youmi.android.a.h.b.b.e:
    org.json.JSONObject a(net.youmi.android.a.h.d,net.youmi.android.a.h.a,org.json.JSONObject) -> a
net.youmi.android.a.h.b.b.f -> net.youmi.android.a.h.b.b.f:
    int[] a -> a
net.youmi.android.a.h.b.b.g -> net.youmi.android.a.h.b.b.g:
    org.json.JSONObject a(net.youmi.android.a.h.d,net.youmi.android.a.h.a,org.json.JSONObject) -> a
net.youmi.android.a.h.b.b.h -> net.youmi.android.a.h.b.b.h:
    int[] a -> a
net.youmi.android.a.h.b.b.i -> net.youmi.android.a.h.b.b.i:
    org.json.JSONObject a(net.youmi.android.a.h.d,net.youmi.android.a.h.a,org.json.JSONObject) -> a
net.youmi.android.a.h.b.b.j -> net.youmi.android.a.h.b.b.j:
    int[] a -> a
net.youmi.android.a.h.b.b.k -> net.youmi.android.a.h.b.b.k:
    org.json.JSONObject a(net.youmi.android.a.h.d,net.youmi.android.a.h.a) -> a
net.youmi.android.a.h.b.b.l -> net.youmi.android.a.h.b.b.l:
    int[] a -> a
net.youmi.android.a.h.b.b.m -> net.youmi.android.a.h.b.b.m:
    org.json.JSONObject a(net.youmi.android.a.h.d,net.youmi.android.a.h.a,org.json.JSONObject) -> a
net.youmi.android.a.h.b.b.n -> net.youmi.android.a.h.b.b.n:
    android.content.Context a -> a
    net.youmi.android.a.h.c.a.a b -> b
    net.youmi.android.a.h.b.b.m c -> c
    void run() -> run
net.youmi.android.a.h.b.c -> net.youmi.android.a.h.b.c:
    java.lang.String a(net.youmi.android.a.h.d,net.youmi.android.a.h.a,java.lang.String) -> a
    org.json.JSONObject a(net.youmi.android.a.h.d,net.youmi.android.a.h.a) -> a
net.youmi.android.a.h.b.c.a -> net.youmi.android.a.h.b.c.a:
    org.json.JSONObject a(net.youmi.android.a.h.d,net.youmi.android.a.h.a,org.json.JSONObject) -> a
net.youmi.android.a.h.b.c.b -> net.youmi.android.a.h.b.c.b:
    org.json.JSONObject a(net.youmi.android.a.h.d,net.youmi.android.a.h.a,org.json.JSONObject) -> a
net.youmi.android.a.h.b.c.c -> net.youmi.android.a.h.b.c.c:
    org.json.JSONObject a(net.youmi.android.a.h.d,net.youmi.android.a.h.a,org.json.JSONObject) -> a
net.youmi.android.a.h.b.d -> net.youmi.android.a.h.b.d:
    java.lang.String a(net.youmi.android.a.h.d,net.youmi.android.a.h.a,java.lang.String) -> a
    org.json.JSONObject a(net.youmi.android.a.h.d,net.youmi.android.a.h.a,org.json.JSONObject) -> a
net.youmi.android.a.h.b.d.a -> net.youmi.android.a.h.b.d.a:
    org.json.JSONObject a(net.youmi.android.a.h.d,net.youmi.android.a.h.a) -> a
net.youmi.android.a.h.b.d.b -> net.youmi.android.a.h.b.d.b:
    org.json.JSONObject a(net.youmi.android.a.h.d,net.youmi.android.a.h.a) -> a
net.youmi.android.a.h.b.e.a -> net.youmi.android.a.h.b.e.a:
    org.json.JSONObject a(net.youmi.android.a.h.d,net.youmi.android.a.h.a) -> a
net.youmi.android.a.h.b.e.b -> net.youmi.android.a.h.b.e.b:
    org.json.JSONObject a(net.youmi.android.a.h.d,net.youmi.android.a.h.a,org.json.JSONObject) -> a
net.youmi.android.a.h.b.e.c -> net.youmi.android.a.h.b.e.c:
    org.json.JSONObject a(net.youmi.android.a.h.d,net.youmi.android.a.h.a,org.json.JSONObject) -> a
net.youmi.android.a.h.b.e.d -> net.youmi.android.a.h.b.e.d:
    org.json.JSONObject a(net.youmi.android.a.h.d,net.youmi.android.a.h.a,org.json.JSONObject) -> a
net.youmi.android.a.h.b.e.e -> net.youmi.android.a.h.b.e.e:
    org.json.JSONObject a(net.youmi.android.a.h.d,net.youmi.android.a.h.a,org.json.JSONObject) -> a
net.youmi.android.a.h.b.f.a -> net.youmi.android.a.h.b.f.a:
    org.json.JSONObject a(net.youmi.android.a.h.d,net.youmi.android.a.h.a,org.json.JSONObject) -> a
net.youmi.android.a.h.b.f.b -> net.youmi.android.a.h.b.f.b:
    android.content.Context a -> a
    java.lang.String b -> b
    int c -> c
    net.youmi.android.a.h.b.f.a d -> d
    void run() -> run
net.youmi.android.a.h.b.g.a -> net.youmi.android.a.h.b.g.a:
    org.json.JSONObject a(net.youmi.android.a.h.d,net.youmi.android.a.h.a) -> a
net.youmi.android.a.h.b.g.b -> net.youmi.android.a.h.b.g.b:
    org.json.JSONObject a(net.youmi.android.a.h.d,net.youmi.android.a.h.a,org.json.JSONObject) -> a
net.youmi.android.a.h.b.g.c -> net.youmi.android.a.h.b.g.c:
    int[] a -> a
net.youmi.android.a.h.b.g.d -> net.youmi.android.a.h.b.g.d:
    org.json.JSONObject a(net.youmi.android.a.h.d,net.youmi.android.a.h.a,org.json.JSONObject) -> a
net.youmi.android.a.h.b.g.e -> net.youmi.android.a.h.b.g.e:
    int[] a -> a
net.youmi.android.a.h.b.h.a -> net.youmi.android.a.h.b.h.a:
    org.json.JSONObject a(net.youmi.android.a.h.d,net.youmi.android.a.h.a,org.json.JSONObject) -> a
net.youmi.android.a.h.b.h.b -> net.youmi.android.a.h.b.h.b:
    org.json.JSONObject a(net.youmi.android.a.h.d,net.youmi.android.a.h.a,org.json.JSONObject) -> a
net.youmi.android.a.h.b.h.c -> net.youmi.android.a.h.b.h.c:
    org.json.JSONObject a(net.youmi.android.a.h.d,net.youmi.android.a.h.a,org.json.JSONObject) -> a
    java.lang.String a(net.youmi.android.b.a.b,java.lang.String) -> a
net.youmi.android.a.h.c -> net.youmi.android.a.h.c:
    void a(java.lang.String) -> a
net.youmi.android.a.h.c.a.a -> net.youmi.android.a.h.c.a.a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void b(java.lang.String) -> b
    java.lang.String c() -> c
    void c(java.lang.String) -> c
    java.lang.String d() -> d
    void d(java.lang.String) -> d
    java.lang.String e() -> e
    void e(java.lang.String) -> e
    java.lang.String f() -> f
    void f(java.lang.String) -> f
    java.lang.String g() -> g
    void g(java.lang.String) -> g
    boolean h() -> h
net.youmi.android.a.h.c.b.a -> net.youmi.android.a.h.c.b.a:
    net.youmi.android.a.h.c.b.a a -> a
    java.util.LinkedList b -> b
    net.youmi.android.a.h.c.b.a a() -> a
    java.util.LinkedList b() -> b
    void a(net.youmi.android.a.h.b) -> a
    void b(net.youmi.android.a.h.b) -> b
    void a(java.lang.String,java.lang.String) -> a
net.youmi.android.a.h.c.b.b -> net.youmi.android.a.h.c.b.b:
    net.youmi.android.a.h.b a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    net.youmi.android.a.h.c.b.a d -> d
    void run() -> run
net.youmi.android.a.h.c.b.c -> net.youmi.android.a.h.c.b.c:
    android.content.Context a -> a
    net.youmi.android.a.h.c.b.c b -> b
    java.util.HashMap c -> c
    net.youmi.android.a.h.c.b.c a(android.content.Context) -> a
    boolean a(net.youmi.android.a.h.c.a.a) -> a
    void a(net.youmi.android.a.h.c.a.a,android.graphics.Bitmap) -> a
    void a(java.lang.String,android.graphics.Bitmap) -> a
    android.graphics.Bitmap a(android.graphics.Bitmap) -> a
    void a(java.lang.String) -> a
net.youmi.android.a.h.c.b.d -> net.youmi.android.a.h.c.b.d:
    android.content.Context a -> a
    java.util.ArrayList c -> c
    java.lang.String d -> d
    long e -> e
    org.json.JSONArray b -> b
    java.lang.String f -> f
    net.youmi.android.a.h.d g -> g
    void run() -> run
net.youmi.android.a.h.d -> net.youmi.android.a.h.d:
    android.content.Context a() -> a
    android.app.Activity b() -> b
    void a(net.youmi.android.a.k.a.c) -> a
    net.youmi.android.a.h.e c() -> c
    int d() -> d
    int e() -> e
    java.lang.String a(java.lang.String,java.lang.String) -> a
    java.lang.String a(net.youmi.android.a.h.i) -> a
    net.youmi.android.a.h.e f() -> f
    net.youmi.android.a.h.e a(net.youmi.android.a.h.k) -> a
    net.youmi.android.a.h.e a(net.youmi.android.a.h.m) -> a
    net.youmi.android.a.h.e a(net.youmi.android.a.h.h,net.youmi.android.a.h.l) -> a
    net.youmi.android.a.h.e a(android.content.Context,java.util.List) -> a
    net.youmi.android.a.h.e a(java.lang.String,java.lang.String,java.lang.String,long) -> a
    net.youmi.android.a.h.e a(java.lang.String) -> a
    net.youmi.android.a.h.e a(int,net.youmi.android.a.h.i) -> a
net.youmi.android.a.h.e -> net.youmi.android.a.h.e:
    net.youmi.android.a.h.e a -> a
    net.youmi.android.a.h.e b -> b
    net.youmi.android.a.h.e c -> c
    net.youmi.android.a.h.e[] d -> d
    net.youmi.android.a.h.e[] values() -> values
    net.youmi.android.a.h.e valueOf(java.lang.String) -> valueOf
net.youmi.android.a.h.f -> net.youmi.android.a.h.f:
    net.youmi.android.a.h.d a -> a
    net.youmi.android.a.h.a b -> b
    boolean d(java.lang.String) -> d
    boolean i(java.lang.String) -> i
    boolean e(java.lang.String) -> e
    boolean w(java.lang.String) -> w
    boolean dd(java.lang.String) -> dd
    boolean di(java.lang.String) -> di
    boolean de(java.lang.String) -> de
    boolean dw(java.lang.String) -> dw
    java.lang.String a(int,int,java.lang.String) -> a
    net.youmi.android.a.h.b.a a(int) -> a
    net.youmi.android.a.h.b.a b(int) -> b
    net.youmi.android.a.h.b.a c(int) -> c
    net.youmi.android.a.h.b.a d(int) -> d
    net.youmi.android.a.h.b.a e(int) -> e
    net.youmi.android.a.h.b.a f(int) -> f
    net.youmi.android.a.h.b.a g(int) -> g
    net.youmi.android.a.h.b.a h(int) -> h
net.youmi.android.a.h.g -> net.youmi.android.a.h.g:
    java.lang.String a(int,int,java.lang.String) -> a
    boolean d(java.lang.String) -> d
    boolean i(java.lang.String) -> i
    boolean w(java.lang.String) -> w
    boolean e(java.lang.String) -> e
    boolean di(java.lang.String) -> di
    boolean de(java.lang.String) -> de
    boolean dw(java.lang.String) -> dw
    boolean dd(java.lang.String) -> dd
    net.youmi.android.a.h.b.a a(int) -> a
    net.youmi.android.a.h.b.a b(int) -> b
    net.youmi.android.a.h.b.a c(int) -> c
    net.youmi.android.a.h.b.a d(int) -> d
    net.youmi.android.a.h.b.a e(int) -> e
    net.youmi.android.a.h.b.a f(int) -> f
    net.youmi.android.a.h.b.a g(int) -> g
    net.youmi.android.a.h.b.a h(int) -> h
net.youmi.android.a.h.h -> net.youmi.android.a.h.h:
    net.youmi.android.a.a.a.a a -> a
    int b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    boolean f -> f
    boolean g -> g
    net.youmi.android.a.h.i h -> h
    void a(int) -> a
    void a(java.lang.String) -> a
    java.lang.String a() -> a
    void b(java.lang.String) -> b
    void c(java.lang.String) -> c
    boolean b() -> b
    void a(boolean) -> a
    net.youmi.android.a.a.a.a c() -> c
    void a(net.youmi.android.a.a.a.a) -> a
    net.youmi.android.a.h.i d() -> d
    void a(net.youmi.android.a.h.i) -> a
    boolean e() -> e
    void b(boolean) -> b
net.youmi.android.a.h.i -> net.youmi.android.a.h.i:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    java.lang.String b() -> b
    void b(java.lang.String) -> b
    java.lang.String c() -> c
    void c(java.lang.String) -> c
    java.lang.String d() -> d
    void d(java.lang.String) -> d
    boolean e() -> e
    java.lang.String toString() -> toString
net.youmi.android.a.h.j -> net.youmi.android.a.h.j:
    int a -> a
    int b -> b
    java.lang.String c -> c
    int d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    int i -> i
    int j -> j
    java.lang.String a() -> a
    void a(java.lang.String) -> a
    int b() -> b
    java.lang.String c() -> c
    void b(java.lang.String) -> b
    int d() -> d
    void a(int) -> a
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    java.lang.String e() -> e
    void e(java.lang.String) -> e
    java.lang.String f() -> f
    void b(int) -> b
    int g() -> g
    int h() -> h
    int i() -> i
net.youmi.android.a.h.k -> net.youmi.android.a.h.k:
    java.util.ArrayList a -> a
    java.lang.String b -> b
    void a(java.lang.String) -> a
    boolean a(net.youmi.android.a.h.j) -> a
    net.youmi.android.a.h.j a(int) -> a
net.youmi.android.a.h.l -> net.youmi.android.a.h.l:
    long a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String a() -> a
    long b() -> b
    java.lang.String c() -> c
    void a(java.lang.String) -> a
    void a(long) -> a
    void b(java.lang.String) -> b
net.youmi.android.a.h.m -> net.youmi.android.a.h.m:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    void c(int) -> c
    void d(int) -> d
    void e(int) -> e
    void f(int) -> f
net.youmi.android.a.h.n -> net.youmi.android.a.h.n:
    long a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    void a(java.lang.String) -> a
    java.lang.String a() -> a
    java.lang.String h() -> h
    boolean c(java.lang.String) -> c
    long i() -> i
    java.lang.String j() -> j
net.youmi.android.a.h.o -> net.youmi.android.a.h.o:
    java.util.Hashtable a -> a
    net.youmi.android.a.h.o b -> b
    void a(android.content.Context,android.webkit.WebView,java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
    net.youmi.android.a.h.o a() -> a
    java.lang.String a(java.lang.String) -> a
net.youmi.android.a.h.p -> net.youmi.android.a.h.p:
    java.util.Hashtable a -> a
    net.youmi.android.a.h.p b -> b
    void a(android.content.Context,android.webkit.WebView,java.lang.String) -> a
    void a(java.lang.String,java.lang.String) -> a
    net.youmi.android.a.h.p a() -> a
    java.lang.String a(java.lang.String) -> a
net.youmi.android.a.h.q -> net.youmi.android.a.h.q:
    net.youmi.android.e.a.f a -> a
    net.youmi.android.e.a.f a(android.content.Context) -> a
    boolean a(android.content.Context,java.lang.String,java.lang.String,long) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String) -> a
net.youmi.android.a.h.r -> net.youmi.android.a.h.r:
    net.youmi.android.e.a.e a -> a
    net.youmi.android.e.a.e a(android.content.Context) -> a
    java.lang.String a(android.content.Context,java.lang.String) -> a
    boolean a(android.content.Context,java.lang.String,java.lang.String,long) -> a
net.youmi.android.a.h.s -> net.youmi.android.a.h.s:
    android.content.Context a -> a
    long b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    long g -> g
    boolean h -> h
    boolean i -> i
    void run() -> run
    int a() -> a
    void a(int) -> a
net.youmi.android.a.h.t -> net.youmi.android.a.h.t:
    void a(android.content.Context,android.webkit.WebView,java.lang.String) -> a
net.youmi.android.a.h.u -> net.youmi.android.a.h.u:
    android.content.Context a -> a
    java.lang.String b -> b
    android.webkit.WebView c -> c
    void run() -> run
net.youmi.android.a.i.a -> net.youmi.android.a.i.a:
    android.content.Context a -> a
    void onLocationChanged(android.location.Location) -> onLocationChanged
    void a() -> a
    void onProviderDisabled(java.lang.String) -> onProviderDisabled
    void onProviderEnabled(java.lang.String) -> onProviderEnabled
    void onStatusChanged(java.lang.String,int,android.os.Bundle) -> onStatusChanged
net.youmi.android.a.i.b -> net.youmi.android.a.i.b:
    android.location.Location a -> a
    net.youmi.android.a.i.a b -> b
    net.youmi.android.a.i.b c -> c
    android.content.Context d -> d
    net.youmi.android.a.i.b a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void a(android.location.Location) -> a
    android.location.Location a() -> a
net.youmi.android.a.i.c -> net.youmi.android.a.i.c:
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    java.lang.String f -> f
    java.lang.String a(android.content.Context) -> a
net.youmi.android.a.j.a -> net.youmi.android.a.j.a:
    net.youmi.android.c.k.a a -> a
    android.view.animation.Animation b -> b
    net.youmi.android.a.j.a a(android.content.Context,android.view.View,int) -> a
    void a() -> a
net.youmi.android.a.k.a -> net.youmi.android.a.k.a:
    android.webkit.WebView a -> a
    java.lang.String b -> b
    void run() -> run
net.youmi.android.a.k.a.a -> net.youmi.android.a.k.a.a:
    net.youmi.android.a.k.a.h a -> a
    android.content.Context b -> b
    net.youmi.android.a.h.d c -> c
    net.youmi.android.a.h.m d -> d
    void a(android.content.Context,net.youmi.android.a.h.m,net.youmi.android.a.h.d) -> a
    void a(int) -> a
    void onBackPressed() -> onBackPressed
    boolean a(java.lang.Runnable) -> a
    net.youmi.android.a.h.e a() -> a
    void a(java.lang.String) -> a
    boolean g() -> g
    boolean b(java.lang.String) -> b
    boolean a(java.lang.String,byte[]) -> a
    boolean h() -> h
net.youmi.android.a.k.a.b -> net.youmi.android.a.k.a.b:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    net.youmi.android.a.k.a.g d -> d
    net.youmi.android.a.k.a.e e -> e
    net.youmi.android.a.h.d f -> f
    net.youmi.android.a.h.a g -> g
    net.youmi.android.a.h.d a() -> a
    void a(net.youmi.android.a.h.d) -> a
    net.youmi.android.a.h.a b() -> b
    void a(net.youmi.android.a.h.a) -> a
    int c() -> c
    void a(int) -> a
    java.lang.String d() -> d
    void a(java.lang.String) -> a
    java.lang.String e() -> e
    void b(java.lang.String) -> b
    net.youmi.android.a.k.a.e f() -> f
    void a(net.youmi.android.a.k.a.e) -> a
    void a(net.youmi.android.a.k.a.g) -> a
    net.youmi.android.a.k.a.g g() -> g
    android.app.Activity h() -> h
net.youmi.android.a.k.a.c -> net.youmi.android.a.k.a.c:
    boolean g() -> g
    boolean b(java.lang.String) -> b
    boolean a(java.lang.String,byte[]) -> a
    boolean h() -> h
net.youmi.android.a.k.a.d -> net.youmi.android.a.k.a.d:
    boolean b() -> b
    boolean c() -> c
    boolean canGoBack() -> canGoBack
    boolean canGoForward() -> canGoForward
    void loadUrl(java.lang.String) -> loadUrl
    void clearHistory() -> clearHistory
    android.view.View getCurrentView() -> getCurrentView
    void reload() -> reload
    void postUrl(java.lang.String,byte[]) -> postUrl
net.youmi.android.a.k.a.e -> net.youmi.android.a.k.a.e:
    void a(android.webkit.WebView,int) -> a
    void b(android.webkit.WebView,java.lang.String) -> b
net.youmi.android.a.k.a.f -> net.youmi.android.a.k.a.f:
    void a(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> a
    void a(android.webkit.WebView,int,java.lang.String,java.lang.String) -> a
    void a(android.webkit.WebView,java.lang.String) -> a
net.youmi.android.a.k.a.g -> net.youmi.android.a.k.a.g:
    boolean c(android.webkit.WebView,java.lang.String) -> c
net.youmi.android.a.k.a.h -> net.youmi.android.a.k.a.h:
    net.youmi.android.a.k.a.d e -> e
    net.youmi.android.a.k.a.l f -> f
    net.youmi.android.a.k.a.k g -> g
    net.youmi.android.a.k.a.f h -> h
    boolean a -> a
    boolean b -> b
    boolean c -> c
    java.lang.String d -> d
    android.widget.RelativeLayout i -> i
    net.youmi.android.a.h.c j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    android.content.Context m -> m
    void a(java.lang.String) -> a
    boolean d() -> d
    void reload() -> reload
    void loadUrl(java.lang.String) -> loadUrl
    void postUrl(java.lang.String,byte[]) -> postUrl
    void a(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> a
    void a(android.webkit.WebView,int,java.lang.String,java.lang.String) -> a
    void a(android.webkit.WebView,java.lang.String) -> a
    void a(android.webkit.WebView,int) -> a
    void a(boolean,int) -> a
    void a(net.youmi.android.a.k.a.f) -> a
    void b(android.webkit.WebView,java.lang.String) -> b
    boolean b() -> b
    boolean c() -> c
    boolean canGoBack() -> canGoBack
    boolean canGoForward() -> canGoForward
    void clearHistory() -> clearHistory
    android.view.View getCurrentView() -> getCurrentView
    boolean c(android.webkit.WebView,java.lang.String) -> c
    net.youmi.android.a.h.e a() -> a
    boolean a(java.lang.Runnable) -> a
    void onClick(android.view.View) -> onClick
net.youmi.android.a.k.a.i -> net.youmi.android.a.k.a.i:
    boolean a -> a
    boolean b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    net.youmi.android.a.k.a.e f -> f
    net.youmi.android.a.k.a.g g -> g
    android.content.Context h -> h
    net.youmi.android.a.k.a.b i -> i
    void a(android.content.Context,net.youmi.android.a.k.a.b,net.youmi.android.a.h.f) -> a
    void a() -> a
    void a(net.youmi.android.a.h.f,int) -> a
    void a(int) -> a
    void d() -> d
    void a(net.youmi.android.a.k.a.g) -> a
    void a(net.youmi.android.a.k.a.e) -> a
    void setEnableOffersJsCodeLoader(boolean) -> setEnableOffersJsCodeLoader
    void setEnableOffersJsFileLoader(boolean) -> setEnableOffersJsFileLoader
    void a(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> a
    void a(android.webkit.WebView,int,java.lang.String,java.lang.String) -> a
    void a(android.webkit.WebView,java.lang.String) -> a
    void a(android.webkit.WebView,int) -> a
    void a(java.lang.String,java.lang.String) -> a
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void b(android.webkit.WebView,java.lang.String) -> b
    boolean b() -> b
    boolean c() -> c
    android.view.View getCurrentView() -> getCurrentView
    boolean c(android.webkit.WebView,java.lang.String) -> c
    void setUserAgentString(java.lang.String) -> setUserAgentString
    java.lang.String getUserAgentString() -> getUserAgentString
    android.content.Context a(net.youmi.android.a.k.a.i) -> a
net.youmi.android.a.k.a.j -> net.youmi.android.a.k.a.j:
    net.youmi.android.a.k.a.i a -> a
    void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long) -> onDownloadStart
net.youmi.android.a.k.a.k -> net.youmi.android.a.k.a.k:
    android.widget.TextView a -> a
    android.widget.Button b -> b
    android.widget.Button c -> c
    void setErrTips(java.lang.String) -> setErrTips
    android.widget.TextView getTipsView() -> getTipsView
    android.widget.Button getSetNetworkButton() -> getSetNetworkButton
    android.widget.Button getRefreshButton() -> getRefreshButton
net.youmi.android.a.k.a.l -> net.youmi.android.a.k.a.l:
    android.widget.ProgressBar a -> a
    android.widget.TextView b -> b
    net.youmi.android.a.k.a.n c -> c
    android.widget.LinearLayout d -> d
    void a(java.lang.String) -> a
    net.youmi.android.a.k.a.n getStyleConfig() -> getStyleConfig
net.youmi.android.a.k.a.m -> net.youmi.android.a.k.a.m:
net.youmi.android.a.k.a.n -> net.youmi.android.a.k.a.n:
    net.youmi.android.a.k.a.l a -> a
    float b -> b
    int c -> c
    android.graphics.drawable.Drawable d -> d
    int e -> e
    int f -> f
    net.youmi.android.a.k.a.n a(int) -> a
    net.youmi.android.a.k.a.n a(float) -> a
    net.youmi.android.a.k.a.n a(android.graphics.drawable.Drawable) -> a
    net.youmi.android.a.k.a.n b(int) -> b
net.youmi.android.b.a.a -> net.youmi.android.b.a.a:
    char[] b -> b
    int[] c -> c
    char[] a -> a
    java.lang.String a(byte[],java.lang.String,int) -> a
    java.lang.String a(int) -> a
    java.lang.String a(java.lang.String) -> a
    int a(char) -> a
    char b(int) -> b
net.youmi.android.b.a.b -> net.youmi.android.b.a.b:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    boolean f -> f
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(java.lang.String) -> a
    boolean f() -> f
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    boolean e() -> e
net.youmi.android.b.a.c -> net.youmi.android.b.a.c:
    void a(java.lang.String,java.io.ByteArrayOutputStream) -> a
net.youmi.android.b.b.a -> net.youmi.android.b.b.a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    int d -> d
    int e -> e
    java.lang.String f -> f
    boolean g -> g
    java.lang.String a(android.content.Context) -> a
    void a(android.content.Context,java.lang.String) -> a
    java.lang.String b(android.content.Context) -> b
    void b(android.content.Context,java.lang.String) -> b
    boolean c(android.content.Context) -> c
    java.lang.String d(android.content.Context) -> d
    int e(android.content.Context) -> e
    int f(android.content.Context) -> f
    java.lang.String g(android.content.Context) -> g
    void a(boolean) -> a
    boolean a() -> a
net.youmi.android.b.b.b -> net.youmi.android.b.b.b:
    boolean a(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    java.lang.String b(android.content.Context,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> b
net.youmi.android.banner.AdSize -> net.youmi.android.banner.AdSize:
    int FILL_PARENT -> FILL_PARENT
    int WRAP_CONTENT -> WRAP_CONTENT
    int LANDSPACE_AD_HEIGHT -> LANDSPACE_AD_HEIGHT
    int PORAIT_AD_HEIGHT -> PORAIT_AD_HEIGHT
    int LARGE_AD_HEIGHT -> LARGE_AD_HEIGHT
    net.youmi.android.banner.AdSize SIZE_320x50 -> SIZE_320x50
    net.youmi.android.banner.AdSize SIZE_300x250 -> SIZE_300x250
    net.youmi.android.banner.AdSize SIZE_468x60 -> SIZE_468x60
    net.youmi.android.banner.AdSize SIZE_728x90 -> SIZE_728x90
    int a -> a
    int b -> b
    int c -> c
    int d -> d
    int getAdWidth() -> getAdWidth
    int getAdHeight() -> getAdHeight
    int resizeWidth(android.content.Context) -> resizeWidth
    int resizeHeight(android.content.Context) -> resizeHeight
net.youmi.android.banner.AdView -> net.youmi.android.banner.AdView:
    net.youmi.android.banner.AdViewLinstener a -> a
    net.youmi.android.banner.b e -> e
    java.lang.String f -> f
    android.content.Context g -> g
    net.youmi.android.banner.AdSize b -> b
    int c -> c
    int d -> d
    int h -> h
    boolean i -> i
    void a() -> a
    void setAdListener(net.youmi.android.banner.AdViewLinstener) -> setAdListener
    boolean a(android.content.Context) -> a
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    void onWindowFocusChanged(boolean) -> onWindowFocusChanged
net.youmi.android.banner.AdViewLinstener -> net.youmi.android.banner.AdViewLinstener:
    void onReceivedAd(net.youmi.android.banner.AdView) -> onReceivedAd
    void onSwitchedAd(net.youmi.android.banner.AdView) -> onSwitchedAd
    void onFailedToReceivedAd(net.youmi.android.banner.AdView) -> onFailedToReceivedAd
net.youmi.android.banner.BannerManager -> net.youmi.android.banner.BannerManager:
    java.lang.String PROTOCOLVERSION -> PROTOCOLVERSION
    int a -> a
    java.util.HashMap b -> b
    net.youmi.android.banner.e getBannerObject(int) -> getBannerObject
    void setBannerObject(int,net.youmi.android.banner.e) -> setBannerObject
    java.lang.String checkPermissions(android.content.Context) -> checkPermissions
net.youmi.android.banner.a -> net.youmi.android.banner.a:
    android.content.Context f -> f
    net.youmi.android.a.k.a.i a -> a
    net.youmi.android.a.h.d b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    int g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    void a(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    void b() -> b
    void c() -> c
    void d() -> d
    net.youmi.android.a.k.a.i e() -> e
    void a(android.webkit.WebView,java.lang.String) -> a
    void a(android.webkit.WebView,java.lang.String,android.graphics.Bitmap) -> a
    void a(android.webkit.WebView,int,java.lang.String,java.lang.String) -> a
    net.youmi.android.a.h.e a() -> a
    boolean a(java.lang.Runnable) -> a
    boolean c(android.webkit.WebView,java.lang.String) -> c
    void a(android.webkit.WebView,int) -> a
    void b(android.webkit.WebView,java.lang.String) -> b
net.youmi.android.banner.b -> net.youmi.android.banner.b:
    android.content.Context a -> a
    int g -> g
    android.os.Handler b -> b
    net.youmi.android.banner.AdView c -> c
    int h -> h
    int i -> i
    java.util.Timer j -> j
    net.youmi.android.banner.c k -> k
    int d -> d
    net.youmi.android.banner.d e -> e
    net.youmi.android.banner.a f -> f
    void g() -> g
    void h() -> h
    void i() -> i
    void j() -> j
    void k() -> k
    void a(net.youmi.android.banner.e) -> a
    java.lang.String n() -> n
    void b(java.lang.String) -> b
    void l() -> l
    void m() -> m
    android.app.Activity b() -> b
    android.content.Context a() -> a
    net.youmi.android.a.h.e a(android.content.Context,java.util.List) -> a
    net.youmi.android.a.h.e a(net.youmi.android.a.h.h,net.youmi.android.a.h.l) -> a
    net.youmi.android.a.h.e a(net.youmi.android.a.h.k) -> a
    net.youmi.android.a.h.e a(net.youmi.android.a.h.m) -> a
    net.youmi.android.a.h.e c() -> c
    net.youmi.android.a.h.e f() -> f
    net.youmi.android.a.h.e a(java.lang.String,java.lang.String,java.lang.String,long) -> a
    net.youmi.android.a.h.e a(java.lang.String) -> a
    java.lang.String a(net.youmi.android.a.h.i) -> a
    java.lang.String a(java.lang.String,java.lang.String) -> a
    net.youmi.android.a.h.e a(int,net.youmi.android.a.h.i) -> a
    int d() -> d
    int e() -> e
    void a(net.youmi.android.a.k.a.c) -> a
    int a(net.youmi.android.banner.b) -> a
net.youmi.android.banner.c -> net.youmi.android.banner.c:
    net.youmi.android.banner.b a -> a
    void run() -> run
net.youmi.android.banner.d -> net.youmi.android.banner.d:
    net.youmi.android.banner.b a -> a
    void handleMessage(android.os.Message) -> handleMessage
net.youmi.android.banner.e -> net.youmi.android.banner.e:
    int a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    java.lang.String f -> f
    int g -> g
    int a() -> a
    void a(int) -> a
    java.lang.String b() -> b
    void a(java.lang.String) -> a
    java.lang.String c() -> c
    void b(java.lang.String) -> b
    java.lang.String d() -> d
    void c(java.lang.String) -> c
    java.lang.String e() -> e
    void d(java.lang.String) -> d
    java.lang.String f() -> f
    void e(java.lang.String) -> e
    int g() -> g
    void b(int) -> b
net.youmi.android.c.a -> net.youmi.android.c.a:
    java.lang.String a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    int f -> f
    int g -> g
    java.lang.String h -> h
    java.lang.String i -> i
    java.lang.String a() -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String b(android.content.Context) -> b
    java.lang.String l(android.content.Context) -> l
    java.lang.String c(android.content.Context) -> c
    java.lang.String m(android.content.Context) -> m
    java.lang.String d(android.content.Context) -> d
    java.lang.String e(android.content.Context) -> e
    java.lang.String f(android.content.Context) -> f
    void a(android.content.Context,java.lang.String) -> a
    java.lang.String g(android.content.Context) -> g
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    void h(android.content.Context) -> h
    java.lang.String i(android.content.Context) -> i
    int j(android.content.Context) -> j
    int k(android.content.Context) -> k
net.youmi.android.c.a.a -> net.youmi.android.c.a.a:
    android.view.animation.AnimationSet a(android.content.Context,int,int,int) -> a
net.youmi.android.c.b.a -> net.youmi.android.c.b.a:
    char[] a -> a
    char[] b -> b
    byte a(char) -> a
    java.lang.String a(byte[]) -> a
net.youmi.android.c.b.b -> net.youmi.android.c.b.b:
    org.json.JSONObject a(java.lang.String) -> a
    java.lang.String a(org.json.JSONObject,java.lang.String,java.lang.String) -> a
    boolean a(org.json.JSONObject,java.lang.String,boolean) -> a
    java.lang.String a(org.json.JSONArray,int,java.lang.String) -> a
    int a(org.json.JSONObject,java.lang.String,int) -> a
    long a(org.json.JSONObject,java.lang.String,long) -> a
    org.json.JSONObject a(org.json.JSONObject,java.lang.String,org.json.JSONObject) -> a
    org.json.JSONObject a(org.json.JSONArray,int,org.json.JSONObject) -> a
    org.json.JSONArray a(org.json.JSONObject,java.lang.String,org.json.JSONArray) -> a
net.youmi.android.c.b.c -> net.youmi.android.c.b.c:
    java.util.Properties a(android.content.Context,java.lang.String) -> a
    boolean a(android.content.Context,java.util.Properties,java.lang.String) -> a
net.youmi.android.c.b.d -> net.youmi.android.c.b.d:
    java.util.Random a -> a
    int a(int) -> a
net.youmi.android.c.b.e -> net.youmi.android.c.b.e:
    boolean a(java.lang.String) -> a
    java.lang.String a() -> a
    java.lang.String b(java.lang.String) -> b
net.youmi.android.c.c.a -> net.youmi.android.c.c.a:
    byte[] a(java.lang.String) -> a
    byte[] a(byte[]) -> a
    byte[] a(byte[],int) -> a
    byte[] b(byte[]) -> b
    void a(java.io.InputStream,java.io.OutputStream,int) -> a
    void a(java.io.InputStream,java.io.OutputStream) -> a
    void b(java.io.InputStream,java.io.OutputStream) -> b
net.youmi.android.c.c.b -> net.youmi.android.c.c.b:
    java.io.InputStream a -> a
    int[] b -> b
    int c -> c
    boolean d -> d
    int read() -> read
    void a() -> a
    void close() -> close
net.youmi.android.c.c.c -> net.youmi.android.c.c.c:
    java.io.OutputStream a -> a
    int b -> b
    int c -> c
    int d -> d
    int e -> e
    void write(int) -> write
    void close() -> close
    void a() -> a
net.youmi.android.c.c.d -> net.youmi.android.c.c.d:
    java.lang.String a -> a
    char b -> b
net.youmi.android.c.c.e -> net.youmi.android.c.c.e:
    java.lang.String a(java.lang.String) -> a
    java.lang.String a(byte[]) -> a
    java.lang.String a(java.io.File) -> a
    boolean a(java.io.File,java.lang.String) -> a
net.youmi.android.c.c.f -> net.youmi.android.c.c.f:
    byte[] a() -> a
    java.security.Key a(java.lang.String) -> a
    byte[] a(byte[],java.lang.String,byte[]) -> a
    java.lang.String a(java.lang.String,java.lang.String,byte[]) -> a
    byte[] b(byte[],java.lang.String,byte[]) -> b
    java.lang.String b(java.lang.String,java.lang.String,byte[]) -> b
net.youmi.android.c.c.g -> net.youmi.android.c.c.g:
    java.lang.String a(java.lang.String) -> a
net.youmi.android.c.d.a -> net.youmi.android.c.d.a:
    java.lang.String a -> a
    boolean b -> b
    void a(java.lang.String) -> a
    void a(java.lang.String,java.lang.Object[]) -> a
    void b(java.lang.String,java.lang.Object[]) -> b
    void a(java.lang.String,java.lang.Throwable) -> a
    void c(java.lang.String,java.lang.Object[]) -> c
    void a(java.lang.String,java.lang.String,java.lang.Object[]) -> a
    void b(java.lang.String,java.lang.Throwable) -> b
    void a(java.lang.Throwable) -> a
    void d(java.lang.String,java.lang.Object[]) -> d
    void a(int,java.lang.String,java.lang.String,java.lang.Object[]) -> a
    void a(int,java.lang.String,java.lang.String,java.lang.Throwable) -> a
net.youmi.android.c.d.b -> net.youmi.android.c.d.b:
    void a(java.lang.String,java.lang.Object[]) -> a
    void a(java.lang.String,java.lang.Throwable) -> a
    void a(java.lang.Throwable) -> a
    void b(java.lang.Throwable) -> b
    void b(java.lang.String,java.lang.Object[]) -> b
    void c(java.lang.Throwable) -> c
    void a(java.lang.String,java.lang.String,java.lang.Object[]) -> a
net.youmi.android.c.d.c -> net.youmi.android.c.d.c:
    java.util.Hashtable a -> a
    java.lang.String a() -> a
    void a(java.lang.String) -> a
net.youmi.android.c.e.a -> net.youmi.android.c.e.a:
    long a -> a
    long b -> b
    java.io.File c -> c
    void b() -> b
    java.io.File[] a() -> a
    java.lang.String a(java.lang.String) -> a
    java.io.File b(java.lang.String) -> b
    boolean a(java.io.File) -> a
    void c() -> c
    java.io.File a(net.youmi.android.c.e.a) -> a
    boolean a(net.youmi.android.c.e.a,java.io.File) -> a
    long b(net.youmi.android.c.e.a) -> b
net.youmi.android.c.e.b -> net.youmi.android.c.e.b:
    net.youmi.android.c.e.a a -> a
    void run() -> run
net.youmi.android.c.e.c -> net.youmi.android.c.e.c:
    net.youmi.android.c.e.a a -> a
    int a(java.io.File,java.io.File) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
net.youmi.android.c.f.a -> net.youmi.android.c.f.a:
    void a(java.lang.String) -> a
net.youmi.android.c.f.b -> net.youmi.android.c.f.b:
    java.lang.String a(android.content.Context) -> a
net.youmi.android.c.f.c -> net.youmi.android.c.f.c:
    android.content.Context a -> a
    long b -> b
    long c -> c
    boolean d -> d
    java.lang.String e -> e
    java.io.File f -> f
    int a() -> a
    long b() -> b
    int c() -> c
    long d() -> d
net.youmi.android.c.f.d -> net.youmi.android.c.f.d:
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.util.List) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.util.List,java.lang.String) -> a
    java.lang.String a(android.content.Context,org.apache.http.HttpResponse,java.lang.String) -> a
net.youmi.android.c.f.e -> net.youmi.android.c.f.e:
    java.lang.String a -> a
    java.lang.String a() -> a
    org.apache.http.params.HttpParams a(android.content.Context) -> a
    org.apache.http.impl.client.DefaultHttpClient b(android.content.Context) -> b
    org.apache.http.impl.client.DefaultHttpClient a(android.content.Context,net.youmi.android.c.f.a) -> a
    boolean a(java.lang.String,java.lang.String) -> a
    long a(android.content.Context,java.lang.String) -> a
net.youmi.android.c.f.f -> net.youmi.android.c.f.f:
    void a(java.lang.String) -> a
net.youmi.android.c.f.g -> net.youmi.android.c.f.g:
    net.youmi.android.c.f.a a -> a
    boolean isRedirectRequested(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> isRedirectRequested
    java.net.URI getLocationURI(org.apache.http.HttpResponse,org.apache.http.protocol.HttpContext) -> getLocationURI
net.youmi.android.c.f.h -> net.youmi.android.c.f.h:
    boolean a(android.content.Context) -> a
    boolean b(android.content.Context) -> b
net.youmi.android.c.g.a -> net.youmi.android.c.g.a:
    byte[] a -> a
    android.graphics.drawable.NinePatchDrawable a(android.content.Context) -> a
net.youmi.android.c.g.b -> net.youmi.android.c.g.b:
    android.graphics.Bitmap b -> b
net.youmi.android.c.h.a -> net.youmi.android.c.h.a:
    net.youmi.android.c.h.a a -> a
    android.os.Handler b -> b
    net.youmi.android.c.h.a a() -> a
    boolean b() -> b
    boolean a(java.lang.Runnable) -> a
net.youmi.android.c.i.a -> net.youmi.android.c.i.a:
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    java.lang.String a() -> a
    java.lang.String b() -> b
    int c() -> c
net.youmi.android.c.i.b -> net.youmi.android.c.i.b:
    long a() -> a
    long a(android.content.Context) -> a
net.youmi.android.c.i.c -> net.youmi.android.c.i.c:
    boolean a -> a
    int b -> b
    int c -> c
    float d -> d
    int e -> e
    int f -> f
    int g -> g
    int h -> h
    net.youmi.android.c.i.c i -> i
    boolean a() -> a
    int b() -> b
    int c() -> c
    int d() -> d
    int e() -> e
    float f() -> f
    net.youmi.android.c.i.c a(android.content.Context) -> a
    net.youmi.android.c.i.c b(android.content.Context) -> b
    int g() -> g
    int h() -> h
    int a(int) -> a
    float a(float) -> a
net.youmi.android.c.i.d -> net.youmi.android.c.i.d:
    boolean a(java.io.File,java.lang.String) -> a
net.youmi.android.c.i.e -> net.youmi.android.c.i.e:
    boolean a(android.content.Context,java.lang.String,int,java.lang.String) -> a
    boolean a(android.content.Context,java.lang.String,int) -> a
    boolean b(android.content.Context,java.lang.String,int) -> b
    boolean c(android.content.Context,java.lang.String,int) -> c
    boolean d(android.content.Context,java.lang.String,int) -> d
    android.content.Intent a(android.content.Context,java.lang.String) -> a
    boolean b(android.content.Context,java.lang.String) -> b
    boolean b(android.content.Context,java.lang.String,int,java.lang.String) -> b
    boolean c(android.content.Context,java.lang.String) -> c
net.youmi.android.c.i.f -> net.youmi.android.c.i.f:
    void a(android.content.Context) -> a
    android.content.Intent a(android.content.Context,java.lang.String,java.lang.String,java.lang.String) -> a
net.youmi.android.c.i.g -> net.youmi.android.c.i.g:
    java.lang.String a(android.content.Context) -> a
    net.youmi.android.c.i.a a(android.content.Context,java.lang.String) -> a
    android.content.pm.PackageInfo b(android.content.Context,java.lang.String) -> b
    int a(android.content.Context,java.lang.String,int) -> a
    android.content.Intent c(android.content.Context,java.lang.String) -> c
    android.content.Intent d(android.content.Context,java.lang.String) -> d
    void e(android.content.Context,java.lang.String) -> e
    void f(android.content.Context,java.lang.String) -> f
net.youmi.android.c.i.h -> net.youmi.android.c.i.h:
    boolean a(android.content.Context,java.lang.String) -> a
    boolean a(android.content.Context) -> a
    boolean b(android.content.Context) -> b
    boolean c(android.content.Context) -> c
    boolean d(android.content.Context) -> d
    boolean e(android.content.Context) -> e
    boolean f(android.content.Context) -> f
    boolean g(android.content.Context) -> g
    boolean h(android.content.Context) -> h
net.youmi.android.c.i.i -> net.youmi.android.c.i.i:
    boolean a(android.content.Context) -> a
net.youmi.android.c.i.j -> net.youmi.android.c.i.j:
    boolean a() -> a
    boolean a(android.content.Context) -> a
    boolean a(android.content.Context,long) -> a
    long b() -> b
    java.lang.String c() -> c
    long b(android.content.Context) -> b
net.youmi.android.c.j.a -> net.youmi.android.c.j.a:
    java.util.List a -> a
    java.util.List b() -> b
    void a(java.lang.Object) -> a
    void b(java.lang.Object) -> b
net.youmi.android.c.k.a -> net.youmi.android.c.k.a:
    android.view.WindowManager a -> a
    android.view.WindowManager$LayoutParams b -> b
    android.widget.LinearLayout c -> c
    android.view.View d -> d
    boolean a() -> a
    boolean b() -> b
    void a(android.view.animation.Animation) -> a
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
net.youmi.android.d.a -> net.youmi.android.d.a:
    net.youmi.android.d.a a(android.content.Context,net.youmi.android.a.h.m) -> a
net.youmi.android.d.a.a -> net.youmi.android.d.a.a:
    android.app.Activity a -> a
    android.content.Context b -> b
    net.youmi.android.a.k.a.c c -> c
    net.youmi.android.a.h.j d -> d
    android.content.Context a() -> a
    android.app.Activity b() -> b
    android.content.Context g() -> g
    net.youmi.android.a.h.e c() -> c
    int d() -> d
    int e() -> e
    java.lang.String a(java.lang.String,java.lang.String) -> a
    java.lang.String a(net.youmi.android.a.h.i) -> a
    net.youmi.android.a.h.e f() -> f
    net.youmi.android.a.h.e a(net.youmi.android.a.h.k) -> a
    net.youmi.android.a.h.e a(net.youmi.android.a.h.m) -> a
    net.youmi.android.a.h.e a(net.youmi.android.a.h.h,net.youmi.android.a.h.l) -> a
    net.youmi.android.a.h.e a(android.content.Context,java.util.List) -> a
    net.youmi.android.a.h.e a(java.lang.String,java.lang.String,java.lang.String,long) -> a
    net.youmi.android.a.h.e a(java.lang.String) -> a
    net.youmi.android.a.h.e a(int,net.youmi.android.a.h.i) -> a
    void a(net.youmi.android.a.k.a.c) -> a
    android.content.Context a(net.youmi.android.d.a.a) -> a
net.youmi.android.d.a.b -> net.youmi.android.d.a.b:
    net.youmi.android.a.h.h a -> a
    net.youmi.android.a.h.l b -> b
    net.youmi.android.d.a.a c -> c
    void run() -> run
net.youmi.android.d.b -> net.youmi.android.d.b:
    android.app.Activity a -> a
    net.youmi.android.a.h.m b -> b
    void run() -> run
net.youmi.android.d.b.a -> net.youmi.android.d.b.a:
    net.youmi.android.d.b.a d -> d
    net.youmi.android.d.b.d a -> a
    net.youmi.android.d.b.c b -> b
    android.util.SparseArray e -> e
    android.util.SparseArray f -> f
    net.youmi.android.d.b.a a(android.content.Context) -> a
    void b(net.youmi.android.e.b.b) -> b
    void a(net.youmi.android.e.b.b,java.io.File) -> a
    void c(net.youmi.android.e.b.b) -> c
    void a(int) -> a
    java.lang.String a(java.io.File) -> a
    void b(net.youmi.android.e.b.b,java.io.File) -> b
    void a(java.lang.String,net.youmi.android.a.h.h,net.youmi.android.e.b.b) -> a
    void b(java.io.File) -> b
    void a(net.youmi.android.a.h.h,net.youmi.android.a.h.l) -> a
    net.youmi.android.a.h.i l(net.youmi.android.e.b.b) -> l
    net.youmi.android.a.h.l d(net.youmi.android.e.b.b) -> d
    net.youmi.android.a.h.h e(net.youmi.android.e.b.b) -> e
    boolean a(java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String) -> a
    int f(net.youmi.android.e.b.b) -> f
net.youmi.android.d.b.b -> net.youmi.android.d.b.b:
    int a -> a
    android.app.Notification b -> b
    android.app.PendingIntent c -> c
    android.app.PendingIntent d -> d
    android.app.NotificationManager e -> e
    android.content.Context f -> f
    net.youmi.android.a.a.a.g g -> g
    net.youmi.android.a.a.a.a h -> h
    java.lang.String i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    void b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    boolean e() -> e
    boolean f() -> f
    boolean g() -> g
    boolean c(java.lang.String) -> c
    void a(int,long) -> a
    void a(java.lang.String) -> a
    void a() -> a
    void b(java.lang.String) -> b
net.youmi.android.d.b.c -> net.youmi.android.d.b.c:
    net.youmi.android.d.b.a a -> a
    android.content.Context b -> b
    java.util.HashMap c -> c
    void a(net.youmi.android.e.b.b,java.io.File) -> a
    void a(net.youmi.android.e.b.b) -> a
    void b(net.youmi.android.e.b.b) -> b
    void a(net.youmi.android.e.b.b,long,long,int,long) -> a
    net.youmi.android.d.b.b d(net.youmi.android.e.b.b) -> d
    int c(net.youmi.android.e.b.b) -> c
    void a(android.content.Context,int,java.lang.String) -> a
net.youmi.android.d.b.d -> net.youmi.android.d.b.d:
    net.youmi.android.d.b.a a -> a
    void a(net.youmi.android.e.b.b,java.io.File) -> a
    void a(net.youmi.android.e.b.b) -> a
    void b(net.youmi.android.e.b.b) -> b
    void a(net.youmi.android.e.b.b,long,long,int,long) -> a
    void a(net.youmi.android.a.h.h,net.youmi.android.a.h.l) -> a
    void a(net.youmi.android.e.b.b,int,int,long) -> a
    void a(net.youmi.android.a.h.h,net.youmi.android.a.h.l,int,int,long) -> a
net.youmi.android.d.b.e -> net.youmi.android.d.b.e:
    java.lang.String a -> a
    android.content.Context b -> b
    java.lang.String c -> c
    void a(android.content.Context) -> a
    void run() -> run
net.youmi.android.d.b.f -> net.youmi.android.d.b.f:
    int a -> a
    int b -> b
    org.json.JSONObject a() -> a
    boolean a(org.json.JSONObject) -> a
    int b() -> b
    void a(int) -> a
    int c() -> c
    void b(int) -> b
net.youmi.android.d.b.g -> net.youmi.android.d.b.g:
    net.youmi.android.d.b.g a -> a
    net.youmi.android.a.a.c a() -> a
    net.youmi.android.d.b.g b() -> b
net.youmi.android.d.c.a -> net.youmi.android.d.c.a:
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(android.content.Context,net.youmi.android.a.h.i,int) -> a
    java.lang.String a(android.content.Context,net.youmi.android.a.h.i) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String,int) -> a
    java.lang.String a(android.content.Context,int,java.lang.String) -> a
net.youmi.android.d.d.a -> net.youmi.android.d.d.a:
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
net.youmi.android.d.d.b -> net.youmi.android.d.d.b:
    android.content.Context a -> a
    void run() -> run
net.youmi.android.d.d.c -> net.youmi.android.d.d.c:
    android.content.Context a -> a
    void run() -> run
net.youmi.android.d.e.a.a -> net.youmi.android.d.e.a.a:
    void a(android.content.Context) -> a
    void a(android.content.Intent) -> a
net.youmi.android.d.e.a.b -> net.youmi.android.d.e.a.b:
    net.youmi.android.d.e.a.b a -> a
    android.content.IntentFilter b -> b
    void b(android.content.Context) -> b
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
    void a(android.content.Context) -> a
net.youmi.android.d.e.a.c -> net.youmi.android.d.e.a.c:
    android.content.Context a -> a
    int b -> b
    java.lang.String c -> c
    void a(android.content.Context,java.util.List) -> a
    void a(android.content.Context,java.lang.String) -> a
    void a(android.content.Context,int) -> a
    void run() -> run
net.youmi.android.d.e.a.d -> net.youmi.android.d.e.a.d:
    android.content.Context a -> a
    net.youmi.android.a.h.i b -> b
    int[] c -> c
    void run() -> run
net.youmi.android.d.f.a -> net.youmi.android.d.f.a:
    java.util.HashMap a -> a
    java.util.HashMap b -> b
    java.util.HashMap c -> c
    java.util.HashMap b() -> b
    java.util.HashMap c() -> c
    java.util.HashMap d() -> d
    java.util.HashMap a() -> a
net.youmi.android.d.f.a.a -> net.youmi.android.d.f.a.a:
    android.graphics.drawable.NinePatchDrawable a(android.content.Context) -> a
net.youmi.android.d.g.a -> net.youmi.android.d.g.a:
    android.content.Context a -> a
    void a(java.lang.String,int,int) -> a
net.youmi.android.dev.AppUpdateInfo -> net.youmi.android.dev.AppUpdateInfo:
    java.lang.String a -> a
    int b -> b
    java.lang.String c -> c
    java.lang.String d -> d
    int getVersionCode() -> getVersionCode
    void a(int) -> a
    java.lang.String getVersionName() -> getVersionName
    void a(java.lang.String) -> a
    java.lang.String getUpdateTips() -> getUpdateTips
    void b(java.lang.String) -> b
    java.lang.String getUrl() -> getUrl
    void c(java.lang.String) -> c
net.youmi.android.dev.a -> net.youmi.android.dev.a:
    java.lang.String b(android.content.Context) -> b
    net.youmi.android.dev.AppUpdateInfo a(android.content.Context,java.lang.String) -> a
    net.youmi.android.dev.AppUpdateInfo a(android.content.Context) -> a
net.youmi.android.e.a.a -> net.youmi.android.e.a.a:
    java.lang.String h() -> h
    boolean c(java.lang.String) -> c
    long i() -> i
    java.lang.String j() -> j
net.youmi.android.e.a.b -> net.youmi.android.e.a.b:
    java.lang.String a -> a
    net.youmi.android.e.a.d b -> b
    boolean a(android.content.Context,java.lang.String,byte[],long) -> a
    byte[] a(android.content.Context,java.lang.String) -> a
    boolean a(java.lang.String) -> a
net.youmi.android.e.a.c -> net.youmi.android.e.a.c:
    byte[] a(byte[],java.lang.String) -> a
    byte[] b(byte[],java.lang.String) -> b
net.youmi.android.e.a.d -> net.youmi.android.e.a.d:
    net.youmi.android.e.a.d a -> a
    net.youmi.android.e.a.d b -> b
    net.youmi.android.e.a.d c -> c
    java.lang.String d -> d
    int e -> e
    android.database.sqlite.SQLiteDatabase f -> f
    net.youmi.android.e.a.d d(android.content.Context) -> d
    net.youmi.android.e.a.d e(android.content.Context) -> e
    net.youmi.android.e.a.d f(android.content.Context) -> f
    void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    java.lang.String b() -> b
    java.lang.String c(java.lang.String) -> c
    boolean a(java.lang.String,byte[],long) -> a
    byte[] a(java.lang.String) -> a
    void a(android.content.ContentValues,java.lang.String,java.lang.String) -> a
    void a(android.content.ContentValues,java.lang.String,byte[]) -> a
    void a(android.content.ContentValues,java.lang.String,long) -> a
    boolean a(java.lang.String,java.lang.String,java.lang.String) -> a
    boolean a(android.content.ContentValues,java.lang.String,java.lang.String,java.lang.String) -> a
    boolean a(android.content.ContentValues,java.lang.String) -> a
    void a() -> a
    boolean b(java.lang.String) -> b
    boolean d(java.lang.String) -> d
    void close() -> close
net.youmi.android.e.a.e -> net.youmi.android.e.a.e:
    net.youmi.android.e.a.f a -> a
    boolean a(net.youmi.android.e.a.a) -> a
    boolean b(net.youmi.android.e.a.a) -> b
    boolean c(java.lang.String) -> c
net.youmi.android.e.a.f -> net.youmi.android.e.a.f:
    net.youmi.android.e.a.b a -> a
    android.content.Context b -> b
    boolean a(java.lang.String,java.lang.String,long) -> a
    java.lang.String a(java.lang.String,java.lang.String) -> a
    boolean a(java.lang.String) -> a
net.youmi.android.e.b.a -> net.youmi.android.e.b.a:
net.youmi.android.e.b.a.a -> net.youmi.android.e.b.a.a:
    boolean b(java.lang.String) -> b
    void b(net.youmi.android.e.b.b) -> b
    void j(net.youmi.android.e.b.b) -> j
    void a(net.youmi.android.e.b.b,java.io.File) -> a
    void f(net.youmi.android.e.b.b,java.io.File) -> f
    void c(net.youmi.android.e.b.b) -> c
    void k(net.youmi.android.e.b.b) -> k
    void b(net.youmi.android.e.b.b,java.io.File) -> b
    void g(net.youmi.android.e.b.b,java.io.File) -> g
    void a(net.youmi.android.e.b.c,net.youmi.android.e.b.b,java.io.File) -> a
    void a(net.youmi.android.e.b.c,net.youmi.android.e.b.b) -> a
    void a(net.youmi.android.e.b.c,net.youmi.android.e.b.b,long,long,int,long) -> a
    void b(net.youmi.android.e.b.c,net.youmi.android.e.b.b) -> b
    void b(net.youmi.android.e.b.c,net.youmi.android.e.b.b,java.io.File) -> b
    void a(java.lang.Object,net.youmi.android.e.b.b,long,long,int,long) -> a
    void a(java.lang.Object,net.youmi.android.e.b.b,java.io.File) -> a
    void a(java.lang.Object,net.youmi.android.e.b.b) -> a
    void b(java.lang.Object,net.youmi.android.e.b.b,java.io.File) -> b
    void b(java.lang.Object,net.youmi.android.e.b.b) -> b
net.youmi.android.e.b.a.b -> net.youmi.android.e.b.a.b:
    android.content.Context a -> a
    net.youmi.android.c.e.a b -> b
    java.util.HashMap c -> c
    java.util.HashSet d -> d
    android.graphics.Bitmap a(java.lang.String) -> a
    android.graphics.Bitmap b(java.lang.String) -> b
    android.graphics.Bitmap a(net.youmi.android.e.b.b) -> a
    android.graphics.Bitmap a(java.io.File) -> a
    boolean a(net.youmi.android.e.b.b,android.graphics.Bitmap) -> a
    void i(net.youmi.android.e.b.b) -> i
    void a(net.youmi.android.e.b.b,long,long,int,long) -> a
    void h(net.youmi.android.e.b.b) -> h
    void d(net.youmi.android.e.b.b,java.io.File) -> d
    void e(net.youmi.android.e.b.b,java.io.File) -> e
    boolean c(net.youmi.android.e.b.b,java.io.File) -> c
    boolean g(net.youmi.android.e.b.b) -> g
net.youmi.android.e.b.a.c -> net.youmi.android.e.b.a.c:
    android.content.Context a -> a
    net.youmi.android.c.e.a b -> b
    java.util.HashSet c -> c
    boolean a(java.lang.String) -> a
    java.io.File b(java.lang.String) -> b
    void d(net.youmi.android.e.b.b,java.io.File) -> d
    void i(net.youmi.android.e.b.b) -> i
    void e(net.youmi.android.e.b.b,java.io.File) -> e
    void a(net.youmi.android.e.b.b,long,long,int,long) -> a
    void h(net.youmi.android.e.b.b) -> h
    boolean c(net.youmi.android.e.b.b,java.io.File) -> c
    boolean g(net.youmi.android.e.b.b) -> g
net.youmi.android.e.b.a.d -> net.youmi.android.e.b.a.d:
    java.util.HashSet a -> a
    java.util.HashMap b -> b
    java.util.HashMap d -> d
    java.util.HashSet e -> e
    android.content.Context c -> c
    android.content.Context c() -> c
    boolean a(java.lang.String) -> a
    boolean a(java.lang.String,java.lang.String) -> a
    java.io.File a(net.youmi.android.e.b.b,java.lang.String) -> a
    net.youmi.android.c.e.a a(net.youmi.android.e.b.b) -> a
    net.youmi.android.e.b.d a() -> a
    boolean b(java.lang.String) -> b
    boolean c(java.lang.String) -> c
    void j(net.youmi.android.e.b.b) -> j
    void b(java.lang.Object,net.youmi.android.e.b.b) -> b
    void h(net.youmi.android.e.b.b) -> h
    void f(net.youmi.android.e.b.b,java.io.File) -> f
    void d(net.youmi.android.e.b.b,java.io.File) -> d
    void b(java.lang.Object,net.youmi.android.e.b.b,java.io.File) -> b
    void k(net.youmi.android.e.b.b) -> k
    void a(java.lang.Object,net.youmi.android.e.b.b) -> a
    void i(net.youmi.android.e.b.b) -> i
    void g(net.youmi.android.e.b.b,java.io.File) -> g
    void a(java.lang.Object,net.youmi.android.e.b.b,java.io.File) -> a
    void e(net.youmi.android.e.b.b,java.io.File) -> e
    void a(java.lang.Object,net.youmi.android.e.b.b,long,long,int,long) -> a
    void a(net.youmi.android.e.b.b,long,long,int,long) -> a
    void a(net.youmi.android.e.b.a.h,net.youmi.android.e.b.b,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(net.youmi.android.e.b.a.h,net.youmi.android.e.b.b) -> a
    void a(net.youmi.android.e.b.a.h) -> a
    boolean c(net.youmi.android.e.b.b,java.io.File) -> c
    boolean g(net.youmi.android.e.b.b) -> g
net.youmi.android.e.b.a.e -> net.youmi.android.e.b.a.e:
    net.youmi.android.e.b.a.e a -> a
    int b -> b
    int c -> c
    java.util.HashMap d -> d
    net.youmi.android.e.b.a.e a() -> a
    boolean a(android.content.Context,net.youmi.android.e.b.b,java.io.File,net.youmi.android.e.b.e) -> a
    void a(net.youmi.android.e.b.b,long,long,int,long) -> a
    void a(net.youmi.android.e.b.b) -> a
    void a(net.youmi.android.e.b.b,java.io.File) -> a
    void b(net.youmi.android.e.b.b,java.io.File) -> b
    void b(net.youmi.android.e.b.b) -> b
    void a(net.youmi.android.e.b.b,net.youmi.android.e.b.a.k) -> a
net.youmi.android.e.b.a.f -> net.youmi.android.e.b.a.f:
net.youmi.android.e.b.a.g -> net.youmi.android.e.b.a.g:
    int a -> a
    java.io.File b -> b
    java.io.File c -> c
    int d -> d
    int e -> e
    boolean f -> f
    boolean g -> g
    net.youmi.android.c.f.c h -> h
    android.content.Context i -> i
    int j -> j
    int k -> k
    void run() -> run
    void a(boolean) -> a
    void f() -> f
    boolean a() -> a
    boolean b() -> b
    long c() -> c
    long d() -> d
    int e() -> e
net.youmi.android.e.b.a.h -> net.youmi.android.e.b.a.h:
    net.youmi.android.e.b.h a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    boolean d -> d
    void a() -> a
    void b() -> b
    void onDownloadStart(java.lang.String,java.lang.String,java.lang.String,java.lang.String,long) -> onDownloadStart
    void run() -> run
net.youmi.android.e.b.a.i -> net.youmi.android.e.b.a.i:
    boolean onJsAlert(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsAlert
    boolean onJsConfirm(android.webkit.WebView,java.lang.String,java.lang.String,android.webkit.JsResult) -> onJsConfirm
    boolean onJsPrompt(android.webkit.WebView,java.lang.String,java.lang.String,java.lang.String,android.webkit.JsPromptResult) -> onJsPrompt
net.youmi.android.e.b.a.j -> net.youmi.android.e.b.a.j:
    boolean shouldOverrideUrlLoading(android.webkit.WebView,java.lang.String) -> shouldOverrideUrlLoading
    void onReceivedError(android.webkit.WebView,int,java.lang.String,java.lang.String) -> onReceivedError
net.youmi.android.e.b.a.k -> net.youmi.android.e.b.a.k:
    boolean a -> a
    net.youmi.android.e.b.b b -> b
    net.youmi.android.e.b.a.g c -> c
    java.io.File d -> d
    java.io.File e -> e
    android.content.Context f -> f
    net.youmi.android.e.b.a.l g -> g
    net.youmi.android.e.b.e h -> h
    net.youmi.android.e.b.b.a i -> i
    net.youmi.android.e.b.b.f j -> j
    net.youmi.android.e.b.b.g k -> k
    net.youmi.android.e.b.b.b l -> l
    net.youmi.android.e.b.b.j m -> m
    net.youmi.android.e.b.b.i n -> n
    net.youmi.android.e.b.b.h o -> o
    net.youmi.android.e.b.b.e p -> p
    net.youmi.android.e.b.b.d q -> q
    net.youmi.android.e.b.b.c r -> r
    void a(java.io.File) -> a
    int hashCode() -> hashCode
    java.io.File a() -> a
    java.io.File b() -> b
    net.youmi.android.e.b.b c() -> c
    net.youmi.android.e.b.a.g d() -> d
    net.youmi.android.e.b.e e() -> e
    boolean f() -> f
    net.youmi.android.e.b.b.a t() -> t
    net.youmi.android.e.b.b.a g() -> g
    net.youmi.android.e.b.b.a h() -> h
    net.youmi.android.e.b.b.a i() -> i
    net.youmi.android.e.b.b.a j() -> j
    net.youmi.android.e.b.b.a k() -> k
    net.youmi.android.e.b.b.a l() -> l
    net.youmi.android.e.b.b.a m() -> m
    net.youmi.android.e.b.b.a n() -> n
    void a(net.youmi.android.e.b.b.a) -> a
    boolean o() -> o
    java.lang.Void a(java.lang.Void[]) -> a
    void p() -> p
    void q() -> q
    void r() -> r
    void s() -> s
    void a(int,long,long,long) -> a
    void a(net.youmi.android.e.b.a.l[]) -> a
    void a(net.youmi.android.e.b.a.l) -> a
    void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
net.youmi.android.e.b.a.l -> net.youmi.android.e.b.a.l:
    int a -> a
    long b -> b
    long c -> c
    long d -> d
    int e -> e
net.youmi.android.e.b.b -> net.youmi.android.e.b.b:
    java.lang.String a -> a
    java.lang.String b -> b
    int c -> c
    boolean d -> d
    long e -> e
    java.lang.String f -> f
    java.lang.String g -> g
    java.lang.String h -> h
    java.lang.String a() -> a
    java.lang.String b() -> b
    boolean c() -> c
    int hashCode() -> hashCode
    boolean equals(java.lang.Object) -> equals
    void a(long) -> a
    long d() -> d
    void a(java.lang.String) -> a
    java.lang.String e() -> e
    void b(java.lang.String) -> b
    java.lang.String f() -> f
net.youmi.android.e.b.b.a -> net.youmi.android.e.b.b.a:
    long a -> a
    net.youmi.android.e.b.a.k b -> b
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
net.youmi.android.e.b.b.b -> net.youmi.android.e.b.b.b:
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
net.youmi.android.e.b.b.c -> net.youmi.android.e.b.b.c:
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
net.youmi.android.e.b.b.d -> net.youmi.android.e.b.b.d:
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
net.youmi.android.e.b.b.e -> net.youmi.android.e.b.b.e:
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
net.youmi.android.e.b.b.f -> net.youmi.android.e.b.b.f:
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
net.youmi.android.e.b.b.g -> net.youmi.android.e.b.b.g:
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
net.youmi.android.e.b.b.h -> net.youmi.android.e.b.b.h:
    long c -> c
    boolean d -> d
    long e -> e
    int f -> f
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
net.youmi.android.e.b.b.i -> net.youmi.android.e.b.b.i:
    long c -> c
    boolean d -> d
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
net.youmi.android.e.b.b.j -> net.youmi.android.e.b.b.j:
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
net.youmi.android.e.b.c -> net.youmi.android.e.b.c:
    void a(net.youmi.android.e.b.b,java.io.File) -> a
    void a(net.youmi.android.e.b.b) -> a
    void b(net.youmi.android.e.b.b) -> b
    void a(net.youmi.android.e.b.b,long,long,int,long) -> a
net.youmi.android.e.b.d -> net.youmi.android.e.b.d:
    java.lang.String a(net.youmi.android.e.b.b,java.lang.String) -> a
net.youmi.android.e.b.e -> net.youmi.android.e.b.e:
    boolean c(net.youmi.android.e.b.b,java.io.File) -> c
    boolean g(net.youmi.android.e.b.b) -> g
net.youmi.android.e.b.f -> net.youmi.android.e.b.f:
    void a(net.youmi.android.e.b.b,long,long,int,long) -> a
    void h(net.youmi.android.e.b.b) -> h
net.youmi.android.e.b.g -> net.youmi.android.e.b.g:
    void d(net.youmi.android.e.b.b,java.io.File) -> d
    void i(net.youmi.android.e.b.b) -> i
    void e(net.youmi.android.e.b.b,java.io.File) -> e
net.youmi.android.e.b.h -> net.youmi.android.e.b.h:
    void a(net.youmi.android.e.b.a.h,net.youmi.android.e.b.b,java.lang.String,java.lang.String,java.lang.String) -> a
    void a(net.youmi.android.e.b.a.h,net.youmi.android.e.b.b) -> a
    void a(net.youmi.android.e.b.a.h) -> a
net.youmi.android.e.b.i -> net.youmi.android.e.b.i:
    void a(java.lang.String,android.graphics.Bitmap) -> a
    void a(java.lang.String) -> a
net.youmi.android.e.b.j -> net.youmi.android.e.b.j:
    net.youmi.android.e.b.j a -> a
    net.youmi.android.e.b.j a() -> a
    java.lang.String a(net.youmi.android.e.b.b,java.lang.String) -> a
net.youmi.android.f.a.a -> net.youmi.android.f.a.a:
    java.lang.String a(android.content.Context,net.youmi.android.banner.AdSize) -> a
    java.lang.String a(android.content.Context) -> a
    java.lang.String a(android.content.Context,java.lang.String,java.lang.String) -> a
    java.lang.String b(android.content.Context,java.lang.String,java.lang.String) -> b
    java.lang.String a(android.content.Context,java.lang.String) -> a
    java.lang.String b(android.content.Context,java.lang.String) -> b
net.youmi.android.f.a.b -> net.youmi.android.f.a.b:
    void a(boolean,int) -> a
net.youmi.android.f.a.c -> net.youmi.android.f.a.c:
    java.io.InputStream c -> c
    int d -> d
    int a -> a
    int b -> b
    boolean e -> e
    int f -> f
    int g -> g
    int[] h -> h
    int[] i -> i
    int[] j -> j
    int k -> k
    int l -> l
    int m -> m
    int n -> n
    boolean o -> o
    boolean p -> p
    int q -> q
    int r -> r
    int s -> s
    int t -> t
    int u -> u
    int v -> v
    int w -> w
    int x -> x
    int y -> y
    android.graphics.Bitmap z -> z
    android.graphics.Bitmap A -> A
    net.youmi.android.f.a.d B -> B
    boolean C -> C
    byte[] D -> D
    int E -> E
    int F -> F
    int G -> G
    boolean H -> H
    int I -> I
    int J -> J
    short[] K -> K
    byte[] L -> L
    byte[] M -> M
    byte[] N -> N
    net.youmi.android.f.a.d O -> O
    int P -> P
    net.youmi.android.f.a.b Q -> Q
    byte[] R -> R
    java.lang.String S -> S
    boolean T -> T
    void a(byte[]) -> a
    void a(java.io.InputStream) -> a
    void a(java.lang.String,boolean) -> a
    boolean a(java.lang.String) -> a
    java.lang.String e() -> e
    void a(android.graphics.Bitmap,java.lang.String) -> a
    void run() -> run
    void a() -> a
    int b() -> b
    android.graphics.Bitmap c() -> c
    void f() -> f
    android.graphics.Bitmap a(int) -> a
    net.youmi.android.f.a.d b(int) -> b
    net.youmi.android.f.a.d d() -> d
    int g() -> g
    int h() -> h
    void i() -> i
    boolean j() -> j
    void k() -> k
    int l() -> l
    int m() -> m
    int[] c(int) -> c
    void n() -> n
    void o() -> o
    void p() -> p
    void q() -> q
    void r() -> r
    void s() -> s
    int t() -> t
    void u() -> u
    void v() -> v
net.youmi.android.f.a.d -> net.youmi.android.f.a.d:
    android.graphics.Bitmap a -> a
    int b -> b
    java.lang.String c -> c
    net.youmi.android.f.a.d d -> d
net.youmi.android.f.a.e -> net.youmi.android.f.a.e:
    net.youmi.android.f.a.c a -> a
    android.graphics.Bitmap b -> b
    boolean c -> c
    boolean d -> d
    net.youmi.android.f.a.h e -> e
    android.content.Context f -> f
    boolean g -> g
    android.view.View h -> h
    net.youmi.android.f.a.i i -> i
    android.os.Handler j -> j
    void setGifDecoderImage(byte[]) -> setGifDecoderImage
    void setGifDecoderImage(java.io.InputStream) -> setGifDecoderImage
    void setAsBackground(android.view.View) -> setAsBackground
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void setGifImage(byte[]) -> setGifImage
    void setGifImage(java.io.InputStream) -> setGifImage
    void setGifImage(int) -> setGifImage
    void setGifImageType(net.youmi.android.f.a.i) -> setGifImageType
    void a(boolean,int) -> a
    void a() -> a
    void b() -> b
    android.view.View a(net.youmi.android.f.a.e) -> a
    android.graphics.Bitmap b(net.youmi.android.f.a.e) -> b
    void c(net.youmi.android.f.a.e) -> c
    net.youmi.android.f.a.c d(net.youmi.android.f.a.e) -> d
    boolean e(net.youmi.android.f.a.e) -> e
    android.graphics.Bitmap a(net.youmi.android.f.a.e,android.graphics.Bitmap) -> a
    void f(net.youmi.android.f.a.e) -> f
    boolean g(net.youmi.android.f.a.e) -> g
    android.os.Handler h(net.youmi.android.f.a.e) -> h
net.youmi.android.f.a.f -> net.youmi.android.f.a.f:
    net.youmi.android.f.a.e a -> a
    void handleMessage(android.os.Message) -> handleMessage
net.youmi.android.f.a.g -> net.youmi.android.f.a.g:
    int[] a -> a
net.youmi.android.f.a.h -> net.youmi.android.f.a.h:
    net.youmi.android.f.a.e a -> a
    void run() -> run
net.youmi.android.f.a.i -> net.youmi.android.f.a.i:
    net.youmi.android.f.a.i a -> a
    net.youmi.android.f.a.i b -> b
    net.youmi.android.f.a.i c -> c
    int d -> d
    net.youmi.android.f.a.i[] e -> e
    net.youmi.android.f.a.i[] values() -> values
    net.youmi.android.f.a.i valueOf(java.lang.String) -> valueOf
net.youmi.android.f.a.j -> net.youmi.android.f.a.j:
    java.lang.Object c -> c
    void run() -> run
net.youmi.android.g.a -> net.youmi.android.g.a:
    int[] a() -> a
    int[] b() -> b
    int[] c() -> c
net.youmi.android.g.a.a -> net.youmi.android.g.a.a:
    android.graphics.Bitmap a(java.lang.String) -> a
net.youmi.android.g.a.b -> net.youmi.android.g.a.b:
    java.lang.String a() -> a
    java.lang.String b() -> b
    java.lang.String c() -> c
    java.lang.String d() -> d
    java.lang.String e() -> e
    java.lang.String f() -> f
    java.lang.String g() -> g
net.youmi.android.g.b -> net.youmi.android.g.b:
    net.youmi.android.g.a a -> a
net.youmi.android.g.c -> net.youmi.android.g.c:
    android.content.Context a -> a
    net.youmi.android.g.d b -> b
    android.view.View c -> c
    android.view.View d -> d
    android.view.View e -> e
    android.view.View f -> f
    android.view.View g -> g
    void a() -> a
    void a(android.widget.TableRow,int,android.view.View,android.widget.RelativeLayout$LayoutParams) -> a
    void setBackEnable(boolean) -> setBackEnable
    void setForwardEnable(boolean) -> setForwardEnable
    void onClick(android.view.View) -> onClick
net.youmi.android.g.d -> net.youmi.android.g.d:
    void b() -> b
    void c() -> c
    void d() -> d
    void e() -> e
    void f() -> f
net.youmi.android.g.e -> net.youmi.android.g.e:
    void a(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> a
    int[] a() -> a
    int[] b() -> b
    int[] c() -> c
    int[] d() -> d
    int[] e() -> e
    int[] f() -> f
net.youmi.android.g.f -> net.youmi.android.g.f:
    net.youmi.android.g.e a -> a
net.youmi.android.g.g -> net.youmi.android.g.g:
    net.youmi.android.g.e a -> a
net.youmi.android.spot.SpotManager -> net.youmi.android.spot.SpotManager:
    java.lang.String PROTOCOLVERSION -> PROTOCOLVERSION
    net.youmi.android.spot.b a -> a
    java.lang.String c -> c
    java.lang.String d -> d
    java.lang.String e -> e
    int f -> f
    long g -> g
    int h -> h
    boolean b -> b
    int NORMAL_PIC -> NORMAL_PIC
    int GIF_PIC -> GIF_PIC
    net.youmi.android.spot.SpotManager i -> i
    android.content.Context j -> j
    net.youmi.android.spot.SpotManager getInstance(android.content.Context) -> getInstance
    void loadSpotAds() -> loadSpotAds
    void a(boolean,boolean) -> a
    android.app.Dialog getSpotDialog() -> getSpotDialog
    void showSpotAds(android.content.Context) -> showSpotAds
    void showSpotAds(android.content.Context,int) -> showSpotAds
    void a(android.content.Context,int) -> a
    void a(int) -> a
    void d(android.content.Context) -> d
    boolean b() -> b
    void a(android.content.Context,java.lang.String) -> a
    void a(android.content.Context) -> a
    void a(android.content.Context,java.lang.String,boolean,int) -> a
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    void setClk(android.content.Context,java.lang.String) -> setClk
    void setShow(android.content.Context,java.lang.String) -> setShow
    int a(java.lang.String) -> a
    void a() -> a
    void a(net.youmi.android.spot.SpotManager,boolean,boolean) -> a
    void a(net.youmi.android.spot.SpotManager,int) -> a
net.youmi.android.spot.a -> net.youmi.android.spot.a:
    boolean a -> a
    android.content.Context b -> b
    net.youmi.android.spot.SpotManager c -> c
    java.lang.String a(java.lang.Void[]) -> a
    void a(java.lang.String) -> a
    void onPostExecute(java.lang.Object) -> onPostExecute
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
net.youmi.android.spot.b -> net.youmi.android.spot.b:
    android.content.Context f -> f
    boolean g -> g
    java.lang.String h -> h
    int i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    java.lang.String l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    java.lang.String o -> o
    int p -> p
    int q -> q
    int r -> r
    int s -> s
    int t -> t
    java.lang.String u -> u
    android.widget.LinearLayout a -> a
    android.widget.RelativeLayout b -> b
    android.widget.ImageView v -> v
    android.widget.ImageView w -> w
    net.youmi.android.f.a.e x -> x
    android.graphics.Bitmap c -> c
    android.graphics.Bitmap d -> d
    java.io.File e -> e
    int y -> y
    net.youmi.android.spot.e z -> z
    void b() -> b
    void onClick(android.view.View) -> onClick
    void onAttachedToWindow() -> onAttachedToWindow
    void a(android.content.Context) -> a
    void b(android.content.Context) -> b
    void c(android.content.Context) -> c
    byte[] a(java.io.File) -> a
    void show() -> show
    void e(net.youmi.android.e.b.b,java.io.File) -> e
    void i(net.youmi.android.e.b.b) -> i
    void d(net.youmi.android.e.b.b,java.io.File) -> d
    void a(net.youmi.android.e.b.b,long,long,int,long) -> a
    void h(net.youmi.android.e.b.b) -> h
    void a(java.lang.String) -> a
    void a(java.lang.String,android.graphics.Bitmap) -> a
    void dismiss() -> dismiss
    java.lang.String a(net.youmi.android.spot.b) -> a
    java.lang.String b(net.youmi.android.spot.b) -> b
    android.widget.ImageView a(net.youmi.android.spot.b,android.widget.ImageView) -> a
    android.content.Context c(net.youmi.android.spot.b) -> c
    android.widget.ImageView d(net.youmi.android.spot.b) -> d
    int e(net.youmi.android.spot.b) -> e
    int f(net.youmi.android.spot.b) -> f
    int a() -> a
    android.widget.ImageView g(net.youmi.android.spot.b) -> g
    int h(net.youmi.android.spot.b) -> h
net.youmi.android.spot.c -> net.youmi.android.spot.c:
    android.content.Context a -> a
    net.youmi.android.spot.b b -> b
    void run() -> run
net.youmi.android.spot.d -> net.youmi.android.spot.d:
    android.content.Context a -> a
    net.youmi.android.spot.b b -> b
    void run() -> run
net.youmi.android.spot.e -> net.youmi.android.spot.e:
    net.youmi.android.spot.b a -> a
    void handleMessage(android.os.Message) -> handleMessage
net.youmi.android.spot.f -> net.youmi.android.spot.f:
    java.lang.String a() -> a
net.youmi.android.spot.g -> net.youmi.android.spot.g:
    net.youmi.android.spot.SpotManager a -> a
    void run() -> run
net.youmi.android.spot.h -> net.youmi.android.spot.h:
    int a -> a
    net.youmi.android.spot.SpotManager b -> b
    void run() -> run
net.youmi.android.spot.i -> net.youmi.android.spot.i:
    android.content.Context a -> a
    void run() -> run
net.youmi.android.spot.j -> net.youmi.android.spot.j:
    android.content.Context a -> a
    void run() -> run
o -> s:
    void a(d,java.util.HashMap,android.webkit.WebView) -> a
p -> t:
    void a(d,java.util.HashMap,android.webkit.WebView) -> a
q -> u:
    void a(d,java.util.HashMap,android.webkit.WebView) -> a
r -> v:
    void a(d,java.util.HashMap,android.webkit.WebView) -> a
s -> w:
    void a(d,java.util.HashMap,android.webkit.WebView) -> a
t -> x:
    void a(java.lang.String) -> a
    void b(java.lang.String) -> b
    void a(java.lang.String,java.lang.Throwable) -> a
    void c(java.lang.String) -> c
    void d(java.lang.String) -> d
    void e(java.lang.String) -> e
    void b(java.lang.String,java.lang.Throwable) -> b
    boolean a(java.lang.String,int) -> a
u -> y:
    java.lang.Boolean a -> a
    java.lang.String b -> b
    java.lang.String c -> c
    android.media.AudioManager d -> d
    android.util.DisplayMetrics e -> e
    boolean f -> f
    boolean g -> g
    java.lang.String h -> h
    java.lang.String a(android.content.Context) -> a
    boolean b(android.content.Context) -> b
    boolean a() -> a
    java.lang.String a(java.lang.String) -> a
    java.lang.String c(android.content.Context) -> c
    java.lang.String d(android.content.Context) -> d
    u$a e(android.content.Context) -> e
    java.lang.String f(android.content.Context) -> f
    android.util.DisplayMetrics a(android.app.Activity) -> a
    java.lang.String a(android.location.Location) -> a
    java.lang.String b(java.lang.String) -> b
    java.util.HashMap a(android.net.Uri) -> a
    boolean b() -> b
    java.lang.String a(android.webkit.WebView) -> a
    void b(android.webkit.WebView) -> b
u$a -> z:
    u$a a -> a
    u$a b -> b
    u$a c -> c
    u$a d -> d
    u$a e -> e
    u$a f -> f
    u$a[] g -> g
    u$a[] values() -> values
    u$a valueOf(java.lang.String) -> valueOf
v -> aa:
    boolean a -> a
    java.lang.String a(byte[]) -> a
v$a -> ab:
    byte[] a -> a
    int b -> b
v$b -> ac:
    byte[] h -> h
    byte[] i -> i
    byte[] j -> j
    int c -> c
    int k -> k
    boolean d -> d
    boolean e -> e
    boolean f -> f
    byte[] l -> l
    boolean g -> g
    boolean a(byte[],int) -> a
w -> ad:
    java.lang.Void a(java.lang.String[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
x -> ae:
    java.lang.ref.WeakReference a -> a
    void run() -> run
